;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 01/11/2018 11:34:52
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2F62      	GOTO       1890
_interrupt:
;Whey.c,300 :: 		void interrupt(){
0x0004	0x0870      	MOVF       R0, 0
0x0005	0x0020      	MOVLB      0
0x0006	0x00A8      	MOVWF      40
0x0007	0x0871      	MOVF       R1, 0
0x0008	0x00A7      	MOVWF      39
0x0009	0x0872      	MOVF       R2, 0
0x000A	0x00A6      	MOVWF      38
0x000B	0x0873      	MOVF       R3, 0
0x000C	0x00A5      	MOVWF      37
0x000D	0x0874      	MOVF       R4, 0
0x000E	0x00A4      	MOVWF      36
0x000F	0x0875      	MOVF       R5, 0
0x0010	0x00A3      	MOVWF      35
0x0011	0x0876      	MOVF       R6, 0
0x0012	0x00A2      	MOVWF      34
;Whey.c,301 :: 		if(TMR1IF_bit)            //interrupcao pelo estouro do Timer1
0x0013	0x3180      	MOVLP      0
0x0014	0x1C11      	BTFSS      TMR1IF_bit, BitPos(TMR1IF_bit+0)
0x0015	0x281A      	GOTO       L_interrupt28
;Whey.c,303 :: 		TMR1IF_bit = 0;          //Limpa a flag de interrupcao
0x0016	0x1011      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;Whey.c,304 :: 		numberInterruptionsTimer1++;   //incrementa a flag do overflow do timer1
0x0017	0x0AB1      	INCF       _numberInterruptionsTimer1, 1
0x0018	0x1903      	BTFSC      STATUS, 2
0x0019	0x0AB2      	INCF       _numberInterruptionsTimer1+1, 1
;Whey.c,305 :: 		}
L_interrupt28:
;Whey.c,307 :: 		if(CCP2IF_bit && CCP2M0_bit)            //Interrupcao do modulo CCP2 e modo de captura configurado para borda de subida?
0x001A	0x1C12      	BTFSS      CCP2IF_bit, BitPos(CCP2IF_bit+0)
0x001B	0x2836      	GOTO       L_interrupt31
0x001C	0x0025      	MOVLB      5
0x001D	0x1C1A      	BTFSS      CCP2M0_bit, BitPos(CCP2M0_bit+0)
0x001E	0x2836      	GOTO       L_interrupt31
L__interrupt76:
;Whey.c,309 :: 		CCP2IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP2
0x001F	0x0021      	MOVLB      1
0x0020	0x1012      	BCF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,310 :: 		CCP4IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP4
0x0021	0x1293      	BCF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,311 :: 		TMR1ON_bit = 0x00;                     //Pausa o TIMER1
0x0022	0x0020      	MOVLB      0
0x0023	0x1018      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,312 :: 		CCP2CON     = 0x04;                    //Configura captura por borda de descida
0x0024	0x3004      	MOVLW      4
0x0025	0x0025      	MOVLB      5
0x0026	0x009A      	MOVWF      CCP2CON
;Whey.c,313 :: 		timeUpSignal1     = Micros();                //Guarda o valor do timer1 da primeira captura.
0x0027	0x25C2      	CALL       _Micros
0x0028	0x0870      	MOVF       R0, 0
0x0029	0x00D1      	MOVWF      _timeUpSignal1
0x002A	0x0871      	MOVF       R1, 0
0x002B	0x00D2      	MOVWF      _timeUpSignal1+1
0x002C	0x0872      	MOVF       R2, 0
0x002D	0x00D3      	MOVWF      _timeUpSignal1+2
0x002E	0x0873      	MOVF       R3, 0
0x002F	0x00D4      	MOVWF      _timeUpSignal1+3
;Whey.c,314 :: 		CCP2IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x0030	0x1012      	BCF        CCP2IF_bit, BitPos(CCP2IF_bit+0)
;Whey.c,315 :: 		TMR1ON_bit = 0x01;                     //Retoma a contagem no TIMER1
0x0031	0x1418      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,316 :: 		CCP2IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP2
0x0032	0x0021      	MOVLB      1
0x0033	0x1412      	BSF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,317 :: 		CCP4IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP4
0x0034	0x1693      	BSF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,318 :: 		} //end if
0x0035	0x2860      	GOTO       L_interrupt32
L_interrupt31:
;Whey.c,319 :: 		else if(CCP2IF_bit)                     //Interrupcao do modulo CCP2?
0x0036	0x0020      	MOVLB      0
0x0037	0x1C12      	BTFSS      CCP2IF_bit, BitPos(CCP2IF_bit+0)
0x0038	0x2860      	GOTO       L_interrupt33
;Whey.c,321 :: 		CCP2IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP2
0x0039	0x0021      	MOVLB      1
0x003A	0x1012      	BCF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,322 :: 		CCP4IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP4
0x003B	0x1293      	BCF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,323 :: 		TMR1ON_bit = 0x00;                     //Pausa o TIMER1
0x003C	0x0020      	MOVLB      0
0x003D	0x1018      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,324 :: 		CCP2CON     = 0x05;                    //Configura captura por borda de subida
0x003E	0x3005      	MOVLW      5
0x003F	0x0025      	MOVLB      5
0x0040	0x009A      	MOVWF      CCP2CON
;Whey.c,325 :: 		timeDownSignal1     = Micros() - timeUpSignal1;      //Guarda o valor do timer1 da segunda captura.
0x0041	0x25C2      	CALL       _Micros
0x0042	0x0870      	MOVF       R0, 0
0x0043	0x00C5      	MOVWF      _timeDownSignal1
0x0044	0x0871      	MOVF       R1, 0
0x0045	0x00C6      	MOVWF      _timeDownSignal1+1
0x0046	0x0872      	MOVF       R2, 0
0x0047	0x00C7      	MOVWF      _timeDownSignal1+2
0x0048	0x0873      	MOVF       R3, 0
0x0049	0x00C8      	MOVWF      _timeDownSignal1+3
0x004A	0x0851      	MOVF       _timeUpSignal1, 0
0x004B	0x02C5      	SUBWF      _timeDownSignal1, 1
0x004C	0x0852      	MOVF       _timeUpSignal1+1, 0
0x004D	0x3BC6      	SUBWFB     _timeDownSignal1+1, 1
0x004E	0x0853      	MOVF       _timeUpSignal1+2, 0
0x004F	0x3BC7      	SUBWFB     _timeDownSignal1+2, 1
0x0050	0x0854      	MOVF       _timeUpSignal1+3, 0
0x0051	0x3BC8      	SUBWFB     _timeDownSignal1+3, 1
;Whey.c,326 :: 		lastMeasure1 = Micros();              //guarda o tempo da ultima medida para o controle fail safe
0x0052	0x25C2      	CALL       _Micros
0x0053	0x0870      	MOVF       R0, 0
0x0054	0x00BD      	MOVWF      _lastMeasure1
0x0055	0x0871      	MOVF       R1, 0
0x0056	0x00BE      	MOVWF      _lastMeasure1+1
0x0057	0x0872      	MOVF       R2, 0
0x0058	0x00BF      	MOVWF      _lastMeasure1+2
0x0059	0x0873      	MOVF       R3, 0
0x005A	0x00C0      	MOVWF      _lastMeasure1+3
;Whey.c,327 :: 		TMR1ON_bit = 0x01;                     //Retoma a contagem no TIMER1
0x005B	0x1418      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,328 :: 		CCP2IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x005C	0x1012      	BCF        CCP2IF_bit, BitPos(CCP2IF_bit+0)
;Whey.c,329 :: 		CCP2IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP2
0x005D	0x0021      	MOVLB      1
0x005E	0x1412      	BSF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,330 :: 		CCP4IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP4
0x005F	0x1693      	BSF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,331 :: 		} //end else
L_interrupt33:
L_interrupt32:
;Whey.c,333 :: 		if(CCP4IF_bit && CCP4M0_bit)            //Interrupcao do modulo CCP4 e modo de captura configurado para borda de subida?
0x0060	0x0020      	MOVLB      0
0x0061	0x1E93      	BTFSS      CCP4IF_bit, BitPos(CCP4IF_bit+0)
0x0062	0x287D      	GOTO       L_interrupt36
0x0063	0x0026      	MOVLB      6
0x0064	0x1C1A      	BTFSS      CCP4M0_bit, BitPos(CCP4M0_bit+0)
0x0065	0x287D      	GOTO       L_interrupt36
L__interrupt75:
;Whey.c,335 :: 		CCP2IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP2
0x0066	0x0021      	MOVLB      1
0x0067	0x1012      	BCF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,336 :: 		CCP4IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP4
0x0068	0x1293      	BCF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,337 :: 		TMR1ON_bit = 0x00;                     //Pausa o TIMER1
0x0069	0x0020      	MOVLB      0
0x006A	0x1018      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,338 :: 		CCP4CON     = 0x04;                    //Configura captura por borda de descida
0x006B	0x3004      	MOVLW      4
0x006C	0x0026      	MOVLB      6
0x006D	0x009A      	MOVWF      CCP4CON
;Whey.c,339 :: 		timeUpSignal2     = Micros();                //Guarda o valor do timer1 da primeira captura.
0x006E	0x25C2      	CALL       _Micros
0x006F	0x0870      	MOVF       R0, 0
0x0070	0x00B3      	MOVWF      _timeUpSignal2
0x0071	0x0871      	MOVF       R1, 0
0x0072	0x00B4      	MOVWF      _timeUpSignal2+1
0x0073	0x0872      	MOVF       R2, 0
0x0074	0x00B5      	MOVWF      _timeUpSignal2+2
0x0075	0x0873      	MOVF       R3, 0
0x0076	0x00B6      	MOVWF      _timeUpSignal2+3
;Whey.c,340 :: 		CCP4IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x0077	0x1293      	BCF        CCP4IF_bit, BitPos(CCP4IF_bit+0)
;Whey.c,341 :: 		TMR1ON_bit = 0x01;                     //Retoma a contagem no TIMER1
0x0078	0x1418      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,342 :: 		CCP2IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP2
0x0079	0x0021      	MOVLB      1
0x007A	0x1412      	BSF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,343 :: 		CCP4IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP4
0x007B	0x1693      	BSF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,344 :: 		} //end if
0x007C	0x28A7      	GOTO       L_interrupt37
L_interrupt36:
;Whey.c,345 :: 		else if(CCP4IF_bit)                     //Interrupcao do modulo CCP4?
0x007D	0x0020      	MOVLB      0
0x007E	0x1E93      	BTFSS      CCP4IF_bit, BitPos(CCP4IF_bit+0)
0x007F	0x28A7      	GOTO       L_interrupt38
;Whey.c,347 :: 		CCP2IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP2
0x0080	0x0021      	MOVLB      1
0x0081	0x1012      	BCF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,348 :: 		CCP4IE_bit  = 0x00;                    //Desabilita interrupcao do periferico CCP4
0x0082	0x1293      	BCF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,349 :: 		TMR1ON_bit = 0x00;                     //Pausa o TIMER1
0x0083	0x0020      	MOVLB      0
0x0084	0x1018      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,350 :: 		CCP4CON     = 0x05;                    //Configura captura por borda de subida
0x0085	0x3005      	MOVLW      5
0x0086	0x0026      	MOVLB      6
0x0087	0x009A      	MOVWF      CCP4CON
;Whey.c,351 :: 		timeDownSignal2     = Micros() - timeUpSignal2;      //Guarda o valor do timer1 da segunda captura.
0x0088	0x25C2      	CALL       _Micros
0x0089	0x0870      	MOVF       R0, 0
0x008A	0x00C9      	MOVWF      _timeDownSignal2
0x008B	0x0871      	MOVF       R1, 0
0x008C	0x00CA      	MOVWF      _timeDownSignal2+1
0x008D	0x0872      	MOVF       R2, 0
0x008E	0x00CB      	MOVWF      _timeDownSignal2+2
0x008F	0x0873      	MOVF       R3, 0
0x0090	0x00CC      	MOVWF      _timeDownSignal2+3
0x0091	0x0833      	MOVF       _timeUpSignal2, 0
0x0092	0x02C9      	SUBWF      _timeDownSignal2, 1
0x0093	0x0834      	MOVF       _timeUpSignal2+1, 0
0x0094	0x3BCA      	SUBWFB     _timeDownSignal2+1, 1
0x0095	0x0835      	MOVF       _timeUpSignal2+2, 0
0x0096	0x3BCB      	SUBWFB     _timeDownSignal2+2, 1
0x0097	0x0836      	MOVF       _timeUpSignal2+3, 0
0x0098	0x3BCC      	SUBWFB     _timeDownSignal2+3, 1
;Whey.c,352 :: 		lastMeasure2 = Micros();              //guarda o tempo da ultima medida para o controle fail safe
0x0099	0x25C2      	CALL       _Micros
0x009A	0x0870      	MOVF       R0, 0
0x009B	0x00B9      	MOVWF      _lastMeasure2
0x009C	0x0871      	MOVF       R1, 0
0x009D	0x00BA      	MOVWF      _lastMeasure2+1
0x009E	0x0872      	MOVF       R2, 0
0x009F	0x00BB      	MOVWF      _lastMeasure2+2
0x00A0	0x0873      	MOVF       R3, 0
0x00A1	0x00BC      	MOVWF      _lastMeasure2+3
;Whey.c,353 :: 		TMR1ON_bit = 0x01;                     //Retoma a contagem no TIMER1
0x00A2	0x1418      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,354 :: 		CCP4IF_bit  = 0x00;                    //Limpa a flag para nova captura
0x00A3	0x1293      	BCF        CCP4IF_bit, BitPos(CCP4IF_bit+0)
;Whey.c,355 :: 		CCP2IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP2
0x00A4	0x0021      	MOVLB      1
0x00A5	0x1412      	BSF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,356 :: 		CCP4IE_bit  = 0x01;                    //Habilita interrupcao do periferico CCP4
0x00A6	0x1693      	BSF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,357 :: 		} //end else                                //Sim...
L_interrupt38:
L_interrupt37:
;Whey.c,358 :: 		} //end interrupt
L_end_interrupt:
L__interrupt109:
0x00A7	0x0020      	MOVLB      0
0x00A8	0x0828      	MOVF       40, 0
0x00A9	0x00F0      	MOVWF      R0
0x00AA	0x0827      	MOVF       39, 0
0x00AB	0x00F1      	MOVWF      R1
0x00AC	0x0826      	MOVF       38, 0
0x00AD	0x00F2      	MOVWF      R2
0x00AE	0x0825      	MOVF       37, 0
0x00AF	0x00F3      	MOVWF      R3
0x00B0	0x0824      	MOVF       36, 0
0x00B1	0x00F4      	MOVWF      R4
0x00B2	0x0823      	MOVF       35, 0
0x00B3	0x00F5      	MOVWF      R5
0x00B4	0x0822      	MOVF       34, 0
0x00B5	0x00F6      	MOVWF      R6
0x00B6	0x0009      	RETFIE     %s
; end of _interrupt
_RES032:
;__Lib_MathDouble.c,123 :: 		
;__Lib_MathDouble.c,128 :: 		
0x00B7	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,129 :: 		
0x00B8	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,130 :: 		
0x00B9	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,131 :: 		
0x00BA	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,132 :: 		
0x00BB	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,133 :: 		
0x00BC	0x3000      	MOVLW      0
;__Lib_MathDouble.c,135 :: 		
L_end_RES032:
0x00BD	0x0008      	RETURN
; end of _RES032
_COMFREM:
;__Lib_Math.c,1059 :: 		
;__Lib_Math.c,1063 :: 		
0x00BE	0x09FB      	COMF       R11, 1
;__Lib_Math.c,1064 :: 		
0x00BF	0x09FA      	COMF       R10, 1
;__Lib_Math.c,1065 :: 		
0x00C0	0x09F9      	COMF       R9, 1
;__Lib_Math.c,1066 :: 		
0x00C1	0x09F8      	COMF       R8, 1
;__Lib_Math.c,1067 :: 		
0x00C2	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,1068 :: 		
0x00C3	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1069 :: 		
0x00C4	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,1070 :: 		
0x00C5	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1071 :: 		
0x00C6	0x0AFA      	INCF       R10, 1
;__Lib_Math.c,1072 :: 		
0x00C7	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1073 :: 		
0x00C8	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,1075 :: 		
L_end_COMFREM:
0x00C9	0x0008      	RETURN
; end of _COMFREM
_FIXSIGN32:
;__Lib_MathDouble.c,112 :: 		
;__Lib_MathDouble.c,116 :: 		
0x00CA	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,117 :: 		
0x00CB	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,118 :: 		
0x00CC	0x3000      	MOVLW      0
;__Lib_MathDouble.c,120 :: 		
L_end_FIXSIGN32:
0x00CD	0x0008      	RETURN
; end of _FIXSIGN32
_SDIV3232L:
;__Lib_Math.c,690 :: 		
;__Lib_Math.c,699 :: 		
0x00CE	0x0874      	MOVF       R4, 0
;__Lib_Math.c,700 :: 		
0x00CF	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,701 :: 		
0x00D0	0x0875      	MOVF       R5, 0
;__Lib_Math.c,702 :: 		
0x00D1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,703 :: 		
0x00D2	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,704 :: 		
0x00D3	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,705 :: 		
0x00D4	0x0876      	MOVF       R6, 0
;__Lib_Math.c,706 :: 		
0x00D5	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,707 :: 		
0x00D6	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,708 :: 		
0x00D7	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,709 :: 		
0x00D8	0x0877      	MOVF       R7, 0
;__Lib_Math.c,710 :: 		
0x00D9	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,711 :: 		
0x00DA	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,712 :: 		
0x00DB	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,713 :: 		
0x00DC	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,715 :: 		
0x00DD	0x3007      	MOVLW      7
;__Lib_Math.c,716 :: 		
0x00DE	0x00FC      	MOVWF      R12
;__Lib_Math.c,718 :: 		
LOOPS3232A:
;__Lib_Math.c,719 :: 		
0x00DF	0x0D73      	RLF        R3, 0
;__Lib_Math.c,720 :: 		
0x00E0	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,721 :: 		
0x00E1	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,722 :: 		
0x00E2	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,723 :: 		
0x00E3	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,724 :: 		
0x00E4	0x0874      	MOVF       R4, 0
;__Lib_Math.c,725 :: 		
0x00E5	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,726 :: 		
0x00E6	0x28F5      	GOTO       SADD22LA
;__Lib_Math.c,728 :: 		
0x00E7	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,729 :: 		
0x00E8	0x0875      	MOVF       R5, 0
;__Lib_Math.c,730 :: 		
0x00E9	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,731 :: 		
0x00EA	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,732 :: 		
0x00EB	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,733 :: 		
0x00EC	0x0876      	MOVF       R6, 0
;__Lib_Math.c,734 :: 		
0x00ED	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,735 :: 		
0x00EE	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,736 :: 		
0x00EF	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,737 :: 		
0x00F0	0x0877      	MOVF       R7, 0
;__Lib_Math.c,738 :: 		
0x00F1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,739 :: 		
0x00F2	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,740 :: 		
0x00F3	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,741 :: 		
0x00F4	0x2902      	GOTO       SOK22LA
;__Lib_Math.c,743 :: 		
SADD22LA:
;__Lib_Math.c,744 :: 		
0x00F5	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,745 :: 		
0x00F6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,746 :: 		
0x00F7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,747 :: 		
0x00F8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,748 :: 		
0x00F9	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,749 :: 		
0x00FA	0x0876      	MOVF       R6, 0
;__Lib_Math.c,750 :: 		
0x00FB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,751 :: 		
0x00FC	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,752 :: 		
0x00FD	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,753 :: 		
0x00FE	0x0877      	MOVF       R7, 0
;__Lib_Math.c,754 :: 		
0x00FF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,755 :: 		
0x0100	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,756 :: 		
0x0101	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,758 :: 		
SOK22LA:
;__Lib_Math.c,759 :: 		
0x0102	0x0DF3      	RLF        R3, 1
;__Lib_Math.c,761 :: 		
0x0103	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,762 :: 		
0x0104	0x28DF      	GOTO       LOOPS3232A
;__Lib_Math.c,764 :: 		
0x0105	0x0D72      	RLF        R2, 0
;__Lib_Math.c,765 :: 		
0x0106	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,766 :: 		
0x0107	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,767 :: 		
0x0108	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,768 :: 		
0x0109	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,769 :: 		
0x010A	0x0874      	MOVF       R4, 0
;__Lib_Math.c,770 :: 		
0x010B	0x1C73      	BTFSS      R3, 0
;__Lib_Math.c,771 :: 		
0x010C	0x291B      	GOTO       SADD22L8
;__Lib_Math.c,773 :: 		
0x010D	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,774 :: 		
0x010E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,775 :: 		
0x010F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,776 :: 		
0x0110	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,777 :: 		
0x0111	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,778 :: 		
0x0112	0x0876      	MOVF       R6, 0
;__Lib_Math.c,779 :: 		
0x0113	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,780 :: 		
0x0114	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,781 :: 		
0x0115	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,782 :: 		
0x0116	0x0877      	MOVF       R7, 0
;__Lib_Math.c,783 :: 		
0x0117	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,784 :: 		
0x0118	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,785 :: 		
0x0119	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,786 :: 		
0x011A	0x2928      	GOTO       SOK22L8
;__Lib_Math.c,788 :: 		
SADD22L8:
;__Lib_Math.c,789 :: 		
0x011B	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,790 :: 		
0x011C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,791 :: 		
0x011D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,792 :: 		
0x011E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,793 :: 		
0x011F	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,794 :: 		
0x0120	0x0876      	MOVF       R6, 0
;__Lib_Math.c,795 :: 		
0x0121	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,796 :: 		
0x0122	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,797 :: 		
0x0123	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,798 :: 		
0x0124	0x0877      	MOVF       R7, 0
;__Lib_Math.c,799 :: 		
0x0125	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,800 :: 		
0x0126	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,801 :: 		
0x0127	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,803 :: 		
SOK22L8:
;__Lib_Math.c,804 :: 		
0x0128	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,806 :: 		
0x0129	0x3007      	MOVLW      7
;__Lib_Math.c,807 :: 		
0x012A	0x00FC      	MOVWF      R12
;__Lib_Math.c,809 :: 		
LOOPS3232B:
;__Lib_Math.c,810 :: 		
0x012B	0x0D72      	RLF        R2, 0
;__Lib_Math.c,811 :: 		
0x012C	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,812 :: 		
0x012D	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,813 :: 		
0x012E	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,814 :: 		
0x012F	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,815 :: 		
0x0130	0x0874      	MOVF       R4, 0
;__Lib_Math.c,816 :: 		
0x0131	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,817 :: 		
0x0132	0x2941      	GOTO       SADD22LB
;__Lib_Math.c,819 :: 		
0x0133	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,820 :: 		
0x0134	0x0875      	MOVF       R5, 0
;__Lib_Math.c,821 :: 		
0x0135	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,822 :: 		
0x0136	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,823 :: 		
0x0137	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,824 :: 		
0x0138	0x0876      	MOVF       R6, 0
;__Lib_Math.c,825 :: 		
0x0139	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,826 :: 		
0x013A	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,827 :: 		
0x013B	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,828 :: 		
0x013C	0x0877      	MOVF       R7, 0
;__Lib_Math.c,829 :: 		
0x013D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,830 :: 		
0x013E	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,831 :: 		
0x013F	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,832 :: 		
0x0140	0x294E      	GOTO       SOK22LB
;__Lib_Math.c,834 :: 		
SADD22LB:
;__Lib_Math.c,835 :: 		
0x0141	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,836 :: 		
0x0142	0x0875      	MOVF       R5, 0
;__Lib_Math.c,837 :: 		
0x0143	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,838 :: 		
0x0144	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,839 :: 		
0x0145	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,840 :: 		
0x0146	0x0876      	MOVF       R6, 0
;__Lib_Math.c,841 :: 		
0x0147	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,842 :: 		
0x0148	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,843 :: 		
0x0149	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,844 :: 		
0x014A	0x0877      	MOVF       R7, 0
;__Lib_Math.c,845 :: 		
0x014B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,846 :: 		
0x014C	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,847 :: 		
0x014D	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,849 :: 		
SOK22LB:
;__Lib_Math.c,850 :: 		
0x014E	0x0DF2      	RLF        R2, 1
;__Lib_Math.c,852 :: 		
0x014F	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,853 :: 		
0x0150	0x292B      	GOTO       LOOPS3232B
;__Lib_Math.c,855 :: 		
0x0151	0x0D71      	RLF        R1, 0
;__Lib_Math.c,856 :: 		
0x0152	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,857 :: 		
0x0153	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,858 :: 		
0x0154	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,859 :: 		
0x0155	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,860 :: 		
0x0156	0x0874      	MOVF       R4, 0
;__Lib_Math.c,861 :: 		
0x0157	0x1C72      	BTFSS      R2, 0
;__Lib_Math.c,862 :: 		
0x0158	0x2967      	GOTO       SADD22L16
;__Lib_Math.c,864 :: 		
0x0159	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,865 :: 		
0x015A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,866 :: 		
0x015B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,867 :: 		
0x015C	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,868 :: 		
0x015D	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,869 :: 		
0x015E	0x0876      	MOVF       R6, 0
;__Lib_Math.c,870 :: 		
0x015F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,871 :: 		
0x0160	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,872 :: 		
0x0161	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,873 :: 		
0x0162	0x0877      	MOVF       R7, 0
;__Lib_Math.c,874 :: 		
0x0163	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,875 :: 		
0x0164	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,876 :: 		
0x0165	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,877 :: 		
0x0166	0x2974      	GOTO       SOK22L16
;__Lib_Math.c,879 :: 		
SADD22L16:
;__Lib_Math.c,880 :: 		
0x0167	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,881 :: 		
0x0168	0x0875      	MOVF       R5, 0
;__Lib_Math.c,882 :: 		
0x0169	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,883 :: 		
0x016A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,884 :: 		
0x016B	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,885 :: 		
0x016C	0x0876      	MOVF       R6, 0
;__Lib_Math.c,886 :: 		
0x016D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,887 :: 		
0x016E	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,888 :: 		
0x016F	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,889 :: 		
0x0170	0x0877      	MOVF       R7, 0
;__Lib_Math.c,890 :: 		
0x0171	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,891 :: 		
0x0172	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,892 :: 		
0x0173	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,894 :: 		
SOK22L16:
;__Lib_Math.c,895 :: 		
0x0174	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,897 :: 		
0x0175	0x3007      	MOVLW      7
;__Lib_Math.c,898 :: 		
0x0176	0x00FC      	MOVWF      R12
;__Lib_Math.c,900 :: 		
LOOPS3232C:
;__Lib_Math.c,901 :: 		
0x0177	0x0D71      	RLF        R1, 0
;__Lib_Math.c,902 :: 		
0x0178	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,903 :: 		
0x0179	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,904 :: 		
0x017A	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,905 :: 		
0x017B	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,906 :: 		
0x017C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,907 :: 		
0x017D	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,908 :: 		
0x017E	0x298D      	GOTO       SADD22LC
;__Lib_Math.c,910 :: 		
0x017F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,911 :: 		
0x0180	0x0875      	MOVF       R5, 0
;__Lib_Math.c,912 :: 		
0x0181	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,913 :: 		
0x0182	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,914 :: 		
0x0183	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,915 :: 		
0x0184	0x0876      	MOVF       R6, 0
;__Lib_Math.c,916 :: 		
0x0185	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,917 :: 		
0x0186	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,918 :: 		
0x0187	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,919 :: 		
0x0188	0x0877      	MOVF       R7, 0
;__Lib_Math.c,920 :: 		
0x0189	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,921 :: 		
0x018A	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,922 :: 		
0x018B	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,923 :: 		
0x018C	0x299A      	GOTO       SOK22LC
;__Lib_Math.c,925 :: 		
SADD22LC:
;__Lib_Math.c,926 :: 		
0x018D	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,927 :: 		
0x018E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,928 :: 		
0x018F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,929 :: 		
0x0190	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,930 :: 		
0x0191	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,931 :: 		
0x0192	0x0876      	MOVF       R6, 0
;__Lib_Math.c,932 :: 		
0x0193	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,933 :: 		
0x0194	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,934 :: 		
0x0195	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,935 :: 		
0x0196	0x0877      	MOVF       R7, 0
;__Lib_Math.c,936 :: 		
0x0197	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,937 :: 		
0x0198	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,938 :: 		
0x0199	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,940 :: 		
SOK22LC:
;__Lib_Math.c,941 :: 		
0x019A	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,943 :: 		
0x019B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,944 :: 		
0x019C	0x2977      	GOTO       LOOPS3232C
;__Lib_Math.c,946 :: 		
0x019D	0x0D70      	RLF        R0, 0
;__Lib_Math.c,947 :: 		
0x019E	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,948 :: 		
0x019F	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,949 :: 		
0x01A0	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,950 :: 		
0x01A1	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,951 :: 		
0x01A2	0x0874      	MOVF       R4, 0
;__Lib_Math.c,952 :: 		
0x01A3	0x1C71      	BTFSS      R1, 0
;__Lib_Math.c,953 :: 		
0x01A4	0x29B3      	GOTO       SADD22L24
;__Lib_Math.c,955 :: 		
0x01A5	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,956 :: 		
0x01A6	0x0875      	MOVF       R5, 0
;__Lib_Math.c,957 :: 		
0x01A7	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,958 :: 		
0x01A8	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,959 :: 		
0x01A9	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,960 :: 		
0x01AA	0x0876      	MOVF       R6, 0
;__Lib_Math.c,961 :: 		
0x01AB	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,962 :: 		
0x01AC	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,963 :: 		
0x01AD	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,964 :: 		
0x01AE	0x0877      	MOVF       R7, 0
;__Lib_Math.c,965 :: 		
0x01AF	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,966 :: 		
0x01B0	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,967 :: 		
0x01B1	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,968 :: 		
0x01B2	0x29C0      	GOTO       SOK22L24
;__Lib_Math.c,970 :: 		
SADD22L24:
;__Lib_Math.c,971 :: 		
0x01B3	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,972 :: 		
0x01B4	0x0875      	MOVF       R5, 0
;__Lib_Math.c,973 :: 		
0x01B5	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,974 :: 		
0x01B6	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,975 :: 		
0x01B7	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,976 :: 		
0x01B8	0x0876      	MOVF       R6, 0
;__Lib_Math.c,977 :: 		
0x01B9	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,978 :: 		
0x01BA	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,979 :: 		
0x01BB	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,980 :: 		
0x01BC	0x0877      	MOVF       R7, 0
;__Lib_Math.c,981 :: 		
0x01BD	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,982 :: 		
0x01BE	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,983 :: 		
0x01BF	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,985 :: 		
SOK22L24:
;__Lib_Math.c,986 :: 		
0x01C0	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,988 :: 		
0x01C1	0x3007      	MOVLW      7
;__Lib_Math.c,989 :: 		
0x01C2	0x00FC      	MOVWF      R12
;__Lib_Math.c,991 :: 		
LOOPS3232D:
;__Lib_Math.c,992 :: 		
0x01C3	0x0D70      	RLF        R0, 0
;__Lib_Math.c,993 :: 		
0x01C4	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,994 :: 		
0x01C5	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,995 :: 		
0x01C6	0x0DFA      	RLF        R10, 1
;__Lib_Math.c,996 :: 		
0x01C7	0x0DFB      	RLF        R11, 1
;__Lib_Math.c,997 :: 		
0x01C8	0x0874      	MOVF       R4, 0
;__Lib_Math.c,998 :: 		
0x01C9	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,999 :: 		
0x01CA	0x29D9      	GOTO       SADD22LD
;__Lib_Math.c,1001 :: 		
0x01CB	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,1002 :: 		
0x01CC	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1003 :: 		
0x01CD	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1004 :: 		
0x01CE	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1005 :: 		
0x01CF	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,1006 :: 		
0x01D0	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1007 :: 		
0x01D1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1008 :: 		
0x01D2	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1009 :: 		
0x01D3	0x02FA      	SUBWF      R10, 1
;__Lib_Math.c,1010 :: 		
0x01D4	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1011 :: 		
0x01D5	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1012 :: 		
0x01D6	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1013 :: 		
0x01D7	0x02FB      	SUBWF      R11, 1
;__Lib_Math.c,1014 :: 		
0x01D8	0x29E6      	GOTO       SOK22LD
;__Lib_Math.c,1016 :: 		
SADD22LD:
;__Lib_Math.c,1017 :: 		
0x01D9	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1018 :: 		
0x01DA	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1019 :: 		
0x01DB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1020 :: 		
0x01DC	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1021 :: 		
0x01DD	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1022 :: 		
0x01DE	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1023 :: 		
0x01DF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1024 :: 		
0x01E0	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1025 :: 		
0x01E1	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1026 :: 		
0x01E2	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1027 :: 		
0x01E3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1029 :: 		
0x01E4	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1030 :: 		
0x01E5	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1032 :: 		
SOK22LD:
;__Lib_Math.c,1033 :: 		
0x01E6	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,1035 :: 		
0x01E7	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,1036 :: 		
0x01E8	0x29C3      	GOTO       LOOPS3232D
;__Lib_Math.c,1038 :: 		
0x01E9	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,1039 :: 		
0x01EA	0x29F9      	GOTO       SOK22L
;__Lib_Math.c,1040 :: 		
0x01EB	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1041 :: 		
0x01EC	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1042 :: 		
0x01ED	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1043 :: 		
0x01EE	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1044 :: 		
0x01EF	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1045 :: 		
0x01F0	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1046 :: 		
0x01F1	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1047 :: 		
0x01F2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1048 :: 		
0x01F3	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1049 :: 		
0x01F4	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1050 :: 		
0x01F5	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1051 :: 		
0x01F6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1052 :: 		
0x01F7	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1053 :: 		
0x01F8	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1054 :: 		
SOK22L:
;__Lib_Math.c,1057 :: 		
L_end_SDIV3232L:
0x01F9	0x0008      	RETURN
; end of _SDIV3232L
_SETFUN32:
;__Lib_MathDouble.c,138 :: 		
;__Lib_MathDouble.c,145 :: 		
0x01FA	0x157B      	BSF        R11, 2
;__Lib_MathDouble.c,146 :: 		
0x01FB	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,147 :: 		
0x01FC	0x2A04      	GOTO       SETFUN32EEE
;__Lib_MathDouble.c,148 :: 		
0x01FD	0x3001      	MOVLW      1
;__Lib_MathDouble.c,149 :: 		
0x01FE	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,150 :: 		
0x01FF	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,151 :: 		
0x0200	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,152 :: 		
0x0201	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,153 :: 		
0x0202	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,154 :: 		
0x0203	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,155 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,156 :: 		
0x0204	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,158 :: 		
L_end_SETFUN32:
0x0205	0x0008      	RETURN
; end of _SETFUN32
_Mul_32x32_U:
;__Lib_Math.c,1765 :: 		
;__Lib_Math.c,1780 :: 		
0x0206	0x0020      	MOVLB      0
;__Lib_Math.c,1781 :: 		
0x0207	0x3022      	MOVLW      34
;__Lib_Math.c,1782 :: 		
0x0208	0x00FC      	MOVWF      R12
;__Lib_Math.c,1783 :: 		
0x0209	0x01F8      	CLRF       R8
;__Lib_Math.c,1784 :: 		
0x020A	0x01F9      	CLRF       R9
;__Lib_Math.c,1785 :: 		
0x020B	0x01FA      	CLRF       R10
;__Lib_Math.c,1786 :: 		
0x020C	0x01FB      	CLRF       R11
;__Lib_Math.c,1788 :: 		
_NEXT:
;__Lib_Math.c,1792 :: 		
0x020D	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1793 :: 		
0x020E	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1794 :: 		
0x020F	0x2A3B      	GOTO       _EXIT2
;__Lib_Math.c,1795 :: 		
0x0210	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,1797 :: 		
_LOOP:
;__Lib_Math.c,1806 :: 		
0x0211	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,1807 :: 		
0x0212	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,1808 :: 		
0x0213	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,1809 :: 		
0x0214	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,1810 :: 		
0x0215	0x0CF3      	RRF        R3, 1
;__Lib_Math.c,1811 :: 		
0x0216	0x0CF2      	RRF        R2, 1
;__Lib_Math.c,1812 :: 		
0x0217	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,1813 :: 		
0x0218	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,1818 :: 		
0x0219	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1819 :: 		
0x021A	0x2A0D      	GOTO       _NEXT
;__Lib_Math.c,1820 :: 		
0x021B	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1821 :: 		
0x021C	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1822 :: 		
0x021D	0x2A2D      	GOTO       _EXIT1
;__Lib_Math.c,1829 :: 		
0x021E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1830 :: 		
0x021F	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1831 :: 		
0x0220	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1832 :: 		
0x0221	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1833 :: 		
0x0222	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1834 :: 		
0x0223	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1835 :: 		
0x0224	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1836 :: 		
0x0225	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1837 :: 		
0x0226	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1838 :: 		
0x0227	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1839 :: 		
0x0228	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1840 :: 		
0x0229	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1841 :: 		
0x022A	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1842 :: 		
0x022B	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1844 :: 		
0x022C	0x2A11      	GOTO       _LOOP
;__Lib_Math.c,1846 :: 		
_EXIT1:
;__Lib_Math.c,1851 :: 		
0x022D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1852 :: 		
0x022E	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1853 :: 		
0x022F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1854 :: 		
0x0230	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1855 :: 		
0x0231	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1856 :: 		
0x0232	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1857 :: 		
0x0233	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1858 :: 		
0x0234	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1859 :: 		
0x0235	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1860 :: 		
0x0236	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1861 :: 		
0x0237	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1862 :: 		
0x0238	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1863 :: 		
0x0239	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1864 :: 		
0x023A	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1867 :: 		
_EXIT2:
;__Lib_Math.c,1869 :: 		
L_end_Mul_32x32_U:
0x023B	0x0008      	RETURN
; end of _Mul_32x32_U
_EEPROM_Read:
;__Lib_EEPROM.c,1 :: 		
;__Lib_EEPROM.c,2 :: 		
0x023C	0x0020      	MOVLB      0
0x023D	0x0869      	MOVF       FARG_EEPROM_Read_Address, 0
0x023E	0x0023      	MOVLB      3
0x023F	0x0091      	MOVWF      EEADR
0x0240	0x0192      	CLRF       EEADR+1
;__Lib_EEPROM.c,3 :: 		
0x0241	0x1395      	BCF        EEPGD_bit, BitPos(EEPGD_bit+0)
;__Lib_EEPROM.c,4 :: 		
0x0242	0x1315      	BCF        CFGS_bit, BitPos(CFGS_bit+0)
;__Lib_EEPROM.c,5 :: 		
0x0243	0x1415      	BSF        RD_bit, BitPos(RD_bit+0)
;__Lib_EEPROM.c,6 :: 		
0x0244	0x0813      	MOVF       EEDAT, 0
0x0245	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,7 :: 		
L_end_EEPROM_Read:
0x0246	0x0008      	RETURN
; end of _EEPROM_Read
_Div_16X16_U:
;__Lib_Math.c,213 :: 		
;__Lib_Math.c,220 :: 		
0x0247	0x0020      	MOVLB      0
;__Lib_Math.c,221 :: 		
0x0248	0x01F8      	CLRF       R8
;__Lib_Math.c,222 :: 		
0x0249	0x01F9      	CLRF       R9
;__Lib_Math.c,223 :: 		
0x024A	0x3010      	MOVLW      16
;__Lib_Math.c,224 :: 		
0x024B	0x00FC      	MOVWF      R12
;__Lib_Math.c,225 :: 		
0x024C	0x0D71      	RLF        R1, 0
;__Lib_Math.c,226 :: 		
0x024D	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,227 :: 		
0x024E	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,228 :: 		
0x024F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,229 :: 		
0x0250	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,230 :: 		
0x0251	0x0875      	MOVF       R5, 0
;__Lib_Math.c,231 :: 		
0x0252	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,232 :: 		
0x0253	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,233 :: 		
0x0254	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,234 :: 		
0x0255	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0256	0x2A5E      	GOTO       $+8
;__Lib_Math.c,236 :: 		
0x0257	0x0874      	MOVF       R4, 0
;__Lib_Math.c,237 :: 		
0x0258	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,238 :: 		
0x0259	0x0875      	MOVF       R5, 0
;__Lib_Math.c,239 :: 		
0x025A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,240 :: 		
0x025B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,241 :: 		
0x025C	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,242 :: 		
0x025D	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,243 :: 		
0x025E	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,244 :: 		
0x025F	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,245 :: 		
0x0260	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,246 :: 		
0x0261	0x2A4C      	GOTO       $-21
;__Lib_Math.c,248 :: 		
L_end_Div_16X16_U:
0x0262	0x0008      	RETURN
; end of _Div_16X16_U
_Div_32x32_S:
;__Lib_Math.c,1084 :: 		
;__Lib_Math.c,1095 :: 		
;__Lib_Math.c,1098 :: 		
0x0263	0x0874      	MOVF       R4, 0
0x0264	0x3A00      	XORLW      0
0x0265	0x1D03      	BTFSS      STATUS, 2
0x0266	0x2A7C      	GOTO       L_Div_32x32_S6
;__Lib_Math.c,1099 :: 		
0x0267	0x0875      	MOVF       R5, 0
0x0268	0x3A00      	XORLW      0
0x0269	0x1D03      	BTFSS      STATUS, 2
0x026A	0x2A7C      	GOTO       L_Div_32x32_S7
;__Lib_Math.c,1100 :: 		
0x026B	0x0876      	MOVF       R6, 0
0x026C	0x3A00      	XORLW      0
0x026D	0x1D03      	BTFSS      STATUS, 2
0x026E	0x2A7C      	GOTO       L_Div_32x32_S8
;__Lib_Math.c,1101 :: 		
0x026F	0x0877      	MOVF       R7, 0
0x0270	0x3A00      	XORLW      0
0x0271	0x1D03      	BTFSS      STATUS, 2
0x0272	0x2A7C      	GOTO       L_Div_32x32_S9
;__Lib_Math.c,1102 :: 		
0x0273	0x30FF      	MOVLW      255
0x0274	0x00F0      	MOVWF      R0
;__Lib_Math.c,1103 :: 		
0x0275	0x30FF      	MOVLW      255
0x0276	0x00F1      	MOVWF      R1
;__Lib_Math.c,1104 :: 		
0x0277	0x30FF      	MOVLW      255
0x0278	0x00F2      	MOVWF      R2
;__Lib_Math.c,1105 :: 		
0x0279	0x307F      	MOVLW      127
0x027A	0x00F3      	MOVWF      R3
;__Lib_Math.c,1106 :: 		
0x027B	0x2B14      	GOTO       L_end_Div_32x32_S
;__Lib_Math.c,1107 :: 		
L_Div_32x32_S9:
L_Div_32x32_S8:
L_Div_32x32_S7:
L_Div_32x32_S6:
;__Lib_Math.c,1110 :: 		
0x027C	0x0020      	MOVLB      0
;__Lib_Math.c,1112 :: 		
0x027D	0x01FC      	CLRF       R12
;__Lib_Math.c,1113 :: 		
0x027E	0x1BF7      	BTFSC      R7, 7
;__Lib_Math.c,1114 :: 		
0x027F	0x0AFC      	INCF       R12, 1
;__Lib_Math.c,1116 :: 		
0x0280	0x01FD      	CLRF       R13
;__Lib_Math.c,1117 :: 		
0x0281	0x01FB      	CLRF       R11
;__Lib_Math.c,1118 :: 		
0x0282	0x01FA      	CLRF       R10
;__Lib_Math.c,1119 :: 		
0x0283	0x01F9      	CLRF       R9
;__Lib_Math.c,1120 :: 		
0x0284	0x01F8      	CLRF       R8
;__Lib_Math.c,1121 :: 		
0x0285	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1122 :: 		
0x0286	0x0472      	IORWF       R2, 0
;__Lib_Math.c,1123 :: 		
0x0287	0x0471      	IORWF       R1, 0
;__Lib_Math.c,1124 :: 		
0x0288	0x0470      	IORWF       R0, 0
;__Lib_Math.c,1125 :: 		
0x0289	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1126 :: 		
0x028A	0x2B0F      	GOTO       END_ALL
;__Lib_Math.c,1128 :: 		
0x028B	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1129 :: 		
0x028C	0x0677      	XORWF      R7, 0
;__Lib_Math.c,1130 :: 		
0x028D	0x00A0      	MOVWF      ___math_tempb
;__Lib_Math.c,1131 :: 		
0x028E	0x1BA0      	BTFSC      ___math_tempb, 7
;__Lib_Math.c,1132 :: 		
0x028F	0x09FD      	COMF       R13, 1
;__Lib_Math.c,1136 :: 		
0x0290	0x1FF7      	BTFSS      R7, 7
;__Lib_Math.c,1137 :: 		
0x0291	0x2A9D      	GOTO       CA3232S
;__Lib_Math.c,1139 :: 		
0x0292	0x09F4      	COMF       R4, 1
;__Lib_Math.c,1140 :: 		
0x0293	0x09F5      	COMF       R5, 1
;__Lib_Math.c,1141 :: 		
0x0294	0x09F6      	COMF       R6, 1
;__Lib_Math.c,1142 :: 		
0x0295	0x09F7      	COMF       R7, 1
;__Lib_Math.c,1143 :: 		
0x0296	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,1144 :: 		
0x0297	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1145 :: 		
0x0298	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,1146 :: 		
0x0299	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1147 :: 		
0x029A	0x0AF6      	INCF       R6, 1
;__Lib_Math.c,1148 :: 		
0x029B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1149 :: 		
0x029C	0x0AF7      	INCF       R7, 1
;__Lib_Math.c,1151 :: 		
CA3232S:
;__Lib_Math.c,1152 :: 		
0x029D	0x1FF3      	BTFSS      R3, 7
;__Lib_Math.c,1153 :: 		
0x029E	0x2AAA      	GOTO       C3232SX
;__Lib_Math.c,1155 :: 		
0x029F	0x09F0      	COMF       R0, 1
;__Lib_Math.c,1156 :: 		
0x02A0	0x09F1      	COMF       R1, 1
;__Lib_Math.c,1157 :: 		
0x02A1	0x09F2      	COMF       R2, 1
;__Lib_Math.c,1158 :: 		
0x02A2	0x09F3      	COMF       R3, 1
;__Lib_Math.c,1159 :: 		
0x02A3	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1160 :: 		
0x02A4	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1161 :: 		
0x02A5	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,1162 :: 		
0x02A6	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1163 :: 		
0x02A7	0x0AF2      	INCF       R2, 1
;__Lib_Math.c,1164 :: 		
0x02A8	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1165 :: 		
0x02A9	0x0AF3      	INCF       R3, 1
;__Lib_Math.c,1167 :: 		
C3232SX:
;__Lib_Math.c,1168 :: 		
0x02AA	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1169 :: 		
0x02AB	0x0477      	IORWF       R7, 0
;__Lib_Math.c,1170 :: 		
0x02AC	0x00A0      	MOVWF      ___math_tempb
;__Lib_Math.c,1171 :: 		
0x02AD	0x1BA0      	BTFSC      ___math_tempb, 7
;__Lib_Math.c,1172 :: 		
0x02AE	0x2ACB      	GOTO       C3232SX1
;__Lib_Math.c,1174 :: 		
C3232S:
;__Lib_Math.c,1177 :: 		
0x02AF	0x20CE      	CALL       _SDIV3232L
;__Lib_Math.c,1181 :: 		
0x02B0	0x1BFC      	BTFSC      R12, 7
;__Lib_Math.c,1182 :: 		
0x02B1	0x2AE8      	GOTO       C3232SX4
;__Lib_Math.c,1184 :: 		
C3232SOK:
;__Lib_Math.c,1185 :: 		
0x02B2	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,1186 :: 		
0x02B3	0x2B0F      	GOTO       END_ALL
;__Lib_Math.c,1188 :: 		
0x02B4	0x09F0      	COMF       R0, 1
;__Lib_Math.c,1189 :: 		
0x02B5	0x09F1      	COMF       R1, 1
;__Lib_Math.c,1190 :: 		
0x02B6	0x09F2      	COMF       R2, 1
;__Lib_Math.c,1191 :: 		
0x02B7	0x09F3      	COMF       R3, 1
;__Lib_Math.c,1192 :: 		
0x02B8	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1193 :: 		
0x02B9	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1194 :: 		
0x02BA	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,1195 :: 		
0x02BB	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1196 :: 		
0x02BC	0x0AF2      	INCF       R2, 1
;__Lib_Math.c,1197 :: 		
0x02BD	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1198 :: 		
0x02BE	0x0AF3      	INCF       R3, 1
;__Lib_Math.c,1200 :: 		
0x02BF	0x09F8      	COMF       R8, 1
;__Lib_Math.c,1201 :: 		
0x02C0	0x09F9      	COMF       R9, 1
;__Lib_Math.c,1202 :: 		
0x02C1	0x09FA      	COMF       R10, 1
;__Lib_Math.c,1203 :: 		
0x02C2	0x09FB      	COMF       R11, 1
;__Lib_Math.c,1204 :: 		
0x02C3	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,1205 :: 		
0x02C4	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1206 :: 		
0x02C5	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,1207 :: 		
0x02C6	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1208 :: 		
0x02C7	0x0AFA      	INCF       R10, 1
;__Lib_Math.c,1209 :: 		
0x02C8	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1210 :: 		
0x02C9	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,1212 :: 		
0x02CA	0x2B0F      	GOTO       END_ALL
;__Lib_Math.c,1214 :: 		
C3232SX1:
;__Lib_Math.c,1215 :: 		
0x02CB	0x1FF7      	BTFSS      R7, 7
;__Lib_Math.c,1216 :: 		
0x02CC	0x2AE2      	GOTO       C3232SX3
;__Lib_Math.c,1217 :: 		
0x02CD	0x1BF3      	BTFSC      R3, 7
;__Lib_Math.c,1218 :: 		
0x02CE	0x2ADC      	GOTO       C3232SX2
;__Lib_Math.c,1219 :: 		
0x02CF	0x0873      	MOVF       R3, 0
;__Lib_Math.c,1220 :: 		
0x02D0	0x00FB      	MOVWF      R11
;__Lib_Math.c,1221 :: 		
0x02D1	0x0872      	MOVF       R2, 0
;__Lib_Math.c,1222 :: 		
0x02D2	0x00FA      	MOVWF      R10
;__Lib_Math.c,1223 :: 		
0x02D3	0x0871      	MOVF       R1, 0
;__Lib_Math.c,1224 :: 		
0x02D4	0x00F9      	MOVWF      R9
;__Lib_Math.c,1225 :: 		
0x02D5	0x0870      	MOVF       R0, 0
;__Lib_Math.c,1226 :: 		
0x02D6	0x00F8      	MOVWF      R8
;__Lib_Math.c,1227 :: 		
0x02D7	0x01F3      	CLRF       R3
;__Lib_Math.c,1228 :: 		
0x02D8	0x01F2      	CLRF       R2
;__Lib_Math.c,1229 :: 		
0x02D9	0x01F1      	CLRF       R1
;__Lib_Math.c,1230 :: 		
0x02DA	0x01F0      	CLRF       R0
;__Lib_Math.c,1231 :: 		
0x02DB	0x2AB2      	GOTO       C3232SOK
;__Lib_Math.c,1232 :: 		
C3232SX2:
;__Lib_Math.c,1233 :: 		
0x02DC	0x01F3      	CLRF       R3
;__Lib_Math.c,1234 :: 		
0x02DD	0x01F2      	CLRF       R2
;__Lib_Math.c,1235 :: 		
0x02DE	0x01F1      	CLRF       R1
;__Lib_Math.c,1236 :: 		
0x02DF	0x01F0      	CLRF       R0
;__Lib_Math.c,1237 :: 		
0x02E0	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1238 :: 		
0x02E1	0x3400      	RETLW      0
;__Lib_Math.c,1240 :: 		
C3232SX3:
;__Lib_Math.c,1241 :: 		
0x02E2	0x09F3      	COMF       R3, 1
;__Lib_Math.c,1242 :: 		
0x02E3	0x09F2      	COMF       R2, 1
;__Lib_Math.c,1243 :: 		
0x02E4	0x09F1      	COMF       R1, 1
;__Lib_Math.c,1244 :: 		
0x02E5	0x09F0      	COMF       R0, 1
;__Lib_Math.c,1246 :: 		
0x02E6	0x17FC      	BSF        R12, 7
;__Lib_Math.c,1248 :: 		
0x02E7	0x2AAF      	GOTO       C3232S
;__Lib_Math.c,1250 :: 		
C3232SX4:
;__Lib_Math.c,1251 :: 		
0x02E8	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,1252 :: 		
0x02E9	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1253 :: 		
0x02EA	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,1254 :: 		
0x02EB	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1255 :: 		
0x02EC	0x0AFA      	INCF       R10, 1
;__Lib_Math.c,1256 :: 		
0x02ED	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1257 :: 		
0x02EE	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,1258 :: 		
0x02EF	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1259 :: 		
0x02F0	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,1260 :: 		
0x02F1	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1261 :: 		
0x02F2	0x2AB2      	GOTO       C3232SOK
;__Lib_Math.c,1262 :: 		
0x02F3	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1263 :: 		
0x02F4	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,1264 :: 		
0x02F5	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1265 :: 		
0x02F6	0x2AB2      	GOTO       C3232SOK
;__Lib_Math.c,1266 :: 		
0x02F7	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1267 :: 		
0x02F8	0x027A      	SUBWF      R10, 0
;__Lib_Math.c,1268 :: 		
0x02F9	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1269 :: 		
0x02FA	0x2AB2      	GOTO       C3232SOK
;__Lib_Math.c,1270 :: 		
0x02FB	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1271 :: 		
0x02FC	0x027B      	SUBWF      R11, 0
;__Lib_Math.c,1272 :: 		
0x02FD	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,1273 :: 		
0x02FE	0x2AB2      	GOTO       C3232SOK
;__Lib_Math.c,1274 :: 		
0x02FF	0x01FB      	CLRF       R11
;__Lib_Math.c,1275 :: 		
0x0300	0x01FA      	CLRF       R10
;__Lib_Math.c,1276 :: 		
0x0301	0x01F9      	CLRF       R9
;__Lib_Math.c,1277 :: 		
0x0302	0x01F8      	CLRF       R8
;__Lib_Math.c,1278 :: 		
0x0303	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,1279 :: 		
0x0304	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1280 :: 		
0x0305	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,1281 :: 		
0x0306	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1282 :: 		
0x0307	0x0AF2      	INCF       R2, 1
;__Lib_Math.c,1283 :: 		
0x0308	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1284 :: 		
0x0309	0x0AF3      	INCF       R3, 1
;__Lib_Math.c,1285 :: 		
0x030A	0x1FF3      	BTFSS      R3, 7
;__Lib_Math.c,1286 :: 		
0x030B	0x2AB2      	GOTO       C3232SOK
;__Lib_Math.c,1287 :: 		
0x030C	0x01A0      	CLRF       ___math_tempb
;__Lib_Math.c,1288 :: 		
0x030D	0x1620      	BSF        ___math_tempb, 4
;__Lib_Math.c,1289 :: 		
0x030E	0x34FF      	RETLW      255
;__Lib_Math.c,1290 :: 		
END_ALL:
;__Lib_Math.c,1291 :: 		
0x030F	0x01A0      	CLRF       ___math_tempb
;__Lib_Math.c,1292 :: 		
0x0310	0x1C7C      	BTFSS      R12, 0
;__Lib_Math.c,1293 :: 		
0x0311	0x2B13      	GOTO       avoid_comfrem
;__Lib_Math.c,1295 :: 		
0x0312	0x20BE      	CALL       _COMFREM
;__Lib_Math.c,1297 :: 		
avoid_comfrem:
;__Lib_Math.c,1298 :: 		
0x0313	0x3E00      	ADDLW      0
;__Lib_Math.c,1300 :: 		
L_end_Div_32x32_S:
0x0314	0x0008      	RETURN
; end of _Div_32x32_S
_SETFDZ32:
;__Lib_MathDouble.c,102 :: 		
;__Lib_MathDouble.c,105 :: 		
0x0315	0x15FB      	BSF        R11, 3
;__Lib_MathDouble.c,106 :: 		
0x0316	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,108 :: 		
L_end_SETFDZ32:
0x0317	0x0008      	RETURN
; end of _SETFDZ32
_SETFOV32:
;__Lib_MathDouble.c,79 :: 		
;__Lib_MathDouble.c,86 :: 		
0x0318	0x14FB      	BSF        R11, 1
;__Lib_MathDouble.c,87 :: 		
0x0319	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,88 :: 		
0x031A	0x2B22      	GOTO       SETFOV32EEE
;__Lib_MathDouble.c,89 :: 		
0x031B	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,90 :: 		
0x031C	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,91 :: 		
0x031D	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,92 :: 		
0x031E	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,93 :: 		
0x031F	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,94 :: 		
0x0320	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,95 :: 		
0x0321	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,96 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,97 :: 		
0x0322	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,99 :: 		
L_end_SETFOV32:
0x0323	0x0008      	RETURN
; end of _SETFOV32
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0324	0x300E      	MOVLW      14
0x0325	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x0326	0x0BFD      	DECFSZ     R13, 1
0x0327	0x2B26      	GOTO       L_Delay_22us1
0x0328	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0329	0x0008      	RETURN
; end of _Delay_22us
_NRM3232:
;__Lib_MathDouble.c,167 :: 		
;__Lib_MathDouble.c,173 :: 		
;__Lib_MathDouble.c,175 :: 		
0x032A	0x01A1      	CLRF       __math_tempbD
;__Lib_MathDouble.c,176 :: 		
0x032B	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,177 :: 		
0x032C	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,178 :: 		
0x032D	0x2B3F      	GOTO       NORM3232
;__Lib_MathDouble.c,179 :: 		
0x032E	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,180 :: 		
0x032F	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,181 :: 		
0x0330	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,182 :: 		
0x0331	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,183 :: 		
0x0332	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,184 :: 		
0x0333	0x15A1      	BSF        __math_tempbD, 3
;__Lib_MathDouble.c,186 :: 		
0x0334	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,187 :: 		
0x0335	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,188 :: 		
0x0336	0x2B3F      	GOTO       NORM3232
;__Lib_MathDouble.c,189 :: 		
0x0337	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,190 :: 		
0x0338	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,191 :: 		
0x0339	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,192 :: 		
0x033A	0x11A1      	BCF        __math_tempbD, 3
;__Lib_MathDouble.c,193 :: 		
0x033B	0x1621      	BSF        __math_tempbD, 4
;__Lib_MathDouble.c,195 :: 		
0x033C	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,196 :: 		
0x033D	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,197 :: 		
0x033E	0x2B4D      	GOTO       JPNRES032
;__Lib_MathDouble.c,198 :: 		
NORM3232:
;__Lib_MathDouble.c,199 :: 		
0x033F	0x0821      	MOVF       __math_tempbD, 0
;__Lib_MathDouble.c,200 :: 		
0x0340	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,201 :: 		
0x0341	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,202 :: 		
0x0342	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,203 :: 		
0x0343	0x2B51      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,204 :: 		
0x0344	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,205 :: 		
NORM3232A:
;__Lib_MathDouble.c,206 :: 		
0x0345	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,207 :: 		
0x0346	0x2B55      	GOTO       JMPNFIXSIGN32
;__Lib_MathDouble.c,208 :: 		
0x0347	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,209 :: 		
0x0348	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,210 :: 		
0x0349	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,211 :: 		
0x034A	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,212 :: 		
0x034B	0x2B45      	GOTO       NORM3232A
;__Lib_MathDouble.c,213 :: 		
0x034C	0x2B51      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,214 :: 		
JPNRES032:
;__Lib_MathDouble.c,215 :: 		
0x034D	0x3001      	MOVLW      1
;__Lib_MathDouble.c,216 :: 		
0x034E	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,218 :: 		
0x034F	0x20B7      	CALL       _RES032
;__Lib_MathDouble.c,220 :: 		
0x0350	0x2B58      	GOTO       NORM32EEE
;__Lib_MathDouble.c,221 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,222 :: 		
0x0351	0x3002      	MOVLW      2
;__Lib_MathDouble.c,223 :: 		
0x0352	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,225 :: 		
0x0353	0x21FA      	CALL       _SETFUN32
;__Lib_MathDouble.c,227 :: 		
0x0354	0x2B58      	GOTO       NORM32EEE
;__Lib_MathDouble.c,228 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,229 :: 		
0x0355	0x3004      	MOVLW      4
;__Lib_MathDouble.c,230 :: 		
0x0356	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,232 :: 		
0x0357	0x20CA      	CALL       _FIXSIGN32
;__Lib_MathDouble.c,234 :: 		
NORM32EEE:
;__Lib_MathDouble.c,236 :: 		
L_end_NRM3232:
0x0358	0x0008      	RETURN
; end of _NRM3232
_Map:
;Whey.c,242 :: 		long Map(long x, long in_min, long in_max, long out_min, long out_max){
;Whey.c,243 :: 		return ((x - in_min) * (out_max - out_min) / (in_max - in_min)) + out_min;
0x0359	0x0021      	MOVLB      1
0x035A	0x0820      	MOVF       FARG_Map_x, 0
0x035B	0x00F4      	MOVWF      R4
0x035C	0x0821      	MOVF       FARG_Map_x+1, 0
0x035D	0x00F5      	MOVWF      R5
0x035E	0x0822      	MOVF       FARG_Map_x+2, 0
0x035F	0x00F6      	MOVWF      R6
0x0360	0x0823      	MOVF       FARG_Map_x+3, 0
0x0361	0x00F7      	MOVWF      R7
0x0362	0x0824      	MOVF       FARG_Map_in_min, 0
0x0363	0x02F4      	SUBWF      R4, 1
0x0364	0x0825      	MOVF       FARG_Map_in_min+1, 0
0x0365	0x3BF5      	SUBWFB     R5, 1
0x0366	0x0826      	MOVF       FARG_Map_in_min+2, 0
0x0367	0x3BF6      	SUBWFB     R6, 1
0x0368	0x0827      	MOVF       FARG_Map_in_min+3, 0
0x0369	0x3BF7      	SUBWFB     R7, 1
0x036A	0x0830      	MOVF       FARG_Map_out_max, 0
0x036B	0x00F0      	MOVWF      R0
0x036C	0x0831      	MOVF       FARG_Map_out_max+1, 0
0x036D	0x00F1      	MOVWF      R1
0x036E	0x0832      	MOVF       FARG_Map_out_max+2, 0
0x036F	0x00F2      	MOVWF      R2
0x0370	0x0833      	MOVF       FARG_Map_out_max+3, 0
0x0371	0x00F3      	MOVWF      R3
0x0372	0x082C      	MOVF       FARG_Map_out_min, 0
0x0373	0x02F0      	SUBWF      R0, 1
0x0374	0x082D      	MOVF       FARG_Map_out_min+1, 0
0x0375	0x3BF1      	SUBWFB     R1, 1
0x0376	0x082E      	MOVF       FARG_Map_out_min+2, 0
0x0377	0x3BF2      	SUBWFB     R2, 1
0x0378	0x082F      	MOVF       FARG_Map_out_min+3, 0
0x0379	0x3BF3      	SUBWFB     R3, 1
0x037A	0x2206      	CALL       _Mul_32x32_U
0x037B	0x0021      	MOVLB      1
0x037C	0x0828      	MOVF       FARG_Map_in_max, 0
0x037D	0x00F4      	MOVWF      R4
0x037E	0x0829      	MOVF       FARG_Map_in_max+1, 0
0x037F	0x00F5      	MOVWF      R5
0x0380	0x082A      	MOVF       FARG_Map_in_max+2, 0
0x0381	0x00F6      	MOVWF      R6
0x0382	0x082B      	MOVF       FARG_Map_in_max+3, 0
0x0383	0x00F7      	MOVWF      R7
0x0384	0x0824      	MOVF       FARG_Map_in_min, 0
0x0385	0x02F4      	SUBWF      R4, 1
0x0386	0x0825      	MOVF       FARG_Map_in_min+1, 0
0x0387	0x3BF5      	SUBWFB     R5, 1
0x0388	0x0826      	MOVF       FARG_Map_in_min+2, 0
0x0389	0x3BF6      	SUBWFB     R6, 1
0x038A	0x0827      	MOVF       FARG_Map_in_min+3, 0
0x038B	0x3BF7      	SUBWFB     R7, 1
0x038C	0x2263      	CALL       _Div_32x32_S
0x038D	0x0021      	MOVLB      1
0x038E	0x082C      	MOVF       FARG_Map_out_min, 0
0x038F	0x07F0      	ADDWF      R0, 1
0x0390	0x082D      	MOVF       FARG_Map_out_min+1, 0
0x0391	0x3DF1      	ADDWFC     R1, 1
0x0392	0x082E      	MOVF       FARG_Map_out_min+2, 0
0x0393	0x3DF2      	ADDWFC     R2, 1
0x0394	0x082F      	MOVF       FARG_Map_out_min+3, 0
0x0395	0x3DF3      	ADDWFC     R3, 1
;Whey.c,244 :: 		}
L_end_Map:
0x0396	0x0008      	RETURN
; end of _Map
_ADC_Get_Sample:
;__Lib_ADC.c,49 :: 		
;__Lib_ADC.c,50 :: 		
0x0397	0x3083      	MOVLW      131
0x0398	0x0021      	MOVLB      1
0x0399	0x059D      	ANDWF      ADCON0, 1
;__Lib_ADC.c,51 :: 		
0x039A	0x0020      	MOVLB      0
0x039B	0x0865      	MOVF       FARG_ADC_Get_Sample_channel, 0
0x039C	0x00F0      	MOVWF      R0
0x039D	0x35F0      	LSLF       R0, 1
0x039E	0x35F0      	LSLF       R0, 1
0x039F	0x0870      	MOVF       R0, 0
0x03A0	0x0021      	MOVLB      1
0x03A1	0x049D      	IORWF       ADCON0, 1
;__Lib_ADC.c,54 :: 		
0x03A2	0x2324      	CALL       _Delay_22us
;__Lib_ADC.c,57 :: 		
0x03A3	0x149D      	BSF        GO_NOT_DONE_bit, BitPos(GO_NOT_DONE_bit+0)
;__Lib_ADC.c,60 :: 		
L_ADC_Get_Sample4:
0x03A4	0x1C9D      	BTFSS      GO_NOT_DONE_bit, BitPos(GO_NOT_DONE_bit+0)
0x03A5	0x2BA7      	GOTO       L_ADC_Get_Sample5
;__Lib_ADC.c,61 :: 		
0x03A6	0x2BA4      	GOTO       L_ADC_Get_Sample4
L_ADC_Get_Sample5:
;__Lib_ADC.c,63 :: 		
0x03A7	0x081C      	MOVF       ADRESH, 0
0x03A8	0x00F1      	MOVWF      R1
0x03A9	0x01F0      	CLRF       R0
0x03AA	0x081B      	MOVF       ADRESL, 0
0x03AB	0x04F0      	IORWF       R0, 1
0x03AC	0x3000      	MOVLW      0
0x03AD	0x04F1      	IORWF       R1, 1
;__Lib_ADC.c,64 :: 		
L_end_ADC_Get_Sample:
0x03AE	0x0008      	RETURN
; end of _ADC_Get_Sample
_CalibrationLedBlink:
;Whey.c,371 :: 		void CalibrationLedBlink(unsigned time_ms){
;Whey.c,373 :: 		time_ms = time_ms/250; //4 blinks por segundo
0x03AF	0x30FA      	MOVLW      250
0x03B0	0x00F4      	MOVWF      R4
0x03B1	0x01F5      	CLRF       R5
0x03B2	0x0020      	MOVLB      0
0x03B3	0x0865      	MOVF       FARG_CalibrationLedBlink_time_ms, 0
0x03B4	0x00F0      	MOVWF      R0
0x03B5	0x0866      	MOVF       FARG_CalibrationLedBlink_time_ms+1, 0
0x03B6	0x00F1      	MOVWF      R1
0x03B7	0x2247      	CALL       _Div_16X16_U
0x03B8	0x0870      	MOVF       R0, 0
0x03B9	0x00E5      	MOVWF      FARG_CalibrationLedBlink_time_ms
0x03BA	0x0871      	MOVF       R1, 0
0x03BB	0x00E6      	MOVWF      FARG_CalibrationLedBlink_time_ms+1
;Whey.c,374 :: 		for(i=0; i< time_ms; i++){
0x03BC	0x01E7      	CLRF       CalibrationLedBlink_i_L0
0x03BD	0x01E8      	CLRF       CalibrationLedBlink_i_L0+1
L_CalibrationLedBlink44:
0x03BE	0x0866      	MOVF       FARG_CalibrationLedBlink_time_ms+1, 0
0x03BF	0x0268      	SUBWF      CalibrationLedBlink_i_L0+1, 0
0x03C0	0x1D03      	BTFSS      STATUS, 2
0x03C1	0x2BC4      	GOTO       L__CalibrationLedBlink113
0x03C2	0x0865      	MOVF       FARG_CalibrationLedBlink_time_ms, 0
0x03C3	0x0267      	SUBWF      CalibrationLedBlink_i_L0, 0
L__CalibrationLedBlink113:
0x03C4	0x1803      	BTFSC      STATUS, 0
0x03C5	0x2BE4      	GOTO       L_CalibrationLedBlink45
;Whey.c,375 :: 		CALIB_LED = 1;
0x03C6	0x178D      	BSF        RB7_bit, BitPos(RB7_bit+0)
;Whey.c,376 :: 		delay_ms(200);
0x03C7	0x3003      	MOVLW      3
0x03C8	0x00FB      	MOVWF      R11
0x03C9	0x3008      	MOVLW      8
0x03CA	0x00FC      	MOVWF      R12
0x03CB	0x3077      	MOVLW      119
0x03CC	0x00FD      	MOVWF      R13
L_CalibrationLedBlink47:
0x03CD	0x0BFD      	DECFSZ     R13, 1
0x03CE	0x2BCD      	GOTO       L_CalibrationLedBlink47
0x03CF	0x0BFC      	DECFSZ     R12, 1
0x03D0	0x2BCD      	GOTO       L_CalibrationLedBlink47
0x03D1	0x0BFB      	DECFSZ     R11, 1
0x03D2	0x2BCD      	GOTO       L_CalibrationLedBlink47
;Whey.c,377 :: 		CALIB_LED = 0;
0x03D3	0x138D      	BCF        RB7_bit, BitPos(RB7_bit+0)
;Whey.c,378 :: 		delay_ms(200);
0x03D4	0x3003      	MOVLW      3
0x03D5	0x00FB      	MOVWF      R11
0x03D6	0x3008      	MOVLW      8
0x03D7	0x00FC      	MOVWF      R12
0x03D8	0x3077      	MOVLW      119
0x03D9	0x00FD      	MOVWF      R13
L_CalibrationLedBlink48:
0x03DA	0x0BFD      	DECFSZ     R13, 1
0x03DB	0x2BDA      	GOTO       L_CalibrationLedBlink48
0x03DC	0x0BFC      	DECFSZ     R12, 1
0x03DD	0x2BDA      	GOTO       L_CalibrationLedBlink48
0x03DE	0x0BFB      	DECFSZ     R11, 1
0x03DF	0x2BDA      	GOTO       L_CalibrationLedBlink48
;Whey.c,374 :: 		for(i=0; i< time_ms; i++){
0x03E0	0x0AE7      	INCF       CalibrationLedBlink_i_L0, 1
0x03E1	0x1903      	BTFSC      STATUS, 2
0x03E2	0x0AE8      	INCF       CalibrationLedBlink_i_L0+1, 1
;Whey.c,379 :: 		}
0x03E3	0x2BBE      	GOTO       L_CalibrationLedBlink44
L_CalibrationLedBlink45:
;Whey.c,380 :: 		}
L_end_CalibrationLedBlink:
0x03E4	0x0008      	RETURN
; end of _CalibrationLedBlink
_ReadSignalsDataEEPROM:
;Whey.c,382 :: 		void ReadSignalsDataEEPROM(){
;Whey.c,387 :: 		LowerSignificative8Bits = EEPROM_Read(0X00);
0x03E5	0x0020      	MOVLB      0
0x03E6	0x01E9      	CLRF       FARG_EEPROM_Read_Address
0x03E7	0x223C      	CALL       _EEPROM_Read
0x03E8	0x0870      	MOVF       R0, 0
0x03E9	0x0020      	MOVLB      0
0x03EA	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,388 :: 		MoreSignificative8Bits = EEPROM_Read(0X01);
0x03EB	0x3001      	MOVLW      1
0x03EC	0x00E9      	MOVWF      FARG_EEPROM_Read_Address
0x03ED	0x223C      	CALL       _EEPROM_Read
0x03EE	0x0870      	MOVF       R0, 0
0x03EF	0x0020      	MOVLB      0
0x03F0	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,389 :: 		minDurationCH1 = (MoreSignificative8Bits << 8) | LowerSignificative8Bits;
0x03F1	0x0870      	MOVF       R0, 0
0x03F2	0x00B0      	MOVWF      _minDurationCH1+1
0x03F3	0x01AF      	CLRF       _minDurationCH1
0x03F4	0x0838      	MOVF       _LowerSignificative8Bits, 0
0x03F5	0x04AF      	IORWF       _minDurationCH1, 1
0x03F6	0x3000      	MOVLW      0
0x03F7	0x04B0      	IORWF       _minDurationCH1+1, 1
;Whey.c,393 :: 		LowerSignificative8Bits = EEPROM_Read(0X02);
0x03F8	0x3002      	MOVLW      2
0x03F9	0x00E9      	MOVWF      FARG_EEPROM_Read_Address
0x03FA	0x223C      	CALL       _EEPROM_Read
0x03FB	0x0870      	MOVF       R0, 0
0x03FC	0x0020      	MOVLB      0
0x03FD	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,394 :: 		MoreSignificative8Bits = EEPROM_Read(0X03);
0x03FE	0x3003      	MOVLW      3
0x03FF	0x00E9      	MOVWF      FARG_EEPROM_Read_Address
0x0400	0x223C      	CALL       _EEPROM_Read
0x0401	0x0870      	MOVF       R0, 0
0x0402	0x0020      	MOVLB      0
0x0403	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,395 :: 		minDurationCH2 = (MoreSignificative8Bits << 8) | LowerSignificative8Bits;
0x0404	0x0870      	MOVF       R0, 0
0x0405	0x00AC      	MOVWF      _minDurationCH2+1
0x0406	0x01AB      	CLRF       _minDurationCH2
0x0407	0x0838      	MOVF       _LowerSignificative8Bits, 0
0x0408	0x04AB      	IORWF       _minDurationCH2, 1
0x0409	0x3000      	MOVLW      0
0x040A	0x04AC      	IORWF       _minDurationCH2+1, 1
;Whey.c,402 :: 		LowerSignificative8Bits = EEPROM_Read(0X04);
0x040B	0x3004      	MOVLW      4
0x040C	0x00E9      	MOVWF      FARG_EEPROM_Read_Address
0x040D	0x223C      	CALL       _EEPROM_Read
0x040E	0x0870      	MOVF       R0, 0
0x040F	0x0020      	MOVLB      0
0x0410	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,403 :: 		MoreSignificative8Bits = EEPROM_Read(0X05);
0x0411	0x3005      	MOVLW      5
0x0412	0x00E9      	MOVWF      FARG_EEPROM_Read_Address
0x0413	0x223C      	CALL       _EEPROM_Read
0x0414	0x0870      	MOVF       R0, 0
0x0415	0x0020      	MOVLB      0
0x0416	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,404 :: 		maxDurationCH1 = (MoreSignificative8Bits << 8) | LowerSignificative8Bits;
0x0417	0x0870      	MOVF       R0, 0
0x0418	0x00AA      	MOVWF      _maxDurationCH1+1
0x0419	0x01A9      	CLRF       _maxDurationCH1
0x041A	0x0838      	MOVF       _LowerSignificative8Bits, 0
0x041B	0x04A9      	IORWF       _maxDurationCH1, 1
0x041C	0x3000      	MOVLW      0
0x041D	0x04AA      	IORWF       _maxDurationCH1+1, 1
;Whey.c,408 :: 		LowerSignificative8Bits = EEPROM_Read(0X06);
0x041E	0x3006      	MOVLW      6
0x041F	0x00E9      	MOVWF      FARG_EEPROM_Read_Address
0x0420	0x223C      	CALL       _EEPROM_Read
0x0421	0x0870      	MOVF       R0, 0
0x0422	0x0020      	MOVLB      0
0x0423	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,409 :: 		MoreSignificative8Bits = EEPROM_Read(0X07);
0x0424	0x3007      	MOVLW      7
0x0425	0x00E9      	MOVWF      FARG_EEPROM_Read_Address
0x0426	0x223C      	CALL       _EEPROM_Read
0x0427	0x0870      	MOVF       R0, 0
0x0428	0x0020      	MOVLB      0
0x0429	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,410 :: 		maxDurationCH2 = (MoreSignificative8Bits << 8) | LowerSignificative8Bits;
0x042A	0x0870      	MOVF       R0, 0
0x042B	0x00AE      	MOVWF      _maxDurationCH2+1
0x042C	0x01AD      	CLRF       _maxDurationCH2
0x042D	0x0838      	MOVF       _LowerSignificative8Bits, 0
0x042E	0x04AD      	IORWF       _maxDurationCH2, 1
0x042F	0x3000      	MOVLW      0
0x0430	0x04AE      	IORWF       _maxDurationCH2+1, 1
;Whey.c,415 :: 		}
L_end_ReadSignalsDataEEPROM:
0x0431	0x0008      	RETURN
; end of _ReadSignalsDataEEPROM
_ADC_Init:
;__Lib_ADC.c,23 :: 		
;__Lib_ADC.c,24 :: 		
0x0432	0x3097      	MOVLW      _ADC_Get_Sample
0x0433	0x0020      	MOVLB      0
0x0434	0x00CD      	MOVWF      _ADC_Get_Sample_Ptr
0x0435	0x3003      	MOVLW      hi_addr(_ADC_Get_Sample)
0x0436	0x00CE      	MOVWF      _ADC_Get_Sample_Ptr+1
0x0437	0x3065      	MOVLW      FARG_ADC_Get_Sample_channel
0x0438	0x00CF      	MOVWF      _ADC_Get_Sample_Ptr+2
0x0439	0x3000      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
0x043A	0x00D0      	MOVWF      _ADC_Get_Sample_Ptr+3
;__Lib_ADC.c,25 :: 		
0x043B	0x30F0      	MOVLW      240
0x043C	0x0021      	MOVLB      1
0x043D	0x009E      	MOVWF      ADCON1
;__Lib_ADC.c,26 :: 		
0x043E	0x019D      	CLRF       ADCON0
;__Lib_ADC.c,27 :: 		
0x043F	0x141D      	BSF        ADON_bit, BitPos(ADON_bit+0)
;__Lib_ADC.c,28 :: 		
L_end_ADC_Init:
0x0440	0x0008      	RETURN
; end of _ADC_Init
_Mul_32x32_FP:
;__Lib_MathDouble.c,608 :: 		
;__Lib_MathDouble.c,620 :: 		
;__Lib_MathDouble.c,622 :: 		
0x0441	0x0020      	MOVLB      0
;__Lib_MathDouble.c,624 :: 		
0x0442	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,625 :: 		
0x0443	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,626 :: 		
0x0444	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,627 :: 		
0x0445	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,628 :: 		
0x0446	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,629 :: 		
0x0447	0x2C97      	GOTO       JPMRES032
;__Lib_MathDouble.c,631 :: 		
0x0448	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,632 :: 		
0x0449	0x0676      	XORWF      R6, 0
;__Lib_MathDouble.c,633 :: 		
0x044A	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,634 :: 		
0x044B	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,635 :: 		
0x044C	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.c,636 :: 		
0x044D	0x307E      	MOVLW      126
;__Lib_MathDouble.c,637 :: 		
0x044E	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,638 :: 		
0x044F	0x2C54      	GOTO       MTUN32
;__Lib_MathDouble.c,639 :: 		
0x0450	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,640 :: 		
0x0451	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,641 :: 		
0x0452	0x2C9A      	GOTO       JPMSETFOV32
;__Lib_MathDouble.c,642 :: 		
0x0453	0x2C57      	GOTO       MOK32
;__Lib_MathDouble.c,643 :: 		
MTUN32:
;__Lib_MathDouble.c,644 :: 		
0x0454	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,645 :: 		
0x0455	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,646 :: 		
0x0456	0x2C9D      	GOTO       JPMSETFUN32
;__Lib_MathDouble.c,647 :: 		
MOK32:
;__Lib_MathDouble.c,648 :: 		
0x0457	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,649 :: 		
0x0458	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,650 :: 		
0x0459	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,651 :: 		
0x045A	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,652 :: 		
0x045B	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,653 :: 		
0x045C	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,654 :: 		
0x045D	0x17F8      	BSF        R8, 7
;__Lib_MathDouble.c,655 :: 		
0x045E	0x17F6      	BSF        R6, 7
;__Lib_MathDouble.c,656 :: 		
0x045F	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,657 :: 		
0x0460	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,658 :: 		
0x0461	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,659 :: 		
0x0462	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,660 :: 		
0x0463	0x3018      	MOVLW      24
;__Lib_MathDouble.c,661 :: 		
0x0464	0x00A1      	MOVWF      __math_tempbD
;__Lib_MathDouble.c,662 :: 		
MLOOP32:
;__Lib_MathDouble.c,663 :: 		
0x0465	0x1C7D      	BTFSS      R13, 0
;__Lib_MathDouble.c,664 :: 		
0x0466	0x2C71      	GOTO       MNOADD32
;__Lib_MathDouble.c,666 :: 		
0x0467	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,667 :: 		
0x0468	0x07F0      	ADDWF      R0, 1
;__Lib_MathDouble.c,668 :: 		
0x0469	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,669 :: 		
0x046A	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,670 :: 		
0x046B	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,671 :: 		
0x046C	0x07F1      	ADDWF      R1, 1
;__Lib_MathDouble.c,672 :: 		
0x046D	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,673 :: 		
0x046E	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,674 :: 		
0x046F	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,675 :: 		
0x0470	0x07F2      	ADDWF      R2, 1
;__Lib_MathDouble.c,676 :: 		
MNOADD32:
;__Lib_MathDouble.c,677 :: 		
0x0471	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,678 :: 		
0x0472	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,679 :: 		
0x0473	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,680 :: 		
0x0474	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,681 :: 		
0x0475	0x0CFC      	RRF        R12, 1
;__Lib_MathDouble.c,682 :: 		
0x0476	0x0CFD      	RRF        R13, 1
;__Lib_MathDouble.c,683 :: 		
0x0477	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,684 :: 		
0x0478	0x0BA1      	DECFSZ     __math_tempbD, 1
;__Lib_MathDouble.c,685 :: 		
0x0479	0x2C65      	GOTO       MLOOP32
;__Lib_MathDouble.c,686 :: 		
0x047A	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,687 :: 		
0x047B	0x2C81      	GOTO       MROUND32
;__Lib_MathDouble.c,688 :: 		
0x047C	0x0DF8      	RLF        R8, 1
;__Lib_MathDouble.c,689 :: 		
0x047D	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,690 :: 		
0x047E	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,691 :: 		
0x047F	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,692 :: 		
0x0480	0x03F3      	DECF       R3, 1
;__Lib_MathDouble.c,693 :: 		
MROUND32:
;__Lib_MathDouble.c,694 :: 		
0x0481	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,695 :: 		
0x0482	0x1C70      	BTFSS      R0, 0
;__Lib_MathDouble.c,696 :: 		
0x0483	0x2C93      	GOTO       MUL32OK
;__Lib_MathDouble.c,697 :: 		
0x0484	0x1FF8      	BTFSS      R8, 7
;__Lib_MathDouble.c,698 :: 		
0x0485	0x2C93      	GOTO       MUL32OK
;__Lib_MathDouble.c,699 :: 		
0x0486	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.c,700 :: 		
0x0487	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,701 :: 		
0x0488	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,702 :: 		
0x0489	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,703 :: 		
0x048A	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,704 :: 		
0x048B	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,705 :: 		
0x048C	0x2C93      	GOTO       MUL32OK
;__Lib_MathDouble.c,706 :: 		
0x048D	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,707 :: 		
0x048E	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,708 :: 		
0x048F	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,709 :: 		
0x0490	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,710 :: 		
0x0491	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,711 :: 		
0x0492	0x2C9A      	GOTO       JPMSETFOV32
;__Lib_MathDouble.c,712 :: 		
MUL32OK:
;__Lib_MathDouble.c,713 :: 		
0x0493	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,714 :: 		
0x0494	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,715 :: 		
0x0495	0x3000      	MOVLW      0
;__Lib_MathDouble.c,717 :: 		
0x0496	0x2C9F      	GOTO       MUL32EEE
;__Lib_MathDouble.c,718 :: 		
JPMRES032:
;__Lib_MathDouble.c,719 :: 		
0x0497	0x3001      	MOVLW      1
;__Lib_MathDouble.c,722 :: 		
0x0498	0x20B7      	CALL       _RES032
;__Lib_MathDouble.c,724 :: 		
0x0499	0x2C9F      	GOTO       MUL32EEE
;__Lib_MathDouble.c,725 :: 		
JPMSETFOV32:
;__Lib_MathDouble.c,726 :: 		
0x049A	0x3002      	MOVLW      2
;__Lib_MathDouble.c,729 :: 		
0x049B	0x2318      	CALL       _SETFOV32
;__Lib_MathDouble.c,731 :: 		
0x049C	0x2C9F      	GOTO       MUL32EEE
;__Lib_MathDouble.c,732 :: 		
JPMSETFUN32:
;__Lib_MathDouble.c,733 :: 		
0x049D	0x3004      	MOVLW      4
;__Lib_MathDouble.c,736 :: 		
0x049E	0x21FA      	CALL       _SETFUN32
;__Lib_MathDouble.c,738 :: 		
MUL32EEE:
;__Lib_MathDouble.c,739 :: 		
0x049F	0x0000      	NOP
;__Lib_MathDouble.c,746 :: 		
L_end_Mul_32x32_FP:
0x04A0	0x0008      	RETURN
; end of _Mul_32x32_FP
_EEPROM_Write:
;__Lib_EEPROM.c,9 :: 		
;__Lib_EEPROM.c,12 :: 		
0x04A1	0x0020      	MOVLB      0
0x04A2	0x0865      	MOVF       FARG_EEPROM_Write_Address, 0
0x04A3	0x0023      	MOVLB      3
0x04A4	0x0091      	MOVWF      EEADR
0x04A5	0x0192      	CLRF       EEADR+1
;__Lib_EEPROM.c,13 :: 		
0x04A6	0x0020      	MOVLB      0
0x04A7	0x0866      	MOVF       FARG_EEPROM_Write_data_, 0
0x04A8	0x0023      	MOVLB      3
0x04A9	0x0093      	MOVWF      EEDATL
;__Lib_EEPROM.c,14 :: 		
0x04AA	0x1315      	BCF        CFGS_bit, BitPos(CFGS_bit+0)
;__Lib_EEPROM.c,15 :: 		
0x04AB	0x1395      	BCF        EEPGD_bit, BitPos(EEPGD_bit+0)
;__Lib_EEPROM.c,16 :: 		
0x04AC	0x1515      	BSF        WREN_bit, BitPos(WREN_bit+0)
;__Lib_EEPROM.c,18 :: 		
0x04AD	0x080B      	MOVF       INTCON, 0
0x04AE	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,19 :: 		
0x04AF	0x138B      	BCF        GIE_bit, BitPos(GIE_bit+0)
;__Lib_EEPROM.c,20 :: 		
0x04B0	0x3055      	MOVLW      85
0x04B1	0x0096      	MOVWF      EECON2
;__Lib_EEPROM.c,21 :: 		
0x04B2	0x30AA      	MOVLW      170
0x04B3	0x0096      	MOVWF      EECON2
;__Lib_EEPROM.c,22 :: 		
0x04B4	0x1495      	BSF        WR_bit, BitPos(WR_bit+0)
;__Lib_EEPROM.c,23 :: 		
0x04B5	0x1BF0      	BTFSC      R0, 7
0x04B6	0x2CB9      	GOTO       L__EEPROM_Write4
0x04B7	0x138B      	BCF        INTCON, 7
0x04B8	0x2CBA      	GOTO       L__EEPROM_Write5
L__EEPROM_Write4:
0x04B9	0x178B      	BSF        INTCON, 7
L__EEPROM_Write5:
;__Lib_EEPROM.c,24 :: 		
0x04BA	0x1115      	BCF        WREN_bit, BitPos(WREN_bit+0)
;__Lib_EEPROM.c,25 :: 		
L_EEPROM_Write0:
0x04BB	0x1C95      	BTFSS      WR_bit, BitPos(WR_bit+0)
0x04BC	0x2CBE      	GOTO       L_EEPROM_Write1
;__Lib_EEPROM.c,26 :: 		
0x04BD	0x2CBB      	GOTO       L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM.c,28 :: 		
L_end_EEPROM_Write:
0x04BE	0x0008      	RETURN
; end of _EEPROM_Write
_Compare_Double:
;__Lib_MathDouble.c,2038 :: 		
;__Lib_MathDouble.c,2047 :: 		
;__Lib_MathDouble.c,2049 :: 		
0x04BF	0x0020      	MOVLB      0
;__Lib_MathDouble.c,2051 :: 		
0x04C0	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,2052 :: 		
0x04C1	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,2053 :: 		
0x04C2	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,2054 :: 		
0x04C3	0x147A      	BSF        R10, 0
;__Lib_MathDouble.c,2055 :: 		
0x04C4	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,2056 :: 		
0x04C5	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,2057 :: 		
0x04C6	0x14FA      	BSF        R10, 1
;__Lib_MathDouble.c,2059 :: 		
0x04C7	0x087A      	MOVF       R10, 0
;__Lib_MathDouble.c,2060 :: 		
0x04C8	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2061 :: 		
0x04C9	0x2D0A      	GOTO       COMPARE_EQU
;__Lib_MathDouble.c,2062 :: 		
0x04CA	0x3A03      	XORLW      3
;__Lib_MathDouble.c,2063 :: 		
0x04CB	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2064 :: 		
0x04CC	0x2CD5      	GOTO       COMPARE_NOTZERO
;__Lib_MathDouble.c,2066 :: 		
0x04CD	0x187A      	BTFSC      R10, 0
;__Lib_MathDouble.c,2067 :: 		
0x04CE	0x2CD2      	GOTO       COMPARE_XNOTZERO
;__Lib_MathDouble.c,2069 :: 		
0x04CF	0x1FF6      	BTFSS      R6, 7
;__Lib_MathDouble.c,2070 :: 		
0x04D0	0x2D08      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2071 :: 		
0x04D1	0x2D06      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2072 :: 		
COMPARE_XNOTZERO:
;__Lib_MathDouble.c,2073 :: 		
0x04D2	0x1FF2      	BTFSS      R2, 7
;__Lib_MathDouble.c,2074 :: 		
0x04D3	0x2D06      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2075 :: 		
0x04D4	0x2D08      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2077 :: 		
COMPARE_NOTZERO:
;__Lib_MathDouble.c,2078 :: 		
0x04D5	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,2079 :: 		
0x04D6	0x3980      	ANDLW      128
;__Lib_MathDouble.c,2080 :: 		
0x04D7	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,2081 :: 		
0x04D8	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,2083 :: 		
0x04D9	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,2084 :: 		
0x04DA	0x3980      	ANDLW      128
;__Lib_MathDouble.c,2085 :: 		
0x04DB	0x13F6      	BCF        R6, 7
;__Lib_MathDouble.c,2087 :: 		
0x04DC	0x067A      	XORWF      R10, 0
;__Lib_MathDouble.c,2088 :: 		
0x04DD	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2089 :: 		
0x04DE	0x2CE3      	GOTO       COMPARE_TESTALL
;__Lib_MathDouble.c,2091 :: 		
0x04DF	0x087A      	MOVF       R10, 0
;__Lib_MathDouble.c,2092 :: 		
0x04E0	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2093 :: 		
0x04E1	0x2D06      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2094 :: 		
0x04E2	0x2D08      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2096 :: 		
COMPARE_TESTALL:
;__Lib_MathDouble.c,2097 :: 		
0x04E3	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,2098 :: 		
0x04E4	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,2099 :: 		
0x04E5	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2100 :: 		
0x04E6	0x2CEA      	GOTO       COMPARE_C1
;__Lib_MathDouble.c,2101 :: 		
0x04E7	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2102 :: 		
0x04E8	0x2CFE      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2103 :: 		
0x04E9	0x2D02      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2104 :: 		
COMPARE_C1:
;__Lib_MathDouble.c,2105 :: 		
0x04EA	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,2106 :: 		
0x04EB	0x0272      	SUBWF      R2, 0
;__Lib_MathDouble.c,2107 :: 		
0x04EC	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2108 :: 		
0x04ED	0x2CF1      	GOTO       COMPARE_C2
;__Lib_MathDouble.c,2109 :: 		
0x04EE	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2110 :: 		
0x04EF	0x2CFE      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2111 :: 		
0x04F0	0x2D02      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2112 :: 		
COMPARE_C2:
;__Lib_MathDouble.c,2113 :: 		
0x04F1	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,2114 :: 		
0x04F2	0x0271      	SUBWF      R1, 0
;__Lib_MathDouble.c,2115 :: 		
0x04F3	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2116 :: 		
0x04F4	0x2CF8      	GOTO       COMPARE_C3
;__Lib_MathDouble.c,2117 :: 		
0x04F5	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,2118 :: 		
0x04F6	0x2CFE      	GOTO       GT_FALSE
;__Lib_MathDouble.c,2119 :: 		
0x04F7	0x2D02      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2120 :: 		
COMPARE_C3:
;__Lib_MathDouble.c,2121 :: 		
0x04F8	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,2122 :: 		
0x04F9	0x0270      	SUBWF      R0, 0
;__Lib_MathDouble.c,2123 :: 		
0x04FA	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2124 :: 		
0x04FB	0x2D0A      	GOTO       COMPARE_EQU
;__Lib_MathDouble.c,2125 :: 		
0x04FC	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,2126 :: 		
0x04FD	0x2D02      	GOTO       GT_TRUE
;__Lib_MathDouble.c,2128 :: 		
GT_FALSE:
;__Lib_MathDouble.c,2129 :: 		
0x04FE	0x08FA      	MOVF       R10, 1
;__Lib_MathDouble.c,2130 :: 		
0x04FF	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2131 :: 		
0x0500	0x2D08      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2132 :: 		
0x0501	0x2D06      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2133 :: 		
GT_TRUE:
;__Lib_MathDouble.c,2134 :: 		
0x0502	0x08FA      	MOVF       R10, 1
;__Lib_MathDouble.c,2135 :: 		
0x0503	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,2136 :: 		
0x0504	0x2D06      	GOTO       COMPARE_GT
;__Lib_MathDouble.c,2137 :: 		
0x0505	0x2D08      	GOTO       COMPARE_LT
;__Lib_MathDouble.c,2139 :: 		
COMPARE_GT:
;__Lib_MathDouble.c,2142 :: 		
0x0506	0x1403      	BSF        STATUS, 0
;__Lib_MathDouble.c,2143 :: 		
0x0507	0x0008      	RETURN
;__Lib_MathDouble.c,2144 :: 		
COMPARE_LT:
;__Lib_MathDouble.c,2147 :: 		
0x0508	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,2148 :: 		
0x0509	0x0008      	RETURN
;__Lib_MathDouble.c,2149 :: 		
COMPARE_EQU:
;__Lib_MathDouble.c,2152 :: 		
0x050A	0x1403      	BSF        STATUS, 0
;__Lib_MathDouble.c,2153 :: 		
0x050B	0x1503      	BSF        STATUS, 2
;__Lib_MathDouble.c,2154 :: 		
0x050C	0x0008      	RETURN
;__Lib_MathDouble.c,2156 :: 		
L_end_Compare_Double:
0x050D	0x0008      	RETURN
; end of _Compare_Double
_Div_32x32_FP:
;__Lib_MathDouble.c,758 :: 		
;__Lib_MathDouble.c,770 :: 		
;__Lib_MathDouble.c,773 :: 		
0x050E	0x0874      	MOVF       R4, 0
0x050F	0x3A00      	XORLW      0
0x0510	0x1D03      	BTFSS      STATUS, 2
0x0511	0x2D27      	GOTO       L_Div_32x32_FP7
;__Lib_MathDouble.c,774 :: 		
0x0512	0x0875      	MOVF       R5, 0
0x0513	0x3A00      	XORLW      0
0x0514	0x1D03      	BTFSS      STATUS, 2
0x0515	0x2D27      	GOTO       L_Div_32x32_FP8
;__Lib_MathDouble.c,775 :: 		
0x0516	0x0876      	MOVF       R6, 0
0x0517	0x3A00      	XORLW      0
0x0518	0x1D03      	BTFSS      STATUS, 2
0x0519	0x2D27      	GOTO       L_Div_32x32_FP9
;__Lib_MathDouble.c,776 :: 		
0x051A	0x0877      	MOVF       R7, 0
0x051B	0x3A00      	XORLW      0
0x051C	0x1D03      	BTFSS      STATUS, 2
0x051D	0x2D27      	GOTO       L_Div_32x32_FP10
;__Lib_MathDouble.c,777 :: 		
0x051E	0x30FF      	MOVLW      255
0x051F	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,778 :: 		
0x0520	0x30FF      	MOVLW      255
0x0521	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,779 :: 		
0x0522	0x307F      	MOVLW      127
0x0523	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,780 :: 		
0x0524	0x30FF      	MOVLW      255
0x0525	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,781 :: 		
0x0526	0x2DC1      	GOTO       L_end_Div_32x32_FP
;__Lib_MathDouble.c,782 :: 		
L_Div_32x32_FP10:
L_Div_32x32_FP9:
L_Div_32x32_FP8:
L_Div_32x32_FP7:
;__Lib_MathDouble.c,785 :: 		
0x0527	0x0020      	MOVLB      0
;__Lib_MathDouble.c,787 :: 		
0x0528	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,788 :: 		
0x0529	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,789 :: 		
0x052A	0x2DB5      	GOTO       JPDSETFDZ32
;__Lib_MathDouble.c,791 :: 		
0x052B	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,792 :: 		
0x052C	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,793 :: 		
0x052D	0x2DB8      	GOTO       JPDRES032
;__Lib_MathDouble.c,795 :: 		
0x052E	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,796 :: 		
0x052F	0x0676      	XORWF      R6, 0
;__Lib_MathDouble.c,797 :: 		
0x0530	0x3980      	ANDLW      128
;__Lib_MathDouble.c,798 :: 		
0x0531	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,799 :: 		
0x0532	0x17F2      	BSF        R2, 7
;__Lib_MathDouble.c,800 :: 		
0x0533	0x17F6      	BSF        R6, 7
;__Lib_MathDouble.c,802 :: 		
0x0534	0x01A1      	CLRF       __math_tempbD
;__Lib_MathDouble.c,803 :: 		
0x0535	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,804 :: 		
0x0536	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,805 :: 		
0x0537	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,806 :: 		
0x0538	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,807 :: 		
0x0539	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,808 :: 		
0x053A	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,810 :: 		
0x053B	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,811 :: 		
0x053C	0x02FD      	SUBWF      R13, 1
;__Lib_MathDouble.c,812 :: 		
0x053D	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,813 :: 		
0x053E	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,814 :: 		
0x053F	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,816 :: 		
0x0540	0x02FC      	SUBWF      R12, 1
;__Lib_MathDouble.c,817 :: 		
0x0541	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,818 :: 		
0x0542	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,819 :: 		
0x0543	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,821 :: 		
0x0544	0x02F8      	SUBWF      R8, 1
;__Lib_MathDouble.c,822 :: 		
0x0545	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,823 :: 		
0x0546	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,824 :: 		
0x0547	0x01FD      	CLRF       R13
;__Lib_MathDouble.c,825 :: 		
0x0548	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,826 :: 		
0x0549	0x2D51      	GOTO       DALIGN32OK
;__Lib_MathDouble.c,828 :: 		
0x054A	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,829 :: 		
0x054B	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,830 :: 		
0x054C	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,831 :: 		
0x054D	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,832 :: 		
0x054E	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,833 :: 		
0x054F	0x3001      	MOVLW      1
;__Lib_MathDouble.c,834 :: 		
0x0550	0x00A1      	MOVWF      __math_tempbD
;__Lib_MathDouble.c,835 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,836 :: 		
0x0551	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,837 :: 		
0x0552	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,838 :: 		
0x0553	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,839 :: 		
0x0554	0x2D5B      	GOTO       ALTB32
;__Lib_MathDouble.c,841 :: 		
0x0555	0x307E      	MOVLW      126
;__Lib_MathDouble.c,842 :: 		
0x0556	0x0721      	ADDWF      __math_tempbD, 0
;__Lib_MathDouble.c,843 :: 		
0x0557	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.c,844 :: 		
0x0558	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,845 :: 		
0x0559	0x2DBB      	GOTO       JPDSETFOV32
;__Lib_MathDouble.c,846 :: 		
0x055A	0x2D60      	GOTO       DARGOK32
;__Lib_MathDouble.c,847 :: 		
ALTB32:
;__Lib_MathDouble.c,848 :: 		
0x055B	0x307E      	MOVLW      126
;__Lib_MathDouble.c,849 :: 		
0x055C	0x0721      	ADDWF      __math_tempbD, 0
;__Lib_MathDouble.c,850 :: 		
0x055D	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.c,851 :: 		
0x055E	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,852 :: 		
0x055F	0x2DBE      	GOTO       JPDSETFUN32
;__Lib_MathDouble.c,853 :: 		
DARGOK32:
;__Lib_MathDouble.c,854 :: 		
0x0560	0x3018      	MOVLW      24
;__Lib_MathDouble.c,856 :: 		
0x0561	0x07FA      	ADDWF      R10, 1
;__Lib_MathDouble.c,857 :: 		
DLOOP32:
;__Lib_MathDouble.c,858 :: 		
0x0562	0x0DFD      	RLF        R13, 1
;__Lib_MathDouble.c,859 :: 		
0x0563	0x0DFC      	RLF        R12, 1
;__Lib_MathDouble.c,860 :: 		
0x0564	0x0DF8      	RLF        R8, 1
;__Lib_MathDouble.c,861 :: 		
0x0565	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,862 :: 		
0x0566	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,863 :: 		
0x0567	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,864 :: 		
0x0568	0x0DA1      	RLF        __math_tempbD, 1
;__Lib_MathDouble.c,866 :: 		
0x0569	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,867 :: 		
0x056A	0x02F0      	SUBWF      R0, 1
;__Lib_MathDouble.c,868 :: 		
0x056B	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,869 :: 		
0x056C	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,870 :: 		
0x056D	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,872 :: 		
0x056E	0x02F1      	SUBWF      R1, 1
;__Lib_MathDouble.c,873 :: 		
0x056F	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,874 :: 		
0x0570	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,875 :: 		
0x0571	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,877 :: 		
0x0572	0x02F2      	SUBWF      R2, 1
;__Lib_MathDouble.c,878 :: 		
0x0573	0x0D76      	RLF        R6, 0
;__Lib_MathDouble.c,879 :: 		
0x0574	0x04A1      	IORWF       __math_tempbD, 1
;__Lib_MathDouble.c,880 :: 		
0x0575	0x1C21      	BTFSS      __math_tempbD, 0
;__Lib_MathDouble.c,881 :: 		
0x0576	0x2D79      	GOTO       DREST32
;__Lib_MathDouble.c,882 :: 		
0x0577	0x147D      	BSF        R13, 0
;__Lib_MathDouble.c,883 :: 		
0x0578	0x2D84      	GOTO       DOK32
;__Lib_MathDouble.c,884 :: 		
DREST32:
;__Lib_MathDouble.c,885 :: 		
0x0579	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,886 :: 		
0x057A	0x07F0      	ADDWF      R0, 1
;__Lib_MathDouble.c,887 :: 		
0x057B	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,888 :: 		
0x057C	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,889 :: 		
0x057D	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,891 :: 		
0x057E	0x07F1      	ADDWF      R1, 1
;__Lib_MathDouble.c,892 :: 		
0x057F	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,893 :: 		
0x0580	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,894 :: 		
0x0581	0x0A76      	INCF       R6, 0
;__Lib_MathDouble.c,895 :: 		
0x0582	0x07F2      	ADDWF      R2, 1
;__Lib_MathDouble.c,896 :: 		
0x0583	0x107D      	BCF        R13, 0
;__Lib_MathDouble.c,897 :: 		
DOK32:
;__Lib_MathDouble.c,899 :: 		
0x0584	0x03FA      	DECF       R10, 1
;__Lib_MathDouble.c,900 :: 		
0x0585	0x301F      	MOVLW      31
;__Lib_MathDouble.c,901 :: 		
0x0586	0x057A      	ANDWF      R10, 0
;__Lib_MathDouble.c,902 :: 		
0x0587	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,903 :: 		
0x0588	0x2D62      	GOTO       DLOOP32
;__Lib_MathDouble.c,905 :: 		
0x0589	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,906 :: 		
0x058A	0x1C7D      	BTFSS      R13, 0
;__Lib_MathDouble.c,907 :: 		
0x058B	0x2DAB      	GOTO       DIV32OK
;__Lib_MathDouble.c,908 :: 		
0x058C	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,909 :: 		
0x058D	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,910 :: 		
0x058E	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,911 :: 		
0x058F	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,912 :: 		
0x0590	0x0DA1      	RLF        __math_tempbD, 1
;__Lib_MathDouble.c,914 :: 		
0x0591	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,915 :: 		
0x0592	0x02F0      	SUBWF      R0, 1
;__Lib_MathDouble.c,916 :: 		
0x0593	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,917 :: 		
0x0594	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,918 :: 		
0x0595	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,919 :: 		
0x0596	0x02F1      	SUBWF      R1, 1
;__Lib_MathDouble.c,920 :: 		
0x0597	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,921 :: 		
0x0598	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,922 :: 		
0x0599	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,923 :: 		
0x059A	0x02F2      	SUBWF      R2, 1
;__Lib_MathDouble.c,924 :: 		
0x059B	0x0D76      	RLF        R6, 0
;__Lib_MathDouble.c,925 :: 		
0x059C	0x0421      	IORWF       __math_tempbD, 0
;__Lib_MathDouble.c,926 :: 		
0x059D	0x3901      	ANDLW      1
;__Lib_MathDouble.c,927 :: 		
0x059E	0x07FD      	ADDWF      R13, 1
;__Lib_MathDouble.c,928 :: 		
0x059F	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,929 :: 		
0x05A0	0x0AFC      	INCF       R12, 1
;__Lib_MathDouble.c,930 :: 		
0x05A1	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,931 :: 		
0x05A2	0x0AF8      	INCF       R8, 1
;__Lib_MathDouble.c,932 :: 		
0x05A3	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,933 :: 		
0x05A4	0x2DAB      	GOTO       DIV32OK
;__Lib_MathDouble.c,934 :: 		
0x05A5	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,935 :: 		
0x05A6	0x0CFC      	RRF        R12, 1
;__Lib_MathDouble.c,936 :: 		
0x05A7	0x0CFD      	RRF        R13, 1
;__Lib_MathDouble.c,937 :: 		
0x05A8	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,938 :: 		
0x05A9	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,939 :: 		
0x05AA	0x2DBB      	GOTO       JPDSETFOV32
;__Lib_MathDouble.c,940 :: 		
DIV32OK:
;__Lib_MathDouble.c,941 :: 		
0x05AB	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,942 :: 		
0x05AC	0x13F8      	BCF        R8, 7
;__Lib_MathDouble.c,943 :: 		
0x05AD	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,944 :: 		
0x05AE	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,945 :: 		
0x05AF	0x087C      	MOVF       R12, 0
;__Lib_MathDouble.c,946 :: 		
0x05B0	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,947 :: 		
0x05B1	0x087D      	MOVF       R13, 0
;__Lib_MathDouble.c,948 :: 		
0x05B2	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,950 :: 		
0x05B3	0x3000      	MOVLW      0
;__Lib_MathDouble.c,952 :: 		
0x05B4	0x2DC0      	GOTO       DIV32EEE
;__Lib_MathDouble.c,953 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,954 :: 		
0x05B5	0x3001      	MOVLW      1
;__Lib_MathDouble.c,957 :: 		
0x05B6	0x2315      	CALL       _SETFDZ32
;__Lib_MathDouble.c,959 :: 		
0x05B7	0x2DC0      	GOTO       DIV32EEE
;__Lib_MathDouble.c,960 :: 		
JPDRES032:
;__Lib_MathDouble.c,961 :: 		
0x05B8	0x3002      	MOVLW      2
;__Lib_MathDouble.c,964 :: 		
0x05B9	0x20B7      	CALL       _RES032
;__Lib_MathDouble.c,966 :: 		
0x05BA	0x2DC0      	GOTO       DIV32EEE
;__Lib_MathDouble.c,967 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,968 :: 		
0x05BB	0x3004      	MOVLW      4
;__Lib_MathDouble.c,971 :: 		
0x05BC	0x2318      	CALL       _SETFOV32
;__Lib_MathDouble.c,973 :: 		
0x05BD	0x2DC0      	GOTO       DIV32EEE
;__Lib_MathDouble.c,974 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,975 :: 		
0x05BE	0x3008      	MOVLW      8
;__Lib_MathDouble.c,978 :: 		
0x05BF	0x21FA      	CALL       _SETFUN32
;__Lib_MathDouble.c,980 :: 		
DIV32EEE:
;__Lib_MathDouble.c,981 :: 		
0x05C0	0x0000      	NOP
;__Lib_MathDouble.c,990 :: 		
L_end_Div_32x32_FP:
0x05C1	0x0008      	RETURN
; end of _Div_32x32_FP
_Micros:
;Whey.c,147 :: 		unsigned long long Micros(){
;Whey.c,148 :: 		return  (TMR1H <<8 | TMR1L)* TIMER1_CONST     //cada bit do timer 1 vale 1us
0x05C2	0x0020      	MOVLB      0
0x05C3	0x0817      	MOVF       TMR1H, 0
0x05C4	0x00F1      	MOVWF      R1
0x05C5	0x01F0      	CLRF       R0
0x05C6	0x0816      	MOVF       TMR1L, 0
0x05C7	0x0470      	IORWF       R0, 0
0x05C8	0x00F5      	MOVWF      R5
0x05C9	0x0871      	MOVF       R1, 0
0x05CA	0x00F6      	MOVWF      R6
0x05CB	0x3000      	MOVLW      0
0x05CC	0x04F6      	IORWF       R6, 1
;Whey.c,149 :: 		+ numberInterruptionsTimer1*OVERFLOW_CONST; //numero de interrupcoes vezes o valor maximo do Timer 1 (2^16)
0x05CD	0x0832      	MOVF       _numberInterruptionsTimer1+1, 0
0x05CE	0x00F3      	MOVWF      R3
0x05CF	0x0831      	MOVF       _numberInterruptionsTimer1, 0
0x05D0	0x00F2      	MOVWF      R2
0x05D1	0x01F0      	CLRF       R0
0x05D2	0x01F1      	CLRF       R1
0x05D3	0x0875      	MOVF       R5, 0
0x05D4	0x07F0      	ADDWF      R0, 1
0x05D5	0x0876      	MOVF       R6, 0
0x05D6	0x3DF1      	ADDWFC     R1, 1
0x05D7	0x3000      	MOVLW      0
0x05D8	0x3DF2      	ADDWFC     R2, 1
0x05D9	0x3DF3      	ADDWFC     R3, 1
;Whey.c,150 :: 		}
L_end_Micros:
0x05DA	0x0008      	RETURN
; end of _Micros
_word2double:
;__Lib_MathDouble.c,1851 :: 		
;__Lib_MathDouble.c,1857 :: 		
0x05DB	0x0020      	MOVLB      0
;__Lib_MathDouble.c,1858 :: 		
0x05DC	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1859 :: 		
0x05DD	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,1860 :: 		
0x05DE	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,1861 :: 		
0x05DF	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1862 :: 		
0x05E0	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1863 :: 		
0x05E1	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1864 :: 		
0x05E2	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,1867 :: 		
0x05E3	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1868 :: 		
0x05E4	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,1870 :: 		
0x05E5	0x3096      	MOVLW      150
;__Lib_MathDouble.c,1871 :: 		
0x05E6	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1872 :: 		
0x05E7	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,1874 :: 		
0x05E8	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1875 :: 		
0x05E9	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1876 :: 		
0x05EA	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,1877 :: 		
0x05EB	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1878 :: 		
0x05EC	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,1879 :: 		
0x05ED	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1881 :: 		
0x05EE	0x232A      	CALL       _NRM3232
;__Lib_MathDouble.c,1882 :: 		
L_end_word2double:
0x05EF	0x0008      	RETURN
; end of _word2double
_SetDutyCycle:
;Whey.c,96 :: 		void SetDutyCycle(unsigned int channel, unsigned int duty){ //funcao responsavel por setar o dutycicle nos PWMS, variando de 0 a 255
;Whey.c,97 :: 		if(channel == 1)
0x05F0	0x3000      	MOVLW      0
0x05F1	0x0020      	MOVLB      0
0x05F2	0x0666      	XORWF      FARG_SetDutyCycle_channel+1, 0
0x05F3	0x1D03      	BTFSS      STATUS, 2
0x05F4	0x2DF7      	GOTO       L__SetDutyCycle79
0x05F5	0x3001      	MOVLW      1
0x05F6	0x0665      	XORWF      FARG_SetDutyCycle_channel, 0
L__SetDutyCycle79:
0x05F7	0x1D03      	BTFSS      STATUS, 2
0x05F8	0x2DFC      	GOTO       L_SetDutyCycle0
;Whey.c,98 :: 		CCPR1L = duty;
0x05F9	0x0867      	MOVF       FARG_SetDutyCycle_duty, 0
0x05FA	0x0025      	MOVLB      5
0x05FB	0x0091      	MOVWF      CCPR1L
L_SetDutyCycle0:
;Whey.c,99 :: 		if(channel == 2)
0x05FC	0x3000      	MOVLW      0
0x05FD	0x0020      	MOVLB      0
0x05FE	0x0666      	XORWF      FARG_SetDutyCycle_channel+1, 0
0x05FF	0x1D03      	BTFSS      STATUS, 2
0x0600	0x2E03      	GOTO       L__SetDutyCycle80
0x0601	0x3002      	MOVLW      2
0x0602	0x0665      	XORWF      FARG_SetDutyCycle_channel, 0
L__SetDutyCycle80:
0x0603	0x1D03      	BTFSS      STATUS, 2
0x0604	0x2E08      	GOTO       L_SetDutyCycle1
;Whey.c,100 :: 		CCPR2L = duty;
0x0605	0x0867      	MOVF       FARG_SetDutyCycle_duty, 0
0x0606	0x0025      	MOVLB      5
0x0607	0x0098      	MOVWF      CCPR2L
L_SetDutyCycle1:
;Whey.c,101 :: 		}
L_end_SetDutyCycle:
0x0608	0x0008      	RETURN
; end of _SetDutyCycle
_PwmSteering:
;Whey.c,103 :: 		void PwmSteering(unsigned int channel, unsigned int port){
;Whey.c,105 :: 		if(channel == 1){
0x0609	0x3000      	MOVLW      0
0x060A	0x0020      	MOVLB      0
0x060B	0x0666      	XORWF      FARG_PwmSteering_channel+1, 0
0x060C	0x1D03      	BTFSS      STATUS, 2
0x060D	0x2E10      	GOTO       L__PwmSteering82
0x060E	0x3001      	MOVLW      1
0x060F	0x0665      	XORWF      FARG_PwmSteering_channel, 0
L__PwmSteering82:
0x0610	0x1D03      	BTFSS      STATUS, 2
0x0611	0x2E2F      	GOTO       L_PwmSteering2
;Whey.c,106 :: 		PSTR1CON.B0 = 0;   //1 = P1A pin is assigned to port pin
0x0612	0x0025      	MOVLB      5
0x0613	0x1016      	BCF        PSTR1CON, 0
;Whey.c,107 :: 		PSTR1CON.B1 = 0;   //1 = P1B pin is assigned to port pin
0x0614	0x1096      	BCF        PSTR1CON, 1
;Whey.c,108 :: 		if(port == 1){
0x0615	0x3000      	MOVLW      0
0x0616	0x0020      	MOVLB      0
0x0617	0x0668      	XORWF      FARG_PwmSteering_port+1, 0
0x0618	0x1D03      	BTFSS      STATUS, 2
0x0619	0x2E1C      	GOTO       L__PwmSteering83
0x061A	0x3001      	MOVLW      1
0x061B	0x0667      	XORWF      FARG_PwmSteering_port, 0
L__PwmSteering83:
0x061C	0x1D03      	BTFSS      STATUS, 2
0x061D	0x2E22      	GOTO       L_PwmSteering3
;Whey.c,109 :: 		P1B = 0;         //port pin stays at low
0x061E	0x120C      	BCF        RA4_bit, BitPos(RA4_bit+0)
;Whey.c,110 :: 		PSTR1CON.B0 = 1; //1 = P1A pin has the PWM waveform
0x061F	0x0025      	MOVLB      5
0x0620	0x1416      	BSF        PSTR1CON, 0
;Whey.c,111 :: 		}
0x0621	0x2E2E      	GOTO       L_PwmSteering4
L_PwmSteering3:
;Whey.c,112 :: 		else if(port == 2){
0x0622	0x3000      	MOVLW      0
0x0623	0x0020      	MOVLB      0
0x0624	0x0668      	XORWF      FARG_PwmSteering_port+1, 0
0x0625	0x1D03      	BTFSS      STATUS, 2
0x0626	0x2E29      	GOTO       L__PwmSteering84
0x0627	0x3002      	MOVLW      2
0x0628	0x0667      	XORWF      FARG_PwmSteering_port, 0
L__PwmSteering84:
0x0629	0x1D03      	BTFSS      STATUS, 2
0x062A	0x2E2E      	GOTO       L_PwmSteering5
;Whey.c,113 :: 		P1A = 0;         //port pin stays at low
0x062B	0x128C      	BCF        RA5_bit, BitPos(RA5_bit+0)
;Whey.c,114 :: 		PSTR1CON.B1 = 1; //1 = P1B pin has the PWM waveform
0x062C	0x0025      	MOVLB      5
0x062D	0x1496      	BSF        PSTR1CON, 1
;Whey.c,115 :: 		}
L_PwmSteering5:
L_PwmSteering4:
;Whey.c,116 :: 		}//channel1 if
0x062E	0x2E54      	GOTO       L_PwmSteering6
L_PwmSteering2:
;Whey.c,117 :: 		else if(channel == 2){
0x062F	0x3000      	MOVLW      0
0x0630	0x0020      	MOVLB      0
0x0631	0x0666      	XORWF      FARG_PwmSteering_channel+1, 0
0x0632	0x1D03      	BTFSS      STATUS, 2
0x0633	0x2E36      	GOTO       L__PwmSteering85
0x0634	0x3002      	MOVLW      2
0x0635	0x0665      	XORWF      FARG_PwmSteering_channel, 0
L__PwmSteering85:
0x0636	0x1D03      	BTFSS      STATUS, 2
0x0637	0x2E54      	GOTO       L_PwmSteering7
;Whey.c,118 :: 		PSTR2CON.B0 = 0;   //1 = P2A pin is assigned to port pin
0x0638	0x0025      	MOVLB      5
0x0639	0x101D      	BCF        PSTR2CON, 0
;Whey.c,119 :: 		PSTR2CON.B1 = 0;   //1 = P2B pin is assigned to port pin
0x063A	0x109D      	BCF        PSTR2CON, 1
;Whey.c,120 :: 		if(port == 1){
0x063B	0x3000      	MOVLW      0
0x063C	0x0020      	MOVLB      0
0x063D	0x0668      	XORWF      FARG_PwmSteering_port+1, 0
0x063E	0x1D03      	BTFSS      STATUS, 2
0x063F	0x2E42      	GOTO       L__PwmSteering86
0x0640	0x3001      	MOVLW      1
0x0641	0x0667      	XORWF      FARG_PwmSteering_port, 0
L__PwmSteering86:
0x0642	0x1D03      	BTFSS      STATUS, 2
0x0643	0x2E48      	GOTO       L_PwmSteering8
;Whey.c,121 :: 		P2B = 0;         //port pin stays at low
0x0644	0x120E      	BCF        RC4_bit, BitPos(RC4_bit+0)
;Whey.c,122 :: 		PSTR2CON.B0 = 1; //1 = P2A pin has the PWM waveform
0x0645	0x0025      	MOVLB      5
0x0646	0x141D      	BSF        PSTR2CON, 0
;Whey.c,123 :: 		}
0x0647	0x2E54      	GOTO       L_PwmSteering9
L_PwmSteering8:
;Whey.c,124 :: 		else if(port == 2){
0x0648	0x3000      	MOVLW      0
0x0649	0x0020      	MOVLB      0
0x064A	0x0668      	XORWF      FARG_PwmSteering_port+1, 0
0x064B	0x1D03      	BTFSS      STATUS, 2
0x064C	0x2E4F      	GOTO       L__PwmSteering87
0x064D	0x3002      	MOVLW      2
0x064E	0x0667      	XORWF      FARG_PwmSteering_port, 0
L__PwmSteering87:
0x064F	0x1D03      	BTFSS      STATUS, 2
0x0650	0x2E54      	GOTO       L_PwmSteering10
;Whey.c,125 :: 		P2A = 0;         //port pin stays at low
0x0651	0x128E      	BCF        RC5_bit, BitPos(RC5_bit+0)
;Whey.c,126 :: 		PSTR2CON.B1 = 1; //1 = P2B pin has the PWM waveform
0x0652	0x0025      	MOVLB      5
0x0653	0x149D      	BSF        PSTR2CON, 1
;Whey.c,127 :: 		}
L_PwmSteering10:
L_PwmSteering9:
;Whey.c,128 :: 		}//channel2 if
L_PwmSteering7:
L_PwmSteering6:
;Whey.c,130 :: 		}
L_end_PwmSteering:
0x0654	0x0008      	RETURN
; end of _PwmSteering
_FailSafeCheck:
;Whey.c,214 :: 		unsigned FailSafeCheck(){ //confere se ainda esta recebendo sinal
;Whey.c,216 :: 		return ((Micros() - lastMeasure1) > FAIL_SAFE_TIME || (Micros() - lastMeasure2) > FAIL_SAFE_TIME);
0x0655	0x25C2      	CALL       _Micros
0x0656	0x0870      	MOVF       R0, 0
0x0657	0x00F4      	MOVWF      R4
0x0658	0x0871      	MOVF       R1, 0
0x0659	0x00F5      	MOVWF      R5
0x065A	0x0872      	MOVF       R2, 0
0x065B	0x00F6      	MOVWF      R6
0x065C	0x0873      	MOVF       R3, 0
0x065D	0x00F7      	MOVWF      R7
0x065E	0x083D      	MOVF       _lastMeasure1, 0
0x065F	0x02F4      	SUBWF      R4, 1
0x0660	0x083E      	MOVF       _lastMeasure1+1, 0
0x0661	0x3BF5      	SUBWFB     R5, 1
0x0662	0x083F      	MOVF       _lastMeasure1+2, 0
0x0663	0x3BF6      	SUBWFB     R6, 1
0x0664	0x0840      	MOVF       _lastMeasure1+3, 0
0x0665	0x3BF7      	SUBWFB     R7, 1
0x0666	0x0877      	MOVF       R7, 0
0x0667	0x3C00      	SUBLW      0
0x0668	0x1D03      	BTFSS      STATUS, 2
0x0669	0x2E74      	GOTO       L__FailSafeCheck94
0x066A	0x0876      	MOVF       R6, 0
0x066B	0x3C1E      	SUBLW      30
0x066C	0x1D03      	BTFSS      STATUS, 2
0x066D	0x2E74      	GOTO       L__FailSafeCheck94
0x066E	0x0875      	MOVF       R5, 0
0x066F	0x3C84      	SUBLW      132
0x0670	0x1D03      	BTFSS      STATUS, 2
0x0671	0x2E74      	GOTO       L__FailSafeCheck94
0x0672	0x0874      	MOVF       R4, 0
0x0673	0x3C80      	SUBLW      128
L__FailSafeCheck94:
0x0674	0x1C03      	BTFSS      STATUS, 0
0x0675	0x2E99      	GOTO       L_FailSafeCheck13
0x0676	0x25C2      	CALL       _Micros
0x0677	0x0870      	MOVF       R0, 0
0x0678	0x00F4      	MOVWF      R4
0x0679	0x0871      	MOVF       R1, 0
0x067A	0x00F5      	MOVWF      R5
0x067B	0x0872      	MOVF       R2, 0
0x067C	0x00F6      	MOVWF      R6
0x067D	0x0873      	MOVF       R3, 0
0x067E	0x00F7      	MOVWF      R7
0x067F	0x0839      	MOVF       _lastMeasure2, 0
0x0680	0x02F4      	SUBWF      R4, 1
0x0681	0x083A      	MOVF       _lastMeasure2+1, 0
0x0682	0x3BF5      	SUBWFB     R5, 1
0x0683	0x083B      	MOVF       _lastMeasure2+2, 0
0x0684	0x3BF6      	SUBWFB     R6, 1
0x0685	0x083C      	MOVF       _lastMeasure2+3, 0
0x0686	0x3BF7      	SUBWFB     R7, 1
0x0687	0x0877      	MOVF       R7, 0
0x0688	0x3C00      	SUBLW      0
0x0689	0x1D03      	BTFSS      STATUS, 2
0x068A	0x2E95      	GOTO       L__FailSafeCheck95
0x068B	0x0876      	MOVF       R6, 0
0x068C	0x3C1E      	SUBLW      30
0x068D	0x1D03      	BTFSS      STATUS, 2
0x068E	0x2E95      	GOTO       L__FailSafeCheck95
0x068F	0x0875      	MOVF       R5, 0
0x0690	0x3C84      	SUBLW      132
0x0691	0x1D03      	BTFSS      STATUS, 2
0x0692	0x2E95      	GOTO       L__FailSafeCheck95
0x0693	0x0874      	MOVF       R4, 0
0x0694	0x3C80      	SUBLW      128
L__FailSafeCheck95:
0x0695	0x1C03      	BTFSS      STATUS, 0
0x0696	0x2E99      	GOTO       L_FailSafeCheck13
0x0697	0x01F0      	CLRF       R0
0x0698	0x2E9B      	GOTO       L_FailSafeCheck12
L_FailSafeCheck13:
0x0699	0x3001      	MOVLW      1
0x069A	0x00F0      	MOVWF      R0
L_FailSafeCheck12:
0x069B	0x3000      	MOVLW      0
0x069C	0x00F1      	MOVWF      R1
;Whey.c,217 :: 		}
L_end_FailSafeCheck:
0x069D	0x0008      	RETURN
; end of _FailSafeCheck
_ErrorLedBlink:
;Whey.c,360 :: 		void ErrorLedBlink(unsigned time_ms){
;Whey.c,362 :: 		time_ms = time_ms/250; //4 blinks por segundo
0x069E	0x30FA      	MOVLW      250
0x069F	0x00F4      	MOVWF      R4
0x06A0	0x01F5      	CLRF       R5
0x06A1	0x0020      	MOVLB      0
0x06A2	0x0857      	MOVF       FARG_ErrorLedBlink_time_ms, 0
0x06A3	0x00F0      	MOVWF      R0
0x06A4	0x0858      	MOVF       FARG_ErrorLedBlink_time_ms+1, 0
0x06A5	0x00F1      	MOVWF      R1
0x06A6	0x2247      	CALL       _Div_16X16_U
0x06A7	0x0870      	MOVF       R0, 0
0x06A8	0x00D7      	MOVWF      FARG_ErrorLedBlink_time_ms
0x06A9	0x0871      	MOVF       R1, 0
0x06AA	0x00D8      	MOVWF      FARG_ErrorLedBlink_time_ms+1
;Whey.c,363 :: 		for(i=0; i< time_ms; i++){
0x06AB	0x01D9      	CLRF       ErrorLedBlink_i_L0
0x06AC	0x01DA      	CLRF       ErrorLedBlink_i_L0+1
L_ErrorLedBlink39:
0x06AD	0x0858      	MOVF       FARG_ErrorLedBlink_time_ms+1, 0
0x06AE	0x025A      	SUBWF      ErrorLedBlink_i_L0+1, 0
0x06AF	0x1D03      	BTFSS      STATUS, 2
0x06B0	0x2EB3      	GOTO       L__ErrorLedBlink111
0x06B1	0x0857      	MOVF       FARG_ErrorLedBlink_time_ms, 0
0x06B2	0x0259      	SUBWF      ErrorLedBlink_i_L0, 0
L__ErrorLedBlink111:
0x06B3	0x1803      	BTFSC      STATUS, 0
0x06B4	0x2ED3      	GOTO       L_ErrorLedBlink40
;Whey.c,364 :: 		ERROR_LED = 1;
0x06B5	0x178E      	BSF        RC7_bit, BitPos(RC7_bit+0)
;Whey.c,365 :: 		delay_ms(200);
0x06B6	0x3003      	MOVLW      3
0x06B7	0x00FB      	MOVWF      R11
0x06B8	0x3008      	MOVLW      8
0x06B9	0x00FC      	MOVWF      R12
0x06BA	0x3077      	MOVLW      119
0x06BB	0x00FD      	MOVWF      R13
L_ErrorLedBlink42:
0x06BC	0x0BFD      	DECFSZ     R13, 1
0x06BD	0x2EBC      	GOTO       L_ErrorLedBlink42
0x06BE	0x0BFC      	DECFSZ     R12, 1
0x06BF	0x2EBC      	GOTO       L_ErrorLedBlink42
0x06C0	0x0BFB      	DECFSZ     R11, 1
0x06C1	0x2EBC      	GOTO       L_ErrorLedBlink42
;Whey.c,366 :: 		ERROR_LED = 0;
0x06C2	0x138E      	BCF        RC7_bit, BitPos(RC7_bit+0)
;Whey.c,367 :: 		delay_ms(200);
0x06C3	0x3003      	MOVLW      3
0x06C4	0x00FB      	MOVWF      R11
0x06C5	0x3008      	MOVLW      8
0x06C6	0x00FC      	MOVWF      R12
0x06C7	0x3077      	MOVLW      119
0x06C8	0x00FD      	MOVWF      R13
L_ErrorLedBlink43:
0x06C9	0x0BFD      	DECFSZ     R13, 1
0x06CA	0x2EC9      	GOTO       L_ErrorLedBlink43
0x06CB	0x0BFC      	DECFSZ     R12, 1
0x06CC	0x2EC9      	GOTO       L_ErrorLedBlink43
0x06CD	0x0BFB      	DECFSZ     R11, 1
0x06CE	0x2EC9      	GOTO       L_ErrorLedBlink43
;Whey.c,363 :: 		for(i=0; i< time_ms; i++){
0x06CF	0x0AD9      	INCF       ErrorLedBlink_i_L0, 1
0x06D0	0x1903      	BTFSC      STATUS, 2
0x06D1	0x0ADA      	INCF       ErrorLedBlink_i_L0+1, 1
;Whey.c,368 :: 		}
0x06D2	0x2EAD      	GOTO       L_ErrorLedBlink39
L_ErrorLedBlink40:
;Whey.c,369 :: 		}
L_end_ErrorLedBlink:
0x06D3	0x0008      	RETURN
; end of _ErrorLedBlink
_BatteryCheck:
;Whey.c,208 :: 		unsigned BatteryCheck() {  // confere tens�o da bateria
;Whey.c,209 :: 		readDivisionVoltage = ADC_Get_Sample(LOW_BAT);
0x06D4	0x300A      	MOVLW      10
0x06D5	0x0020      	MOVLB      0
0x06D6	0x00E5      	MOVWF      FARG_ADC_Get_Sample_channel
0x06D7	0x2397      	CALL       _ADC_Get_Sample
0x06D8	0x0870      	MOVF       R0, 0
0x06D9	0x0020      	MOVLB      0
0x06DA	0x00D5      	MOVWF      _readDivisionVoltage
0x06DB	0x0871      	MOVF       R1, 0
0x06DC	0x00D6      	MOVWF      _readDivisionVoltage+1
;Whey.c,210 :: 		receivedVoltage = (readDivisionVoltage*5.0)/1023.0; /* 5V: maximo que o pino recebe em tensao |  1023: equivalente ao 5V no registrador */
0x06DD	0x25DB      	CALL       _word2double
0x06DE	0x3000      	MOVLW      0
0x06DF	0x00F4      	MOVWF      R4
0x06E0	0x3000      	MOVLW      0
0x06E1	0x00F5      	MOVWF      R5
0x06E2	0x3020      	MOVLW      32
0x06E3	0x00F6      	MOVWF      R6
0x06E4	0x3081      	MOVLW      129
0x06E5	0x00F7      	MOVWF      R7
0x06E6	0x2441      	CALL       _Mul_32x32_FP
0x06E7	0x3000      	MOVLW      0
0x06E8	0x00F4      	MOVWF      R4
0x06E9	0x30C0      	MOVLW      192
0x06EA	0x00F5      	MOVWF      R5
0x06EB	0x307F      	MOVLW      127
0x06EC	0x00F6      	MOVWF      R6
0x06ED	0x3088      	MOVLW      136
0x06EE	0x00F7      	MOVWF      R7
0x06EF	0x250E      	CALL       _Div_32x32_FP
0x06F0	0x0870      	MOVF       R0, 0
0x06F1	0x00C1      	MOVWF      _receivedVoltage
0x06F2	0x0871      	MOVF       R1, 0
0x06F3	0x00C2      	MOVWF      _receivedVoltage+1
0x06F4	0x0872      	MOVF       R2, 0
0x06F5	0x00C3      	MOVWF      _receivedVoltage+2
0x06F6	0x0873      	MOVF       R3, 0
0x06F7	0x00C4      	MOVWF      _receivedVoltage+3
;Whey.c,211 :: 		return receivedVoltage < CUT_VOLTAGE;
0x06F8	0x3066      	MOVLW      102
0x06F9	0x00F4      	MOVWF      R4
0x06FA	0x3066      	MOVLW      102
0x06FB	0x00F5      	MOVWF      R5
0x06FC	0x3036      	MOVLW      54
0x06FD	0x00F6      	MOVWF      R6
0x06FE	0x3080      	MOVLW      128
0x06FF	0x00F7      	MOVWF      R7
0x0700	0x24BF      	CALL       _Compare_Double
0x0701	0x3001      	MOVLW      1
0x0702	0x1803      	BTFSC      STATUS, 0
0x0703	0x3000      	MOVLW      0
0x0704	0x00F0      	MOVWF      R0
0x0705	0x3000      	MOVLW      0
0x0706	0x00F1      	MOVWF      R1
;Whey.c,212 :: 		}
L_end_BatteryCheck:
0x0707	0x0008      	RETURN
; end of _BatteryCheck
_SetupPwms:
;Whey.c,45 :: 		void SetupPwms(){
;Whey.c,46 :: 		T2CON = 0;   //desliga o Timer2, timer responsavel pelos PWMS
0x0708	0x0020      	MOVLB      0
0x0709	0x019C      	CLRF       T2CON
;Whey.c,47 :: 		PR2 = 255;
0x070A	0x30FF      	MOVLW      255
0x070B	0x009B      	MOVWF      PR2
;Whey.c,50 :: 		CCPTMRS.B1 = 0;    //00 = CCP1 is based off Timer2 in PWM mode
0x070C	0x0025      	MOVLB      5
0x070D	0x109E      	BCF        CCPTMRS, 1
;Whey.c,51 :: 		CCPTMRS.B0 = 0;
0x070E	0x101E      	BCF        CCPTMRS, 0
;Whey.c,54 :: 		PSTR1CON.B0 = 1;   //1 = P1A pin has the PWM waveform with polarity control from CCP1M<1:0>
0x070F	0x1416      	BSF        PSTR1CON, 0
;Whey.c,55 :: 		PSTR1CON.B1 = 1;   //1 = P1B pin has the PWM waveform with polarity control from CCP1M<1:0>
0x0710	0x1496      	BSF        PSTR1CON, 1
;Whey.c,56 :: 		PSTR1CON.B2 = 0;   //0 = P1C pin is assigned to port pin
0x0711	0x1116      	BCF        PSTR1CON, 2
;Whey.c,57 :: 		PSTR1CON.B3 = 0;   //0 = P1D pin is assigned to port pin
0x0712	0x1196      	BCF        PSTR1CON, 3
;Whey.c,58 :: 		PSTR1CON.B4 = 1;   //Steering Sync bit, 0 = Output steering update occurs at the beginning of the instruction cycle boundary
0x0713	0x1616      	BSF        PSTR1CON, 4
;Whey.c,60 :: 		CCPR1L  = 0b11111111; //colocando nivel logico alto nas duas saidas para travar os motores
0x0714	0x30FF      	MOVLW      255
0x0715	0x0091      	MOVWF      CCPR1L
;Whey.c,75 :: 		CCPTMRS.B3 = 0;    //00 = CCP2 is based off Timer2 in PWM mode
0x0716	0x119E      	BCF        CCPTMRS, 3
;Whey.c,76 :: 		CCPTMRS.B2 = 0;
0x0717	0x111E      	BCF        CCPTMRS, 2
;Whey.c,79 :: 		PSTR2CON.B0 = 1;   //1 = P2A pin has the PWM waveform with polarity control from CCP2M<1:0>
0x0718	0x141D      	BSF        PSTR2CON, 0
;Whey.c,80 :: 		PSTR2CON.B1 = 1;   //1 = P2B pin has the PWM waveform with polarity control from CCP2M<1:0>
0x0719	0x149D      	BSF        PSTR2CON, 1
;Whey.c,81 :: 		PSTR2CON.B2 = 0;   //0 = P2C pin is assigned to port pin  (pra que est� sendo usado?)
0x071A	0x111D      	BCF        PSTR2CON, 2
;Whey.c,82 :: 		PSTR2CON.B3 = 0;   //0 = P2D pin is assigned to port pin  (pra que est� sendo usado?)
0x071B	0x119D      	BCF        PSTR2CON, 3
;Whey.c,83 :: 		PSTR2CON.B4 = 1;   //Steering Sync bit, 0 = Output steering update occurs at the beginning of the instruction cycle boundary,
0x071C	0x161D      	BSF        PSTR2CON, 4
;Whey.c,86 :: 		CCPR2L  = 0b11111111;  //colocando nivel logico alto nas duas saidas para travar os motores
0x071D	0x30FF      	MOVLW      255
0x071E	0x0098      	MOVWF      CCPR2L
;Whey.c,88 :: 		CCP2CON = 0b00111100; //Mesma configuracao do ECCP1
0x071F	0x303C      	MOVLW      60
0x0720	0x009A      	MOVWF      CCP2CON
;Whey.c,89 :: 		T2CON = 0b00000100;  //pre scaler =  1
0x0721	0x3004      	MOVLW      4
0x0722	0x0020      	MOVLB      0
0x0723	0x009C      	MOVWF      T2CON
;Whey.c,94 :: 		}
L_end_SetupPwms:
0x0724	0x0008      	RETURN
; end of _SetupPwms
_SetupTimer1:
;Whey.c,132 :: 		void SetupTimer1(){
;Whey.c,134 :: 		T1CKPS1_bit = 0x00;                        //Prescaller TMR1 1:2, cada bit do timer1 e correspondente a 1 us
0x0725	0x0020      	MOVLB      0
0x0726	0x1298      	BCF        T1CKPS1_bit, BitPos(T1CKPS1_bit+0)
;Whey.c,135 :: 		T1CKPS0_bit = 0x01;                        //
0x0727	0x1618      	BSF        T1CKPS0_bit, BitPos(T1CKPS0_bit+0)
;Whey.c,136 :: 		TMR1CS1_bit = 0x00;                        //Clock: Fosc/4 = instruction clock
0x0728	0x1398      	BCF        TMR1CS1_bit, BitPos(TMR1CS1_bit+0)
;Whey.c,137 :: 		TMR1CS0_bit = 0x00;                        //Clock: Fosc/4 = instruction clock
0x0729	0x1318      	BCF        TMR1CS0_bit, BitPos(TMR1CS0_bit+0)
;Whey.c,138 :: 		TMR1ON_bit  = 0x01;                        //Inicia a contagem do Timer1
0x072A	0x1418      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;Whey.c,139 :: 		TMR1IE_bit  = 0x01;                        //Habilita interrupcoes de TMR1
0x072B	0x0021      	MOVLB      1
0x072C	0x1411      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;Whey.c,140 :: 		TMR1L       = 0x00;                        //zera o Timer1
0x072D	0x0020      	MOVLB      0
0x072E	0x0196      	CLRF       TMR1L
;Whey.c,141 :: 		TMR1H       = 0x00;
0x072F	0x0197      	CLRF       TMR1H
;Whey.c,145 :: 		}
L_end_SetupTimer1:
0x0730	0x0008      	RETURN
; end of _SetupTimer1
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x0731	0x0012      	MOVIW      FSR0++ 
;__Lib_System.c,75 :: 		
0x0732	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x0733	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x0734	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x0735	0x2F31      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x0736	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x0737	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x0738	0x2F31      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x0739	0x0008      	RETURN
; end of ___CC2DW
_SetupPort:
;Whey.c,160 :: 		void SetupPort(){
;Whey.c,162 :: 		CM1CON0       = 0;
0x073A	0x0022      	MOVLB      2
0x073B	0x0191      	CLRF       CM1CON0
;Whey.c,163 :: 		CM2CON0       = 0;
0x073C	0x0193      	CLRF       CM2CON0
;Whey.c,166 :: 		P2BSEL_bit =  1;    //P2BSEL: 1 = P2B function is on RA4
0x073D	0x149E      	BSF        P2BSEL_bit, BitPos(P2BSEL_bit+0)
;Whey.c,167 :: 		CCP2SEL_bit =  1;   //CCP2SEL:1 = CCP2/P2A function is on RA5
0x073E	0x141E      	BSF        CCP2SEL_bit, BitPos(CCP2SEL_bit+0)
;Whey.c,169 :: 		ANSELA     = 0; //Nenhuma porta analogica
0x073F	0x0023      	MOVLB      3
0x0740	0x018C      	CLRF       ANSELA
;Whey.c,170 :: 		ANSELB  = 0x10; //RB4 analogico AN4, ultimo bit do ANSELB. (?)
0x0741	0x3010      	MOVLW      16
0x0742	0x008D      	MOVWF      ANSELB
;Whey.c,171 :: 		ANSELC     = 0; //Nenhuma porta analogica
0x0743	0x018E      	CLRF       ANSELC
;Whey.c,172 :: 		ADC_Init();     // Initialize ADC module with default settings
0x0744	0x2432      	CALL       _ADC_Init
;Whey.c,176 :: 		TRISA0_bit = 1; //IS_1B  (Sensor de Corrente)
0x0745	0x140C      	BSF        TRISA0_bit, BitPos(TRISA0_bit+0)
;Whey.c,177 :: 		TRISA1_bit = 1; //IS_1A  (Sensor de Corrente)
0x0746	0x148C      	BSF        TRISA1_bit, BitPos(TRISA1_bit+0)
;Whey.c,178 :: 		TRISA2_bit = 0; //INH
0x0747	0x110C      	BCF        TRISA2_bit, BitPos(TRISA2_bit+0)
;Whey.c,179 :: 		TRISA3_bit = 1; //MCLR
0x0748	0x158C      	BSF        TRISA3_bit, BitPos(TRISA3_bit+0)
;Whey.c,180 :: 		TRISA4_bit = 0; //PWM_1B  (MotorA)
0x0749	0x120C      	BCF        TRISA4_bit, BitPos(TRISA4_bit+0)
;Whey.c,181 :: 		TRISA5_bit = 0; //PWM_1A  (MotorA)
0x074A	0x128C      	BCF        TRISA5_bit, BitPos(TRISA5_bit+0)
;Whey.c,184 :: 		TRISB4_bit = 1; //AN4 (LOW BATTERY)
0x074B	0x160D      	BSF        TRISB4_bit, BitPos(TRISB4_bit+0)
;Whey.c,185 :: 		TRISB5_bit = 0; //RX
0x074C	0x128D      	BCF        TRISB5_bit, BitPos(TRISB5_bit+0)
;Whey.c,186 :: 		TRISB6_bit = 1; //Unused grounded pin
0x074D	0x170D      	BSF        TRISB6_bit, BitPos(TRISB6_bit+0)
;Whey.c,187 :: 		TRISB7_bit = 0; //TX
0x074E	0x138D      	BCF        TRISB7_bit, BitPos(TRISB7_bit+0)
;Whey.c,190 :: 		TRISC0_bit = 1; //IS_2B  (Sensor de Corrente)
0x074F	0x140E      	BSF        TRISC0_bit, BitPos(TRISC0_bit+0)
;Whey.c,191 :: 		TRISC1_bit = 1; //IS_2A  (Sensor de Corrente)
0x0750	0x148E      	BSF        TRISC1_bit, BitPos(TRISC1_bit+0)
;Whey.c,192 :: 		TRISC2_bit = 0; //LED_CALIBRATION
0x0751	0x110E      	BCF        TRISC2_bit, BitPos(TRISC2_bit+0)
;Whey.c,193 :: 		TRISC3_bit = 1; //CHANNEL_B  (CCP2)
0x0752	0x158E      	BSF        TRISC3_bit, BitPos(TRISC3_bit+0)
;Whey.c,194 :: 		TRISC4_bit = 0; //PWM_2B  (MotorB)
0x0753	0x120E      	BCF        TRISC4_bit, BitPos(TRISC4_bit+0)
;Whey.c,195 :: 		TRISC5_bit = 0; //PWM_2A  (MotorB)
0x0754	0x128E      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;Whey.c,196 :: 		TRISC6_bit = 1; //CHANNEL_A  (CCP4)
0x0755	0x170E      	BSF        TRISC6_bit, BitPos(TRISC6_bit+0)
;Whey.c,197 :: 		TRISC7_bit = 0; //LED_ERROR
0x0756	0x138E      	BCF        TRISC7_bit, BitPos(TRISC7_bit+0)
;Whey.c,200 :: 		GIE_bit    = 0X01;   //Habilita a interrupcao Global
0x0757	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;Whey.c,201 :: 		PEIE_bit   = 0X01;   //Habilita a interrupcao por perifericos
0x0758	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;Whey.c,202 :: 		CCP2IE_bit  = 0x01;  //Habilita interrupcoes do modulo CCP2(CHANNEL_B)
0x0759	0x1412      	BSF        CCP2IE_bit, BitPos(CCP2IE_bit+0)
;Whey.c,203 :: 		CCP4IE_bit  = 0x01;  //Habilita interrupcoes do modulo CCP4(CHANNEL_A)
0x075A	0x1693      	BSF        CCP4IE_bit, BitPos(CCP4IE_bit+0)
;Whey.c,204 :: 		CCP2CON     = 0x05;  //Configura captura por borda de subida
0x075B	0x3005      	MOVLW      5
0x075C	0x0025      	MOVLB      5
0x075D	0x009A      	MOVWF      CCP2CON
;Whey.c,205 :: 		CCP4CON     = 0x05;  //Configura captura por borda de subida
0x075E	0x3005      	MOVLW      5
0x075F	0x0026      	MOVLB      6
0x0760	0x009A      	MOVWF      CCP4CON
;Whey.c,206 :: 		}
L_end_SetupPort:
0x0761	0x0008      	RETURN
; end of _SetupPort
_main:
0x0762	0x306C      	MOVLW      108
0x0763	0x0020      	MOVLB      0
0x0764	0x00A9      	MOVWF      _maxDurationCH1
0x0765	0x3007      	MOVLW      7
0x0766	0x00AA      	MOVWF      42
0x0767	0x304C      	MOVLW      76
0x0768	0x00AB      	MOVWF      _minDurationCH2
0x0769	0x3004      	MOVLW      4
0x076A	0x00AC      	MOVWF      44
0x076B	0x306C      	MOVLW      108
0x076C	0x00AD      	MOVWF      _maxDurationCH2
0x076D	0x3007      	MOVLW      7
0x076E	0x00AE      	MOVWF      46
0x076F	0x304C      	MOVLW      76
0x0770	0x00AF      	MOVWF      _minDurationCH1
0x0771	0x3004      	MOVLW      4
0x0772	0x00B0      	MOVWF      48
0x0773	0x01B1      	CLRF       _numberInterruptionsTimer1
0x0774	0x01B2      	CLRF       50
;Whey.c,516 :: 		void main() {
;Whey.c,518 :: 		OSCCON = 0b11110010;
0x0775	0x30F2      	MOVLW      242
0x0776	0x0021      	MOVLB      1
0x0777	0x0099      	MOVWF      OSCCON
;Whey.c,519 :: 		ADC_Init();
0x0778	0x2432      	CALL       _ADC_Init
;Whey.c,520 :: 		SetupPort();
0x0779	0x273A      	CALL       _SetupPort
;Whey.c,521 :: 		SetupPwms();
0x077A	0x2708      	CALL       _SetupPwms
;Whey.c,522 :: 		SetupTimer1();
0x077B	0x2725      	CALL       _SetupTimer1
;Whey.c,523 :: 		delay_ms(300);
0x077C	0x3004      	MOVLW      4
0x077D	0x00FB      	MOVWF      R11
0x077E	0x300C      	MOVLW      12
0x077F	0x00FC      	MOVWF      R12
0x0780	0x3033      	MOVLW      51
0x0781	0x00FD      	MOVWF      R13
L_main66:
0x0782	0x0BFD      	DECFSZ     R13, 1
0x0783	0x2F82      	GOTO       L_main66
0x0784	0x0BFC      	DECFSZ     R12, 1
0x0785	0x2F82      	GOTO       L_main66
0x0786	0x0BFB      	DECFSZ     R11, 1
0x0787	0x2F82      	GOTO       L_main66
0x0788	0x0000      	NOP
0x0789	0x0000      	NOP
;Whey.c,525 :: 		if(CALIB_BUTTON==0)
0x078A	0x198C      	BTFSC      RA3_bit, BitPos(RA3_bit+0)
0x078B	0x2F8F      	GOTO       L_main67
;Whey.c,526 :: 		Calibration();
0x078C	0x3188      	MOVLP      8
0x078D	0x2167      	CALL       _Calibration
0x078E	0x3180      	MOVLP      0
L_main67:
;Whey.c,528 :: 		while(1){
L_main68:
0x078F	0x0020      	MOVLB      0
;Whey.c,529 :: 		ERROR_LED = 0;
0x0790	0x138E      	BCF        RC7_bit, BitPos(RC7_bit+0)
;Whey.c,530 :: 		while(FailSafeCheck()) {
L_main70:
0x0791	0x2655      	CALL       _FailSafeCheck
0x0792	0x0870      	MOVF       R0, 0
0x0793	0x0471      	IORWF       R1, 0
0x0794	0x1903      	BTFSC      STATUS, 2
0x0795	0x2FA7      	GOTO       L_main71
;Whey.c,531 :: 		ERROR_LED = 1;
0x0796	0x178E      	BSF        RC7_bit, BitPos(RC7_bit+0)
;Whey.c,532 :: 		SetDutyCycle(1, 0);
0x0797	0x3001      	MOVLW      1
0x0798	0x00E5      	MOVWF      FARG_SetDutyCycle_channel
0x0799	0x3000      	MOVLW      0
0x079A	0x00E6      	MOVWF      FARG_SetDutyCycle_channel+1
0x079B	0x01E7      	CLRF       FARG_SetDutyCycle_duty
0x079C	0x01E8      	CLRF       FARG_SetDutyCycle_duty+1
0x079D	0x25F0      	CALL       _SetDutyCycle
;Whey.c,533 :: 		SetDutyCycle(2, 0);
0x079E	0x3002      	MOVLW      2
0x079F	0x0020      	MOVLB      0
0x07A0	0x00E5      	MOVWF      FARG_SetDutyCycle_channel
0x07A1	0x3000      	MOVLW      0
0x07A2	0x00E6      	MOVWF      FARG_SetDutyCycle_channel+1
0x07A3	0x01E7      	CLRF       FARG_SetDutyCycle_duty
0x07A4	0x01E8      	CLRF       FARG_SetDutyCycle_duty+1
0x07A5	0x25F0      	CALL       _SetDutyCycle
;Whey.c,534 :: 		}
0x07A6	0x2F91      	GOTO       L_main70
L_main71:
;Whey.c,537 :: 		if(BatteryCheck())
0x07A7	0x26D4      	CALL       _BatteryCheck
0x07A8	0x0870      	MOVF       R0, 0
0x07A9	0x0471      	IORWF       R1, 0
0x07AA	0x1903      	BTFSC      STATUS, 2
0x07AB	0x2FB1      	GOTO       L_main72
;Whey.c,538 :: 		ErrorLedBlink(1600);
0x07AC	0x3040      	MOVLW      64
0x07AD	0x00D7      	MOVWF      FARG_ErrorLedBlink_time_ms
0x07AE	0x3006      	MOVLW      6
0x07AF	0x00D8      	MOVWF      FARG_ErrorLedBlink_time_ms+1
0x07B0	0x269E      	CALL       _ErrorLedBlink
L_main72:
;Whey.c,540 :: 		RotateMotor();
0x07B1	0x3188      	MOVLP      8
0x07B2	0x2000      	CALL       _RotateMotor
0x07B3	0x3180      	MOVLP      0
;Whey.c,542 :: 		}
0x07B4	0x2F8F      	GOTO       L_main68
;Whey.c,543 :: 		}
L_end_main:
0x07B5	0x2FB5      	GOTO       $+0
; end of _main
_RotateMotor:
;Whey.c,246 :: 		void RotateMotor(){
;Whey.c,252 :: 		pulseWidth2 = timeDownSignal2;   //l� o pulso do canal 2
0x0800	0x0020      	MOVLB      0
0x0801	0x0849      	MOVF       _timeDownSignal2, 0
0x0802	0x00DB      	MOVWF      RotateMotor_pulseWidth2_L0
0x0803	0x084A      	MOVF       _timeDownSignal2+1, 0
0x0804	0x00DC      	MOVWF      RotateMotor_pulseWidth2_L0+1
0x0805	0x084B      	MOVF       _timeDownSignal2+2, 0
0x0806	0x00DD      	MOVWF      RotateMotor_pulseWidth2_L0+2
0x0807	0x084C      	MOVF       _timeDownSignal2+3, 0
0x0808	0x00DE      	MOVWF      RotateMotor_pulseWidth2_L0+3
;Whey.c,255 :: 		duty_cycle1 = Map(pulseWidth1,minDurationCH1,maxDurationCH1,MIN_PWM,MAX_PWM);
0x0809	0x0845      	MOVF       _timeDownSignal1, 0
0x080A	0x0021      	MOVLB      1
0x080B	0x00A0      	MOVWF      FARG_Map_x
0x080C	0x0020      	MOVLB      0
0x080D	0x0846      	MOVF       _timeDownSignal1+1, 0
0x080E	0x0021      	MOVLB      1
0x080F	0x00A1      	MOVWF      FARG_Map_x+1
0x0810	0x0020      	MOVLB      0
0x0811	0x0847      	MOVF       _timeDownSignal1+2, 0
0x0812	0x0021      	MOVLB      1
0x0813	0x00A2      	MOVWF      FARG_Map_x+2
0x0814	0x0020      	MOVLB      0
0x0815	0x0848      	MOVF       _timeDownSignal1+3, 0
0x0816	0x0021      	MOVLB      1
0x0817	0x00A3      	MOVWF      FARG_Map_x+3
0x0818	0x0020      	MOVLB      0
0x0819	0x082F      	MOVF       _minDurationCH1, 0
0x081A	0x0021      	MOVLB      1
0x081B	0x00A4      	MOVWF      FARG_Map_in_min
0x081C	0x0020      	MOVLB      0
0x081D	0x0830      	MOVF       _minDurationCH1+1, 0
0x081E	0x0021      	MOVLB      1
0x081F	0x00A5      	MOVWF      FARG_Map_in_min+1
0x0820	0x01A6      	CLRF       FARG_Map_in_min+2
0x0821	0x01A7      	CLRF       FARG_Map_in_min+3
0x0822	0x0020      	MOVLB      0
0x0823	0x0829      	MOVF       _maxDurationCH1, 0
0x0824	0x0021      	MOVLB      1
0x0825	0x00A8      	MOVWF      FARG_Map_in_max
0x0826	0x0020      	MOVLB      0
0x0827	0x082A      	MOVF       _maxDurationCH1+1, 0
0x0828	0x0021      	MOVLB      1
0x0829	0x00A9      	MOVWF      FARG_Map_in_max+1
0x082A	0x01AA      	CLRF       FARG_Map_in_max+2
0x082B	0x01AB      	CLRF       FARG_Map_in_max+3
0x082C	0x3001      	MOVLW      1
0x082D	0x00AC      	MOVWF      FARG_Map_out_min
0x082E	0x30FF      	MOVLW      255
0x082F	0x00AD      	MOVWF      FARG_Map_out_min+1
0x0830	0x30FF      	MOVLW      255
0x0831	0x00AE      	MOVWF      FARG_Map_out_min+2
0x0832	0x00AF      	MOVWF      FARG_Map_out_min+3
0x0833	0x30FF      	MOVLW      255
0x0834	0x00B0      	MOVWF      FARG_Map_out_max
0x0835	0x01B1      	CLRF       FARG_Map_out_max+1
0x0836	0x01B2      	CLRF       FARG_Map_out_max+2
0x0837	0x01B3      	CLRF       FARG_Map_out_max+3
0x0838	0x3180      	MOVLP      0
0x0839	0x2359      	CALL       _Map
0x083A	0x3188      	MOVLP      8
0x083B	0x0870      	MOVF       R0, 0
0x083C	0x0020      	MOVLB      0
0x083D	0x00D7      	MOVWF      RotateMotor_duty_cycle1_L0
0x083E	0x0871      	MOVF       R1, 0
0x083F	0x00D8      	MOVWF      RotateMotor_duty_cycle1_L0+1
;Whey.c,256 :: 		duty_cycle2 = Map(pulseWidth2,minDurationCH2,maxDurationCH2,MIN_PWM,MAX_PWM);
0x0840	0x085B      	MOVF       RotateMotor_pulseWidth2_L0, 0
0x0841	0x0021      	MOVLB      1
0x0842	0x00A0      	MOVWF      FARG_Map_x
0x0843	0x0020      	MOVLB      0
0x0844	0x085C      	MOVF       RotateMotor_pulseWidth2_L0+1, 0
0x0845	0x0021      	MOVLB      1
0x0846	0x00A1      	MOVWF      FARG_Map_x+1
0x0847	0x0020      	MOVLB      0
0x0848	0x085D      	MOVF       RotateMotor_pulseWidth2_L0+2, 0
0x0849	0x0021      	MOVLB      1
0x084A	0x00A2      	MOVWF      FARG_Map_x+2
0x084B	0x0020      	MOVLB      0
0x084C	0x085E      	MOVF       RotateMotor_pulseWidth2_L0+3, 0
0x084D	0x0021      	MOVLB      1
0x084E	0x00A3      	MOVWF      FARG_Map_x+3
0x084F	0x0020      	MOVLB      0
0x0850	0x082B      	MOVF       _minDurationCH2, 0
0x0851	0x0021      	MOVLB      1
0x0852	0x00A4      	MOVWF      FARG_Map_in_min
0x0853	0x0020      	MOVLB      0
0x0854	0x082C      	MOVF       _minDurationCH2+1, 0
0x0855	0x0021      	MOVLB      1
0x0856	0x00A5      	MOVWF      FARG_Map_in_min+1
0x0857	0x01A6      	CLRF       FARG_Map_in_min+2
0x0858	0x01A7      	CLRF       FARG_Map_in_min+3
0x0859	0x0020      	MOVLB      0
0x085A	0x082D      	MOVF       _maxDurationCH2, 0
0x085B	0x0021      	MOVLB      1
0x085C	0x00A8      	MOVWF      FARG_Map_in_max
0x085D	0x0020      	MOVLB      0
0x085E	0x082E      	MOVF       _maxDurationCH2+1, 0
0x085F	0x0021      	MOVLB      1
0x0860	0x00A9      	MOVWF      FARG_Map_in_max+1
0x0861	0x01AA      	CLRF       FARG_Map_in_max+2
0x0862	0x01AB      	CLRF       FARG_Map_in_max+3
0x0863	0x3001      	MOVLW      1
0x0864	0x00AC      	MOVWF      FARG_Map_out_min
0x0865	0x30FF      	MOVLW      255
0x0866	0x00AD      	MOVWF      FARG_Map_out_min+1
0x0867	0x30FF      	MOVLW      255
0x0868	0x00AE      	MOVWF      FARG_Map_out_min+2
0x0869	0x00AF      	MOVWF      FARG_Map_out_min+3
0x086A	0x30FF      	MOVLW      255
0x086B	0x00B0      	MOVWF      FARG_Map_out_max
0x086C	0x01B1      	CLRF       FARG_Map_out_max+1
0x086D	0x01B2      	CLRF       FARG_Map_out_max+2
0x086E	0x01B3      	CLRF       FARG_Map_out_max+3
0x086F	0x3180      	MOVLP      0
0x0870	0x2359      	CALL       _Map
0x0871	0x3188      	MOVLP      8
0x0872	0x0870      	MOVF       R0, 0
0x0873	0x0020      	MOVLB      0
0x0874	0x00D9      	MOVWF      RotateMotor_duty_cycle2_L0
0x0875	0x0871      	MOVF       R1, 0
0x0876	0x00DA      	MOVWF      RotateMotor_duty_cycle2_L0+1
;Whey.c,259 :: 		if(duty_cycle1 < MIN_PWM)
0x0877	0x3080      	MOVLW      128
0x0878	0x0658      	XORWF      RotateMotor_duty_cycle1_L0+1, 0
0x0879	0x00F0      	MOVWF      R0
0x087A	0x3080      	MOVLW      128
0x087B	0x3AFF      	XORLW      255
0x087C	0x0270      	SUBWF      R0, 0
0x087D	0x1D03      	BTFSS      STATUS, 2
0x087E	0x2881      	GOTO       L__RotateMotor98
0x087F	0x3001      	MOVLW      1
0x0880	0x0257      	SUBWF      RotateMotor_duty_cycle1_L0, 0
L__RotateMotor98:
0x0881	0x1803      	BTFSC      STATUS, 0
0x0882	0x2887      	GOTO       L_RotateMotor14
;Whey.c,260 :: 		duty_cycle1 = MIN_PWM;
0x0883	0x3001      	MOVLW      1
0x0884	0x00D7      	MOVWF      RotateMotor_duty_cycle1_L0
0x0885	0x30FF      	MOVLW      255
0x0886	0x00D8      	MOVWF      RotateMotor_duty_cycle1_L0+1
L_RotateMotor14:
;Whey.c,261 :: 		if(duty_cycle1 > MAX_PWM)
0x0887	0x3080      	MOVLW      128
0x0888	0x00F0      	MOVWF      R0
0x0889	0x3080      	MOVLW      128
0x088A	0x0658      	XORWF      RotateMotor_duty_cycle1_L0+1, 0
0x088B	0x0270      	SUBWF      R0, 0
0x088C	0x1D03      	BTFSS      STATUS, 2
0x088D	0x2890      	GOTO       L__RotateMotor99
0x088E	0x0857      	MOVF       RotateMotor_duty_cycle1_L0, 0
0x088F	0x3CFF      	SUBLW      255
L__RotateMotor99:
0x0890	0x1803      	BTFSC      STATUS, 0
0x0891	0x2895      	GOTO       L_RotateMotor15
;Whey.c,262 :: 		duty_cycle1 = MAX_PWM;
0x0892	0x30FF      	MOVLW      255
0x0893	0x00D7      	MOVWF      RotateMotor_duty_cycle1_L0
0x0894	0x01D8      	CLRF       RotateMotor_duty_cycle1_L0+1
L_RotateMotor15:
;Whey.c,264 :: 		if(duty_cycle2 < MIN_PWM)
0x0895	0x3080      	MOVLW      128
0x0896	0x065A      	XORWF      RotateMotor_duty_cycle2_L0+1, 0
0x0897	0x00F0      	MOVWF      R0
0x0898	0x3080      	MOVLW      128
0x0899	0x3AFF      	XORLW      255
0x089A	0x0270      	SUBWF      R0, 0
0x089B	0x1D03      	BTFSS      STATUS, 2
0x089C	0x289F      	GOTO       L__RotateMotor100
0x089D	0x3001      	MOVLW      1
0x089E	0x0259      	SUBWF      RotateMotor_duty_cycle2_L0, 0
L__RotateMotor100:
0x089F	0x1803      	BTFSC      STATUS, 0
0x08A0	0x28A5      	GOTO       L_RotateMotor16
;Whey.c,265 :: 		duty_cycle2 = MIN_PWM;
0x08A1	0x3001      	MOVLW      1
0x08A2	0x00D9      	MOVWF      RotateMotor_duty_cycle2_L0
0x08A3	0x30FF      	MOVLW      255
0x08A4	0x00DA      	MOVWF      RotateMotor_duty_cycle2_L0+1
L_RotateMotor16:
;Whey.c,266 :: 		if(duty_cycle2 > MAX_PWM)
0x08A5	0x3080      	MOVLW      128
0x08A6	0x00F0      	MOVWF      R0
0x08A7	0x3080      	MOVLW      128
0x08A8	0x065A      	XORWF      RotateMotor_duty_cycle2_L0+1, 0
0x08A9	0x0270      	SUBWF      R0, 0
0x08AA	0x1D03      	BTFSS      STATUS, 2
0x08AB	0x28AE      	GOTO       L__RotateMotor101
0x08AC	0x0859      	MOVF       RotateMotor_duty_cycle2_L0, 0
0x08AD	0x3CFF      	SUBLW      255
L__RotateMotor101:
0x08AE	0x1803      	BTFSC      STATUS, 0
0x08AF	0x28B3      	GOTO       L_RotateMotor17
;Whey.c,267 :: 		duty_cycle2 = MAX_PWM;
0x08B0	0x30FF      	MOVLW      255
0x08B1	0x00D9      	MOVWF      RotateMotor_duty_cycle2_L0
0x08B2	0x01DA      	CLRF       RotateMotor_duty_cycle2_L0+1
L_RotateMotor17:
;Whey.c,270 :: 		if((duty_cycle1 < (CENTER_PWM + DEADZONE)) && (duty_cycle1 > (CENTER_PWM - DEADZONE)))
0x08B3	0x3080      	MOVLW      128
0x08B4	0x0658      	XORWF      RotateMotor_duty_cycle1_L0+1, 0
0x08B5	0x00F0      	MOVWF      R0
0x08B6	0x3080      	MOVLW      128
0x08B7	0x3A00      	XORLW      0
0x08B8	0x0270      	SUBWF      R0, 0
0x08B9	0x1D03      	BTFSS      STATUS, 2
0x08BA	0x28BD      	GOTO       L__RotateMotor102
0x08BB	0x3032      	MOVLW      50
0x08BC	0x0257      	SUBWF      RotateMotor_duty_cycle1_L0, 0
L__RotateMotor102:
0x08BD	0x1803      	BTFSC      STATUS, 0
0x08BE	0x28CD      	GOTO       L_RotateMotor20
0x08BF	0x3080      	MOVLW      128
0x08C0	0x3AFF      	XORLW      255
0x08C1	0x00F0      	MOVWF      R0
0x08C2	0x3080      	MOVLW      128
0x08C3	0x0658      	XORWF      RotateMotor_duty_cycle1_L0+1, 0
0x08C4	0x0270      	SUBWF      R0, 0
0x08C5	0x1D03      	BTFSS      STATUS, 2
0x08C6	0x28C9      	GOTO       L__RotateMotor103
0x08C7	0x0857      	MOVF       RotateMotor_duty_cycle1_L0, 0
0x08C8	0x3CCE      	SUBLW      206
L__RotateMotor103:
0x08C9	0x1803      	BTFSC      STATUS, 0
0x08CA	0x28CD      	GOTO       L_RotateMotor20
L__RotateMotor74:
;Whey.c,271 :: 		duty_cycle1 = CENTER_PWM;
0x08CB	0x01D7      	CLRF       RotateMotor_duty_cycle1_L0
0x08CC	0x01D8      	CLRF       RotateMotor_duty_cycle1_L0+1
L_RotateMotor20:
;Whey.c,273 :: 		if((duty_cycle2 < (CENTER_PWM + DEADZONE)) && (duty_cycle2 > (CENTER_PWM - DEADZONE)))
0x08CD	0x3080      	MOVLW      128
0x08CE	0x065A      	XORWF      RotateMotor_duty_cycle2_L0+1, 0
0x08CF	0x00F0      	MOVWF      R0
0x08D0	0x3080      	MOVLW      128
0x08D1	0x3A00      	XORLW      0
0x08D2	0x0270      	SUBWF      R0, 0
0x08D3	0x1D03      	BTFSS      STATUS, 2
0x08D4	0x28D7      	GOTO       L__RotateMotor104
0x08D5	0x3032      	MOVLW      50
0x08D6	0x0259      	SUBWF      RotateMotor_duty_cycle2_L0, 0
L__RotateMotor104:
0x08D7	0x1803      	BTFSC      STATUS, 0
0x08D8	0x28E7      	GOTO       L_RotateMotor23
0x08D9	0x3080      	MOVLW      128
0x08DA	0x3AFF      	XORLW      255
0x08DB	0x00F0      	MOVWF      R0
0x08DC	0x3080      	MOVLW      128
0x08DD	0x065A      	XORWF      RotateMotor_duty_cycle2_L0+1, 0
0x08DE	0x0270      	SUBWF      R0, 0
0x08DF	0x1D03      	BTFSS      STATUS, 2
0x08E0	0x28E3      	GOTO       L__RotateMotor105
0x08E1	0x0859      	MOVF       RotateMotor_duty_cycle2_L0, 0
0x08E2	0x3CCE      	SUBLW      206
L__RotateMotor105:
0x08E3	0x1803      	BTFSC      STATUS, 0
0x08E4	0x28E7      	GOTO       L_RotateMotor23
L__RotateMotor73:
;Whey.c,274 :: 		duty_cycle2 = CENTER_PWM;
0x08E5	0x01D9      	CLRF       RotateMotor_duty_cycle2_L0
0x08E6	0x01DA      	CLRF       RotateMotor_duty_cycle2_L0+1
L_RotateMotor23:
;Whey.c,276 :: 		if(duty_cycle1 >= 0){
0x08E7	0x3080      	MOVLW      128
0x08E8	0x0658      	XORWF      RotateMotor_duty_cycle1_L0+1, 0
0x08E9	0x00F0      	MOVWF      R0
0x08EA	0x3080      	MOVLW      128
0x08EB	0x0270      	SUBWF      R0, 0
0x08EC	0x1D03      	BTFSS      STATUS, 2
0x08ED	0x28F0      	GOTO       L__RotateMotor106
0x08EE	0x3000      	MOVLW      0
0x08EF	0x0257      	SUBWF      RotateMotor_duty_cycle1_L0, 0
L__RotateMotor106:
0x08F0	0x1C03      	BTFSS      STATUS, 0
0x08F1	0x290A      	GOTO       L_RotateMotor24
;Whey.c,277 :: 		PwmSteering(1,2);                        //coloca no sentido anti horario de rotacao
0x08F2	0x3001      	MOVLW      1
0x08F3	0x00E5      	MOVWF      FARG_PwmSteering_channel
0x08F4	0x3000      	MOVLW      0
0x08F5	0x00E6      	MOVWF      FARG_PwmSteering_channel+1
0x08F6	0x3002      	MOVLW      2
0x08F7	0x00E7      	MOVWF      FARG_PwmSteering_port
0x08F8	0x3000      	MOVLW      0
0x08F9	0x00E8      	MOVWF      FARG_PwmSteering_port+1
0x08FA	0x3180      	MOVLP      0
0x08FB	0x2609      	CALL       _PwmSteering
0x08FC	0x3188      	MOVLP      8
;Whey.c,278 :: 		SetDutyCycle(1,duty_cycle1);                     //aplica o duty cycle
0x08FD	0x3001      	MOVLW      1
0x08FE	0x0020      	MOVLB      0
0x08FF	0x00E5      	MOVWF      FARG_SetDutyCycle_channel
0x0900	0x3000      	MOVLW      0
0x0901	0x00E6      	MOVWF      FARG_SetDutyCycle_channel+1
0x0902	0x0857      	MOVF       RotateMotor_duty_cycle1_L0, 0
0x0903	0x00E7      	MOVWF      FARG_SetDutyCycle_duty
0x0904	0x0858      	MOVF       RotateMotor_duty_cycle1_L0+1, 0
0x0905	0x00E8      	MOVWF      FARG_SetDutyCycle_duty+1
0x0906	0x3180      	MOVLP      0
0x0907	0x25F0      	CALL       _SetDutyCycle
0x0908	0x3188      	MOVLP      8
;Whey.c,279 :: 		}
0x0909	0x2926      	GOTO       L_RotateMotor25
L_RotateMotor24:
;Whey.c,281 :: 		PwmSteering(1,1);                       //coloca no sentido horario de rotacao
0x090A	0x3001      	MOVLW      1
0x090B	0x0020      	MOVLB      0
0x090C	0x00E5      	MOVWF      FARG_PwmSteering_channel
0x090D	0x3000      	MOVLW      0
0x090E	0x00E6      	MOVWF      FARG_PwmSteering_channel+1
0x090F	0x3001      	MOVLW      1
0x0910	0x00E7      	MOVWF      FARG_PwmSteering_port
0x0911	0x3000      	MOVLW      0
0x0912	0x00E8      	MOVWF      FARG_PwmSteering_port+1
0x0913	0x3180      	MOVLP      0
0x0914	0x2609      	CALL       _PwmSteering
0x0915	0x3188      	MOVLP      8
;Whey.c,282 :: 		SetDutyCycle(1,-duty_cycle1);           //aplica o duty cycle
0x0916	0x3001      	MOVLW      1
0x0917	0x0020      	MOVLB      0
0x0918	0x00E5      	MOVWF      FARG_SetDutyCycle_channel
0x0919	0x3000      	MOVLW      0
0x091A	0x00E6      	MOVWF      FARG_SetDutyCycle_channel+1
0x091B	0x0857      	MOVF       RotateMotor_duty_cycle1_L0, 0
0x091C	0x3C00      	SUBLW      0
0x091D	0x00E7      	MOVWF      FARG_SetDutyCycle_duty
0x091E	0x0858      	MOVF       RotateMotor_duty_cycle1_L0+1, 0
0x091F	0x1C03      	BTFSS      STATUS, 0
0x0920	0x3E01      	ADDLW      1
0x0921	0x01E8      	CLRF       FARG_SetDutyCycle_duty+1
0x0922	0x02E8      	SUBWF      FARG_SetDutyCycle_duty+1, 1
0x0923	0x3180      	MOVLP      0
0x0924	0x25F0      	CALL       _SetDutyCycle
0x0925	0x3188      	MOVLP      8
;Whey.c,283 :: 		}
L_RotateMotor25:
;Whey.c,285 :: 		if(duty_cycle2 >= 0){
0x0926	0x3080      	MOVLW      128
0x0927	0x0020      	MOVLB      0
0x0928	0x065A      	XORWF      RotateMotor_duty_cycle2_L0+1, 0
0x0929	0x00F0      	MOVWF      R0
0x092A	0x3080      	MOVLW      128
0x092B	0x0270      	SUBWF      R0, 0
0x092C	0x1D03      	BTFSS      STATUS, 2
0x092D	0x2930      	GOTO       L__RotateMotor107
0x092E	0x3000      	MOVLW      0
0x092F	0x0259      	SUBWF      RotateMotor_duty_cycle2_L0, 0
L__RotateMotor107:
0x0930	0x1C03      	BTFSS      STATUS, 0
0x0931	0x294A      	GOTO       L_RotateMotor26
;Whey.c,286 :: 		PwmSteering(2,2);                        //coloca no sentido anti horario de rotacao
0x0932	0x3002      	MOVLW      2
0x0933	0x00E5      	MOVWF      FARG_PwmSteering_channel
0x0934	0x3000      	MOVLW      0
0x0935	0x00E6      	MOVWF      FARG_PwmSteering_channel+1
0x0936	0x3002      	MOVLW      2
0x0937	0x00E7      	MOVWF      FARG_PwmSteering_port
0x0938	0x3000      	MOVLW      0
0x0939	0x00E8      	MOVWF      FARG_PwmSteering_port+1
0x093A	0x3180      	MOVLP      0
0x093B	0x2609      	CALL       _PwmSteering
0x093C	0x3188      	MOVLP      8
;Whey.c,287 :: 		SetDutyCycle(2,duty_cycle2);                      //aplica o duty cycle
0x093D	0x3002      	MOVLW      2
0x093E	0x0020      	MOVLB      0
0x093F	0x00E5      	MOVWF      FARG_SetDutyCycle_channel
0x0940	0x3000      	MOVLW      0
0x0941	0x00E6      	MOVWF      FARG_SetDutyCycle_channel+1
0x0942	0x0859      	MOVF       RotateMotor_duty_cycle2_L0, 0
0x0943	0x00E7      	MOVWF      FARG_SetDutyCycle_duty
0x0944	0x085A      	MOVF       RotateMotor_duty_cycle2_L0+1, 0
0x0945	0x00E8      	MOVWF      FARG_SetDutyCycle_duty+1
0x0946	0x3180      	MOVLP      0
0x0947	0x25F0      	CALL       _SetDutyCycle
0x0948	0x3188      	MOVLP      8
;Whey.c,288 :: 		}
0x0949	0x2966      	GOTO       L_RotateMotor27
L_RotateMotor26:
;Whey.c,290 :: 		PwmSteering(2,1);                       //coloca no sentido horario de rotacao
0x094A	0x3002      	MOVLW      2
0x094B	0x0020      	MOVLB      0
0x094C	0x00E5      	MOVWF      FARG_PwmSteering_channel
0x094D	0x3000      	MOVLW      0
0x094E	0x00E6      	MOVWF      FARG_PwmSteering_channel+1
0x094F	0x3001      	MOVLW      1
0x0950	0x00E7      	MOVWF      FARG_PwmSteering_port
0x0951	0x3000      	MOVLW      0
0x0952	0x00E8      	MOVWF      FARG_PwmSteering_port+1
0x0953	0x3180      	MOVLP      0
0x0954	0x2609      	CALL       _PwmSteering
0x0955	0x3188      	MOVLP      8
;Whey.c,291 :: 		SetDutyCycle(2,-duty_cycle2);            //aplica o duty cycle
0x0956	0x3002      	MOVLW      2
0x0957	0x0020      	MOVLB      0
0x0958	0x00E5      	MOVWF      FARG_SetDutyCycle_channel
0x0959	0x3000      	MOVLW      0
0x095A	0x00E6      	MOVWF      FARG_SetDutyCycle_channel+1
0x095B	0x0859      	MOVF       RotateMotor_duty_cycle2_L0, 0
0x095C	0x3C00      	SUBLW      0
0x095D	0x00E7      	MOVWF      FARG_SetDutyCycle_duty
0x095E	0x085A      	MOVF       RotateMotor_duty_cycle2_L0+1, 0
0x095F	0x1C03      	BTFSS      STATUS, 0
0x0960	0x3E01      	ADDLW      1
0x0961	0x01E8      	CLRF       FARG_SetDutyCycle_duty+1
0x0962	0x02E8      	SUBWF      FARG_SetDutyCycle_duty+1, 1
0x0963	0x3180      	MOVLP      0
0x0964	0x25F0      	CALL       _SetDutyCycle
0x0965	0x3188      	MOVLP      8
;Whey.c,292 :: 		}
L_RotateMotor27:
;Whey.c,293 :: 		}
L_end_RotateMotor:
0x0966	0x0008      	RETURN
; end of _RotateMotor
_Calibration:
;Whey.c,417 :: 		void Calibration(){
;Whey.c,425 :: 		signal1_L_value = 20000;                    //Tempo maximo, frequencia = 50 ... T=20ms
0x0967	0x3020      	MOVLW      32
0x0968	0x0020      	MOVLB      0
0x0969	0x00DB      	MOVWF      Calibration_signal1_L_value_L0
0x096A	0x304E      	MOVLW      78
0x096B	0x00DC      	MOVWF      Calibration_signal1_L_value_L0+1
;Whey.c,426 :: 		signal2_L_value = 20000;                    //Tempo maximo, frequencia = 50 ... T=20ms
0x096C	0x3020      	MOVLW      32
0x096D	0x00DD      	MOVWF      Calibration_signal2_L_value_L0
0x096E	0x304E      	MOVLW      78
0x096F	0x00DE      	MOVWF      Calibration_signal2_L_value_L0+1
;Whey.c,427 :: 		signal1_H_value = 0;                        //Tempo minimo
0x0970	0x01D7      	CLRF       Calibration_signal1_H_value_L0
0x0971	0x01D8      	CLRF       Calibration_signal1_H_value_L0+1
;Whey.c,428 :: 		signal2_H_value = 0;                        //Tempo minimo
0x0972	0x01D9      	CLRF       Calibration_signal2_H_value_L0
0x0973	0x01DA      	CLRF       Calibration_signal2_H_value_L0+1
;Whey.c,429 :: 		time_control = Micros();                    //controla o tempo de captura
0x0974	0x3180      	MOVLP      0
0x0975	0x25C2      	CALL       _Micros
0x0976	0x3188      	MOVLP      8
0x0977	0x0870      	MOVF       R0, 0
0x0978	0x00E1      	MOVWF      Calibration_time_control_L0
0x0979	0x0871      	MOVF       R1, 0
0x097A	0x00E2      	MOVWF      Calibration_time_control_L0+1
0x097B	0x0872      	MOVF       R2, 0
0x097C	0x00E3      	MOVWF      Calibration_time_control_L0+2
0x097D	0x0873      	MOVF       R3, 0
0x097E	0x00E4      	MOVWF      Calibration_time_control_L0+3
;Whey.c,430 :: 		CALIB_LED = 1;                              //indica a captura do pulso
0x097F	0x178D      	BSF        RB7_bit, BitPos(RB7_bit+0)
;Whey.c,432 :: 		while((Micros() - time_control) < 2000000){
L_Calibration49:
0x0980	0x3180      	MOVLP      0
0x0981	0x25C2      	CALL       _Micros
0x0982	0x3188      	MOVLP      8
0x0983	0x0870      	MOVF       R0, 0
0x0984	0x00F4      	MOVWF      R4
0x0985	0x0871      	MOVF       R1, 0
0x0986	0x00F5      	MOVWF      R5
0x0987	0x0872      	MOVF       R2, 0
0x0988	0x00F6      	MOVWF      R6
0x0989	0x0873      	MOVF       R3, 0
0x098A	0x00F7      	MOVWF      R7
0x098B	0x0861      	MOVF       Calibration_time_control_L0, 0
0x098C	0x02F4      	SUBWF      R4, 1
0x098D	0x0862      	MOVF       Calibration_time_control_L0+1, 0
0x098E	0x3BF5      	SUBWFB     R5, 1
0x098F	0x0863      	MOVF       Calibration_time_control_L0+2, 0
0x0990	0x3BF6      	SUBWFB     R6, 1
0x0991	0x0864      	MOVF       Calibration_time_control_L0+3, 0
0x0992	0x3BF7      	SUBWFB     R7, 1
0x0993	0x3000      	MOVLW      0
0x0994	0x0277      	SUBWF      R7, 0
0x0995	0x1D03      	BTFSS      STATUS, 2
0x0996	0x29A1      	GOTO       L__Calibration116
0x0997	0x301E      	MOVLW      30
0x0998	0x0276      	SUBWF      R6, 0
0x0999	0x1D03      	BTFSS      STATUS, 2
0x099A	0x29A1      	GOTO       L__Calibration116
0x099B	0x3084      	MOVLW      132
0x099C	0x0275      	SUBWF      R5, 0
0x099D	0x1D03      	BTFSS      STATUS, 2
0x099E	0x29A1      	GOTO       L__Calibration116
0x099F	0x3080      	MOVLW      128
0x09A0	0x0274      	SUBWF      R4, 0
L__Calibration116:
0x09A1	0x1803      	BTFSC      STATUS, 0
0x09A2	0x29C4      	GOTO       L_Calibration50
;Whey.c,433 :: 		signal_T_value = (unsigned) timeDownSignal1;   //valor da largura do pulso do canal1
0x09A3	0x0845      	MOVF       _timeDownSignal1, 0
0x09A4	0x00DF      	MOVWF      Calibration_signal_T_value_L0
0x09A5	0x0846      	MOVF       _timeDownSignal1+1, 0
0x09A6	0x00E0      	MOVWF      Calibration_signal_T_value_L0+1
;Whey.c,434 :: 		if(signal_T_value < signal1_L_value)
0x09A7	0x085C      	MOVF       Calibration_signal1_L_value_L0+1, 0
0x09A8	0x0246      	SUBWF      _timeDownSignal1+1, 0
0x09A9	0x1D03      	BTFSS      STATUS, 2
0x09AA	0x29AD      	GOTO       L__Calibration117
0x09AB	0x085B      	MOVF       Calibration_signal1_L_value_L0, 0
0x09AC	0x0245      	SUBWF      _timeDownSignal1, 0
L__Calibration117:
0x09AD	0x1803      	BTFSC      STATUS, 0
0x09AE	0x29B3      	GOTO       L_Calibration51
;Whey.c,435 :: 		signal1_L_value = signal_T_value;
0x09AF	0x085F      	MOVF       Calibration_signal_T_value_L0, 0
0x09B0	0x00DB      	MOVWF      Calibration_signal1_L_value_L0
0x09B1	0x0860      	MOVF       Calibration_signal_T_value_L0+1, 0
0x09B2	0x00DC      	MOVWF      Calibration_signal1_L_value_L0+1
L_Calibration51:
;Whey.c,437 :: 		signal_T_value = (unsigned) timeDownSignal2;   //valor da largura do pulso do canal2
0x09B3	0x0849      	MOVF       _timeDownSignal2, 0
0x09B4	0x00DF      	MOVWF      Calibration_signal_T_value_L0
0x09B5	0x084A      	MOVF       _timeDownSignal2+1, 0
0x09B6	0x00E0      	MOVWF      Calibration_signal_T_value_L0+1
;Whey.c,438 :: 		if(signal_T_value < signal2_L_value)
0x09B7	0x085E      	MOVF       Calibration_signal2_L_value_L0+1, 0
0x09B8	0x024A      	SUBWF      _timeDownSignal2+1, 0
0x09B9	0x1D03      	BTFSS      STATUS, 2
0x09BA	0x29BD      	GOTO       L__Calibration118
0x09BB	0x085D      	MOVF       Calibration_signal2_L_value_L0, 0
0x09BC	0x0249      	SUBWF      _timeDownSignal2, 0
L__Calibration118:
0x09BD	0x1803      	BTFSC      STATUS, 0
0x09BE	0x29C3      	GOTO       L_Calibration52
;Whey.c,439 :: 		signal2_L_value = signal_T_value;
0x09BF	0x085F      	MOVF       Calibration_signal_T_value_L0, 0
0x09C0	0x00DD      	MOVWF      Calibration_signal2_L_value_L0
0x09C1	0x0860      	MOVF       Calibration_signal_T_value_L0+1, 0
0x09C2	0x00DE      	MOVWF      Calibration_signal2_L_value_L0+1
L_Calibration52:
;Whey.c,440 :: 		}
0x09C3	0x2980      	GOTO       L_Calibration49
L_Calibration50:
;Whey.c,444 :: 		LowerSignificative8Bits = signal1_L_value & 0xff;        //seleciona os 8 bits menos significativos
0x09C4	0x30FF      	MOVLW      255
0x09C5	0x055B      	ANDWF      Calibration_signal1_L_value_L0, 0
0x09C6	0x00F3      	MOVWF      R3
0x09C7	0x0873      	MOVF       R3, 0
0x09C8	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,445 :: 		MoreSignificative8Bits = (signal1_L_value >> 8) & 0xff; //seleciona os 8 bits mais significativos
0x09C9	0x085C      	MOVF       Calibration_signal1_L_value_L0+1, 0
0x09CA	0x00F0      	MOVWF      R0
0x09CB	0x01F1      	CLRF       R1
0x09CC	0x30FF      	MOVLW      255
0x09CD	0x0570      	ANDWF      R0, 0
0x09CE	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,446 :: 		EEPROM_Write(0X00,LowerSignificative8Bits);
0x09CF	0x01E5      	CLRF       FARG_EEPROM_Write_Address
0x09D0	0x0873      	MOVF       R3, 0
0x09D1	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x09D2	0x3180      	MOVLP      0
0x09D3	0x24A1      	CALL       _EEPROM_Write
0x09D4	0x3188      	MOVLP      8
;Whey.c,447 :: 		delay_ms(10);
0x09D5	0x301A      	MOVLW      26
0x09D6	0x00FC      	MOVWF      R12
0x09D7	0x30F8      	MOVLW      248
0x09D8	0x00FD      	MOVWF      R13
L_Calibration53:
0x09D9	0x0BFD      	DECFSZ     R13, 1
0x09DA	0x29D9      	GOTO       L_Calibration53
0x09DB	0x0BFC      	DECFSZ     R12, 1
0x09DC	0x29D9      	GOTO       L_Calibration53
0x09DD	0x0000      	NOP
;Whey.c,448 :: 		EEPROM_Write(0X01,MoreSignificative8Bits);
0x09DE	0x3001      	MOVLW      1
0x09DF	0x0020      	MOVLB      0
0x09E0	0x00E5      	MOVWF      FARG_EEPROM_Write_Address
0x09E1	0x0837      	MOVF       _MoreSignificative8Bits, 0
0x09E2	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x09E3	0x3180      	MOVLP      0
0x09E4	0x24A1      	CALL       _EEPROM_Write
0x09E5	0x3188      	MOVLP      8
;Whey.c,449 :: 		delay_ms(10);
0x09E6	0x301A      	MOVLW      26
0x09E7	0x00FC      	MOVWF      R12
0x09E8	0x30F8      	MOVLW      248
0x09E9	0x00FD      	MOVWF      R13
L_Calibration54:
0x09EA	0x0BFD      	DECFSZ     R13, 1
0x09EB	0x29EA      	GOTO       L_Calibration54
0x09EC	0x0BFC      	DECFSZ     R12, 1
0x09ED	0x29EA      	GOTO       L_Calibration54
0x09EE	0x0000      	NOP
;Whey.c,452 :: 		LowerSignificative8Bits = signal2_L_value & 0xff;        //seleciona os 8 bits menos significativos
0x09EF	0x30FF      	MOVLW      255
0x09F0	0x0020      	MOVLB      0
0x09F1	0x055D      	ANDWF      Calibration_signal2_L_value_L0, 0
0x09F2	0x00F3      	MOVWF      R3
0x09F3	0x0873      	MOVF       R3, 0
0x09F4	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,453 :: 		MoreSignificative8Bits = (signal2_L_value >> 8) & 0xff; //seleciona os 8 bits mais significativos
0x09F5	0x085E      	MOVF       Calibration_signal2_L_value_L0+1, 0
0x09F6	0x00F0      	MOVWF      R0
0x09F7	0x01F1      	CLRF       R1
0x09F8	0x30FF      	MOVLW      255
0x09F9	0x0570      	ANDWF      R0, 0
0x09FA	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,454 :: 		EEPROM_Write(0X02,LowerSignificative8Bits);
0x09FB	0x3002      	MOVLW      2
0x09FC	0x00E5      	MOVWF      FARG_EEPROM_Write_Address
0x09FD	0x0873      	MOVF       R3, 0
0x09FE	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x09FF	0x3180      	MOVLP      0
0x0A00	0x24A1      	CALL       _EEPROM_Write
0x0A01	0x3188      	MOVLP      8
;Whey.c,455 :: 		delay_ms(10);
0x0A02	0x301A      	MOVLW      26
0x0A03	0x00FC      	MOVWF      R12
0x0A04	0x30F8      	MOVLW      248
0x0A05	0x00FD      	MOVWF      R13
L_Calibration55:
0x0A06	0x0BFD      	DECFSZ     R13, 1
0x0A07	0x2A06      	GOTO       L_Calibration55
0x0A08	0x0BFC      	DECFSZ     R12, 1
0x0A09	0x2A06      	GOTO       L_Calibration55
0x0A0A	0x0000      	NOP
;Whey.c,456 :: 		EEPROM_Write(0X03,MoreSignificative8Bits);
0x0A0B	0x3003      	MOVLW      3
0x0A0C	0x0020      	MOVLB      0
0x0A0D	0x00E5      	MOVWF      FARG_EEPROM_Write_Address
0x0A0E	0x0837      	MOVF       _MoreSignificative8Bits, 0
0x0A0F	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x0A10	0x3180      	MOVLP      0
0x0A11	0x24A1      	CALL       _EEPROM_Write
0x0A12	0x3188      	MOVLP      8
;Whey.c,457 :: 		delay_ms(10);
0x0A13	0x301A      	MOVLW      26
0x0A14	0x00FC      	MOVWF      R12
0x0A15	0x30F8      	MOVLW      248
0x0A16	0x00FD      	MOVWF      R13
L_Calibration56:
0x0A17	0x0BFD      	DECFSZ     R13, 1
0x0A18	0x2A17      	GOTO       L_Calibration56
0x0A19	0x0BFC      	DECFSZ     R12, 1
0x0A1A	0x2A17      	GOTO       L_Calibration56
0x0A1B	0x0000      	NOP
;Whey.c,459 :: 		CalibrationLedBlink(1600);                      //indica a captura do valor minimo
0x0A1C	0x3040      	MOVLW      64
0x0A1D	0x0020      	MOVLB      0
0x0A1E	0x00E5      	MOVWF      FARG_CalibrationLedBlink_time_ms
0x0A1F	0x3006      	MOVLW      6
0x0A20	0x00E6      	MOVWF      FARG_CalibrationLedBlink_time_ms+1
0x0A21	0x3180      	MOVLP      0
0x0A22	0x23AF      	CALL       _CalibrationLedBlink
0x0A23	0x3188      	MOVLP      8
;Whey.c,460 :: 		time_control = Micros();                    //controla o tempo de captura
0x0A24	0x3180      	MOVLP      0
0x0A25	0x25C2      	CALL       _Micros
0x0A26	0x3188      	MOVLP      8
0x0A27	0x0870      	MOVF       R0, 0
0x0A28	0x00E1      	MOVWF      Calibration_time_control_L0
0x0A29	0x0871      	MOVF       R1, 0
0x0A2A	0x00E2      	MOVWF      Calibration_time_control_L0+1
0x0A2B	0x0872      	MOVF       R2, 0
0x0A2C	0x00E3      	MOVWF      Calibration_time_control_L0+2
0x0A2D	0x0873      	MOVF       R3, 0
0x0A2E	0x00E4      	MOVWF      Calibration_time_control_L0+3
;Whey.c,461 :: 		CALIB_LED = 1;                              //indica a captura do pulso
0x0A2F	0x178D      	BSF        RB7_bit, BitPos(RB7_bit+0)
;Whey.c,463 :: 		while((Micros() - time_control) < 2000000){
L_Calibration57:
0x0A30	0x3180      	MOVLP      0
0x0A31	0x25C2      	CALL       _Micros
0x0A32	0x3188      	MOVLP      8
0x0A33	0x0870      	MOVF       R0, 0
0x0A34	0x00F4      	MOVWF      R4
0x0A35	0x0871      	MOVF       R1, 0
0x0A36	0x00F5      	MOVWF      R5
0x0A37	0x0872      	MOVF       R2, 0
0x0A38	0x00F6      	MOVWF      R6
0x0A39	0x0873      	MOVF       R3, 0
0x0A3A	0x00F7      	MOVWF      R7
0x0A3B	0x0861      	MOVF       Calibration_time_control_L0, 0
0x0A3C	0x02F4      	SUBWF      R4, 1
0x0A3D	0x0862      	MOVF       Calibration_time_control_L0+1, 0
0x0A3E	0x3BF5      	SUBWFB     R5, 1
0x0A3F	0x0863      	MOVF       Calibration_time_control_L0+2, 0
0x0A40	0x3BF6      	SUBWFB     R6, 1
0x0A41	0x0864      	MOVF       Calibration_time_control_L0+3, 0
0x0A42	0x3BF7      	SUBWFB     R7, 1
0x0A43	0x3000      	MOVLW      0
0x0A44	0x0277      	SUBWF      R7, 0
0x0A45	0x1D03      	BTFSS      STATUS, 2
0x0A46	0x2A51      	GOTO       L__Calibration119
0x0A47	0x301E      	MOVLW      30
0x0A48	0x0276      	SUBWF      R6, 0
0x0A49	0x1D03      	BTFSS      STATUS, 2
0x0A4A	0x2A51      	GOTO       L__Calibration119
0x0A4B	0x3084      	MOVLW      132
0x0A4C	0x0275      	SUBWF      R5, 0
0x0A4D	0x1D03      	BTFSS      STATUS, 2
0x0A4E	0x2A51      	GOTO       L__Calibration119
0x0A4F	0x3080      	MOVLW      128
0x0A50	0x0274      	SUBWF      R4, 0
L__Calibration119:
0x0A51	0x1803      	BTFSC      STATUS, 0
0x0A52	0x2A75      	GOTO       L_Calibration58
;Whey.c,464 :: 		signal_T_value = (unsigned) timeDownSignal1;   //valor da largura do pulso do canal1
0x0A53	0x0020      	MOVLB      0
0x0A54	0x0845      	MOVF       _timeDownSignal1, 0
0x0A55	0x00DF      	MOVWF      Calibration_signal_T_value_L0
0x0A56	0x0846      	MOVF       _timeDownSignal1+1, 0
0x0A57	0x00E0      	MOVWF      Calibration_signal_T_value_L0+1
;Whey.c,466 :: 		if(signal_T_value > signal1_H_value)
0x0A58	0x0846      	MOVF       _timeDownSignal1+1, 0
0x0A59	0x0258      	SUBWF      Calibration_signal1_H_value_L0+1, 0
0x0A5A	0x1D03      	BTFSS      STATUS, 2
0x0A5B	0x2A5E      	GOTO       L__Calibration120
0x0A5C	0x0845      	MOVF       _timeDownSignal1, 0
0x0A5D	0x0257      	SUBWF      Calibration_signal1_H_value_L0, 0
L__Calibration120:
0x0A5E	0x1803      	BTFSC      STATUS, 0
0x0A5F	0x2A64      	GOTO       L_Calibration59
;Whey.c,467 :: 		signal1_H_value = signal_T_value;
0x0A60	0x085F      	MOVF       Calibration_signal_T_value_L0, 0
0x0A61	0x00D7      	MOVWF      Calibration_signal1_H_value_L0
0x0A62	0x0860      	MOVF       Calibration_signal_T_value_L0+1, 0
0x0A63	0x00D8      	MOVWF      Calibration_signal1_H_value_L0+1
L_Calibration59:
;Whey.c,469 :: 		signal_T_value = (unsigned) timeDownSignal2;   //valor da largura do pulso do canal1
0x0A64	0x0849      	MOVF       _timeDownSignal2, 0
0x0A65	0x00DF      	MOVWF      Calibration_signal_T_value_L0
0x0A66	0x084A      	MOVF       _timeDownSignal2+1, 0
0x0A67	0x00E0      	MOVWF      Calibration_signal_T_value_L0+1
;Whey.c,471 :: 		if(signal_T_value > signal2_H_value)
0x0A68	0x084A      	MOVF       _timeDownSignal2+1, 0
0x0A69	0x025A      	SUBWF      Calibration_signal2_H_value_L0+1, 0
0x0A6A	0x1D03      	BTFSS      STATUS, 2
0x0A6B	0x2A6E      	GOTO       L__Calibration121
0x0A6C	0x0849      	MOVF       _timeDownSignal2, 0
0x0A6D	0x0259      	SUBWF      Calibration_signal2_H_value_L0, 0
L__Calibration121:
0x0A6E	0x1803      	BTFSC      STATUS, 0
0x0A6F	0x2A74      	GOTO       L_Calibration60
;Whey.c,472 :: 		signal2_H_value = signal_T_value;
0x0A70	0x085F      	MOVF       Calibration_signal_T_value_L0, 0
0x0A71	0x00D9      	MOVWF      Calibration_signal2_H_value_L0
0x0A72	0x0860      	MOVF       Calibration_signal_T_value_L0+1, 0
0x0A73	0x00DA      	MOVWF      Calibration_signal2_H_value_L0+1
L_Calibration60:
;Whey.c,473 :: 		}
0x0A74	0x2A30      	GOTO       L_Calibration57
L_Calibration58:
0x0A75	0x0020      	MOVLB      0
;Whey.c,476 :: 		LowerSignificative8Bits = signal1_H_value & 0xff;        //seleciona os 8 bits menos significativos
0x0A76	0x30FF      	MOVLW      255
0x0A77	0x0557      	ANDWF      Calibration_signal1_H_value_L0, 0
0x0A78	0x00F3      	MOVWF      R3
0x0A79	0x0873      	MOVF       R3, 0
0x0A7A	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,477 :: 		MoreSignificative8Bits = (signal1_H_value >> 8) & 0xff; //seleciona os 8 bits mais significativos
0x0A7B	0x0858      	MOVF       Calibration_signal1_H_value_L0+1, 0
0x0A7C	0x00F0      	MOVWF      R0
0x0A7D	0x01F1      	CLRF       R1
0x0A7E	0x30FF      	MOVLW      255
0x0A7F	0x0570      	ANDWF      R0, 0
0x0A80	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,478 :: 		EEPROM_Write(0X04,LowerSignificative8Bits);
0x0A81	0x3004      	MOVLW      4
0x0A82	0x00E5      	MOVWF      FARG_EEPROM_Write_Address
0x0A83	0x0873      	MOVF       R3, 0
0x0A84	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x0A85	0x3180      	MOVLP      0
0x0A86	0x24A1      	CALL       _EEPROM_Write
0x0A87	0x3188      	MOVLP      8
;Whey.c,479 :: 		delay_ms(10);
0x0A88	0x301A      	MOVLW      26
0x0A89	0x00FC      	MOVWF      R12
0x0A8A	0x30F8      	MOVLW      248
0x0A8B	0x00FD      	MOVWF      R13
L_Calibration61:
0x0A8C	0x0BFD      	DECFSZ     R13, 1
0x0A8D	0x2A8C      	GOTO       L_Calibration61
0x0A8E	0x0BFC      	DECFSZ     R12, 1
0x0A8F	0x2A8C      	GOTO       L_Calibration61
0x0A90	0x0000      	NOP
;Whey.c,480 :: 		EEPROM_Write(0X05,MoreSignificative8Bits);
0x0A91	0x3005      	MOVLW      5
0x0A92	0x0020      	MOVLB      0
0x0A93	0x00E5      	MOVWF      FARG_EEPROM_Write_Address
0x0A94	0x0837      	MOVF       _MoreSignificative8Bits, 0
0x0A95	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x0A96	0x3180      	MOVLP      0
0x0A97	0x24A1      	CALL       _EEPROM_Write
0x0A98	0x3188      	MOVLP      8
;Whey.c,481 :: 		delay_ms(10);
0x0A99	0x301A      	MOVLW      26
0x0A9A	0x00FC      	MOVWF      R12
0x0A9B	0x30F8      	MOVLW      248
0x0A9C	0x00FD      	MOVWF      R13
L_Calibration62:
0x0A9D	0x0BFD      	DECFSZ     R13, 1
0x0A9E	0x2A9D      	GOTO       L_Calibration62
0x0A9F	0x0BFC      	DECFSZ     R12, 1
0x0AA0	0x2A9D      	GOTO       L_Calibration62
0x0AA1	0x0000      	NOP
;Whey.c,483 :: 		LowerSignificative8Bits = signal2_H_value & 0xff;        //seleciona os 8 bits menos significativos
0x0AA2	0x30FF      	MOVLW      255
0x0AA3	0x0020      	MOVLB      0
0x0AA4	0x0559      	ANDWF      Calibration_signal2_H_value_L0, 0
0x0AA5	0x00F3      	MOVWF      R3
0x0AA6	0x0873      	MOVF       R3, 0
0x0AA7	0x00B8      	MOVWF      _LowerSignificative8Bits
;Whey.c,484 :: 		MoreSignificative8Bits = (signal2_H_value >> 8) & 0xff; //seleciona os 8 bits mais significativos
0x0AA8	0x085A      	MOVF       Calibration_signal2_H_value_L0+1, 0
0x0AA9	0x00F0      	MOVWF      R0
0x0AAA	0x01F1      	CLRF       R1
0x0AAB	0x30FF      	MOVLW      255
0x0AAC	0x0570      	ANDWF      R0, 0
0x0AAD	0x00B7      	MOVWF      _MoreSignificative8Bits
;Whey.c,485 :: 		EEPROM_Write(0X06,LowerSignificative8Bits);
0x0AAE	0x3006      	MOVLW      6
0x0AAF	0x00E5      	MOVWF      FARG_EEPROM_Write_Address
0x0AB0	0x0873      	MOVF       R3, 0
0x0AB1	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x0AB2	0x3180      	MOVLP      0
0x0AB3	0x24A1      	CALL       _EEPROM_Write
0x0AB4	0x3188      	MOVLP      8
;Whey.c,486 :: 		delay_ms(10);
0x0AB5	0x301A      	MOVLW      26
0x0AB6	0x00FC      	MOVWF      R12
0x0AB7	0x30F8      	MOVLW      248
0x0AB8	0x00FD      	MOVWF      R13
L_Calibration63:
0x0AB9	0x0BFD      	DECFSZ     R13, 1
0x0ABA	0x2AB9      	GOTO       L_Calibration63
0x0ABB	0x0BFC      	DECFSZ     R12, 1
0x0ABC	0x2AB9      	GOTO       L_Calibration63
0x0ABD	0x0000      	NOP
;Whey.c,487 :: 		EEPROM_Write(0X07,MoreSignificative8Bits);
0x0ABE	0x3007      	MOVLW      7
0x0ABF	0x0020      	MOVLB      0
0x0AC0	0x00E5      	MOVWF      FARG_EEPROM_Write_Address
0x0AC1	0x0837      	MOVF       _MoreSignificative8Bits, 0
0x0AC2	0x00E6      	MOVWF      FARG_EEPROM_Write_data_
0x0AC3	0x3180      	MOVLP      0
0x0AC4	0x24A1      	CALL       _EEPROM_Write
0x0AC5	0x3188      	MOVLP      8
;Whey.c,488 :: 		delay_ms(10);
0x0AC6	0x301A      	MOVLW      26
0x0AC7	0x00FC      	MOVWF      R12
0x0AC8	0x30F8      	MOVLW      248
0x0AC9	0x00FD      	MOVWF      R13
L_Calibration64:
0x0ACA	0x0BFD      	DECFSZ     R13, 1
0x0ACB	0x2ACA      	GOTO       L_Calibration64
0x0ACC	0x0BFC      	DECFSZ     R12, 1
0x0ACD	0x2ACA      	GOTO       L_Calibration64
0x0ACE	0x0000      	NOP
;Whey.c,490 :: 		CalibrationLedBlink(1600);                      //indica a captura do valor maximo
0x0ACF	0x3040      	MOVLW      64
0x0AD0	0x0020      	MOVLB      0
0x0AD1	0x00E5      	MOVWF      FARG_CalibrationLedBlink_time_ms
0x0AD2	0x3006      	MOVLW      6
0x0AD3	0x00E6      	MOVWF      FARG_CalibrationLedBlink_time_ms+1
0x0AD4	0x3180      	MOVLP      0
0x0AD5	0x23AF      	CALL       _CalibrationLedBlink
0x0AD6	0x3188      	MOVLP      8
;Whey.c,491 :: 		CALIB_LED = 0;
0x0AD7	0x138D      	BCF        RB7_bit, BitPos(RB7_bit+0)
;Whey.c,493 :: 		ReadSignalsDataEEPROM();
0x0AD8	0x3180      	MOVLP      0
0x0AD9	0x23E5      	CALL       _ReadSignalsDataEEPROM
0x0ADA	0x3188      	MOVLP      8
;Whey.c,494 :: 		}
L_end_Calibration:
0x0ADB	0x0008      	RETURN
; end of _Calibration
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [179]    _interrupt
0x00B7       [7]    _RES032
0x00BE      [12]    _COMFREM
0x00CA       [4]    _FIXSIGN32
0x00CE     [300]    _SDIV3232L
0x01FA      [12]    _SETFUN32
0x0206      [54]    _Mul_32x32_U
0x023C      [11]    _EEPROM_Read
0x0247      [28]    _Div_16X16_U
0x0263     [178]    _Div_32x32_S
0x0315       [3]    _SETFDZ32
0x0318      [12]    _SETFOV32
0x0324       [6]    _Delay_22us
0x032A      [47]    _NRM3232
0x0359      [62]    _Map
0x0397      [24]    _ADC_Get_Sample
0x03AF      [54]    _CalibrationLedBlink
0x03E5      [77]    _ReadSignalsDataEEPROM
0x0432      [15]    _ADC_Init
0x0441      [96]    _Mul_32x32_FP
0x04A1      [30]    _EEPROM_Write
0x04BF      [79]    _Compare_Double
0x050E     [180]    _Div_32x32_FP
0x05C2      [25]    _Micros
0x05DB      [21]    _word2double
0x05F0      [25]    _SetDutyCycle
0x0609      [76]    _PwmSteering
0x0655      [73]    _FailSafeCheck
0x069E      [54]    _ErrorLedBlink
0x06D4      [52]    _BatteryCheck
0x0708      [29]    _SetupPwms
0x0725      [12]    _SetupTimer1
0x0731       [9]    ___CC2DW
0x073A      [40]    _SetupPort
0x0762      [84]    _main
0x0800     [359]    _RotateMotor
0x0967     [373]    _Calibration
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [0]    PEIE_bit
0x000B       [0]    GIE_bit
0x000B       [1]    INTCON
0x000C       [0]    RA4_bit
0x000C       [0]    RA5_bit
0x000C       [0]    RA3_bit
0x000D       [0]    RB7_bit
0x000E       [0]    RC7_bit
0x000E       [0]    RC5_bit
0x000E       [0]    RC4_bit
0x0011       [0]    TMR1IF_bit
0x0012       [0]    CCP2IF_bit
0x0013       [0]    CCP4IF_bit
0x0016       [1]    TMR1L
0x0017       [1]    TMR1H
0x0018       [0]    T1CKPS1_bit
0x0018       [0]    T1CKPS0_bit
0x0018       [0]    TMR1CS1_bit
0x0018       [0]    TMR1CS0_bit
0x0018       [0]    TMR1ON_bit
0x001B       [1]    PR2
0x001C       [1]    T2CON
0x0020       [1]    ___math_tempb
0x0021       [1]    __math_tempbD
0x0029       [2]    _maxDurationCH1
0x002B       [2]    _minDurationCH2
0x002D       [2]    _maxDurationCH2
0x002F       [2]    _minDurationCH1
0x0031       [2]    _numberInterruptionsTimer1
0x0033       [4]    _timeUpSignal2
0x0037       [1]    _MoreSignificative8Bits
0x0038       [1]    _LowerSignificative8Bits
0x0039       [4]    _lastMeasure2
0x003D       [4]    _lastMeasure1
0x0041       [4]    _receivedVoltage
0x0045       [4]    _timeDownSignal1
0x0049       [4]    _timeDownSignal2
0x004D       [4]    _ADC_Get_Sample_Ptr
0x0051       [4]    _timeUpSignal1
0x0055       [2]    _readDivisionVoltage
0x0057       [2]    RotateMotor_duty_cycle1_L0
0x0057       [2]    Calibration_signal1_H_value_L0
0x0057       [2]    FARG_ErrorLedBlink_time_ms
0x0059       [2]    RotateMotor_duty_cycle2_L0
0x0059       [2]    ErrorLedBlink_i_L0
0x0059       [2]    Calibration_signal2_H_value_L0
0x005B       [4]    RotateMotor_pulseWidth2_L0
0x005B       [2]    Calibration_signal1_L_value_L0
0x005D       [2]    Calibration_signal2_L_value_L0
0x005F       [2]    Calibration_signal_T_value_L0
0x0061       [4]    Calibration_time_control_L0
0x0065       [2]    FARG_SetDutyCycle_channel
0x0065       [1]    FARG_ADC_Get_Sample_channel
0x0065       [2]    FARG_CalibrationLedBlink_time_ms
0x0065       [2]    FARG_PwmSteering_channel
0x0065       [1]    FARG_EEPROM_Write_Address
0x0066       [1]    FARG_EEPROM_Write_data_
0x0067       [2]    CalibrationLedBlink_i_L0
0x0067       [2]    FARG_PwmSteering_port
0x0067       [2]    FARG_SetDutyCycle_duty
0x0069       [1]    FARG_EEPROM_Read_Address
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [0]    TRISA1_bit
0x008C       [0]    TRISA5_bit
0x008C       [0]    TRISA0_bit
0x008C       [0]    TRISA2_bit
0x008C       [0]    TRISA4_bit
0x008C       [0]    TRISA3_bit
0x008D       [0]    TRISB7_bit
0x008D       [0]    TRISB6_bit
0x008D       [0]    TRISB4_bit
0x008D       [0]    TRISB5_bit
0x008E       [0]    TRISC0_bit
0x008E       [0]    TRISC1_bit
0x008E       [0]    TRISC2_bit
0x008E       [0]    TRISC3_bit
0x008E       [0]    TRISC4_bit
0x008E       [0]    TRISC7_bit
0x008E       [0]    TRISC6_bit
0x008E       [0]    TRISC5_bit
0x0091       [0]    TMR1IE_bit
0x0092       [0]    CCP2IE_bit
0x0093       [0]    CCP4IE_bit
0x0099       [1]    OSCCON
0x009B       [1]    ADRESL
0x009C       [1]    ADRESH
0x009D       [0]    GO_NOT_DONE_bit
0x009D       [0]    ADON_bit
0x009D       [1]    ADCON0
0x009E       [1]    ADCON1
0x00A0       [4]    FARG_Map_x
0x00A4       [4]    FARG_Map_in_min
0x00A8       [4]    FARG_Map_in_max
0x00AC       [4]    FARG_Map_out_min
0x00B0       [4]    FARG_Map_out_max
0x0111       [1]    CM1CON0
0x0113       [1]    CM2CON0
0x011E       [0]    P2BSEL_bit
0x011E       [0]    CCP2SEL_bit
0x018C       [1]    ANSELA
0x018D       [1]    ANSELB
0x018E       [1]    ANSELC
0x0191       [2]    EEADR
0x0193       [2]    EEDAT
0x0193       [1]    EEDATL
0x0195       [0]    RD_bit
0x0195       [0]    WR_bit
0x0195       [0]    WREN_bit
0x0195       [0]    EEPGD_bit
0x0195       [0]    CFGS_bit
0x0196       [1]    EECON2
0x0291       [1]    CCPR1L
0x0296       [1]    PSTR1CON
0x0298       [1]    CCPR2L
0x029A       [1]    CCP2CON
0x029A       [0]    CCP2M0_bit
0x029D       [1]    PSTR2CON
0x029E       [1]    CCPTMRS
0x031A       [0]    CCP4M0_bit
0x031A       [1]    CCP4CON
